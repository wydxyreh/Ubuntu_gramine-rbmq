# FIXME This is the old version of feature_erlc, possibily useful
# for finding some errors that need to be caught and presented.
[doc Tests of using enable_feature as an option to erlc]

[include features.luxinc]

[macro syntax-error expr]
    ?syntax error before: $expr
[endmacro]

[invoke setup]

[newshell cmds]
    !export OTP_TEST_FEATURES=true
    ?SH-PROMPT:
    !export ERLC_USE_SERVER=$erlcserver
    ?SH-PROMPT:
    [invoke compile feature_ignorant.erl ""]
    ?SH-PROMPT:
    [invoke ok]

    # Different error message when ifn is not in parser
    [invoke compile feature_ignorant.erl "+'{feature, ifn_expr, enable}'"]
    ?syntax error before:
    ?syntax error before: ifn
    ?SH-PROMPT:
    [invoke notok]

    # Different error message when ifn is not in parser
    [invoke compile feature_ignorant.erl "-enable-feature ifn_expr"]
    ?syntax error before:
    ?syntax error before: ifn
    ?SH-PROMPT:
    [invoke notok]

    [invoke compile feature_ignorant.erl "+'{feature, while_expr, enable}'"]
    ?syntax error before: while
    ?syntax error before: while
    ?syntax error before: until
    ?SH-PROMPT:
    [invoke notok]

    [invoke compile feature_ignorant.erl "-enable-feature while_expr"]
    ?syntax error before: while
    ?syntax error before: while
    ?syntax error before: until
    ?SH-PROMPT:
    [invoke notok]

    # Different error message when ifn not in parser
    [invoke compile feature_ignorant.erl "+'{feature, ifn_expr, enable}' +'{feature, while_expr, enable}'"]
    ?syntax error before:
    ?syntax error before: while
    ?syntax error before: until
    ?syntax error before: ifn
    ?SH-PROMPT:
    [invoke notok]

    # Different error message when ifn not in parser
    [invoke compile feature_ignorant.erl "-enable-feature ifn_expr -enable-feature while_expr"]
    ?syntax error before:
    ?syntax error before: while
    ?syntax error before: until
    ?syntax error before: ifn
    ?SH-PROMPT:
    [invoke notok]

    [invoke compile feature_ifn.erl ""]
    ?SH-PROMPT:
    [invoke ok]

    [invoke compile feature_ifn.erl "'+{feature, ifn_expr, enable}'"]
    ?SH-PROMPT:
    [invoke ok]

    [invoke compile feature_ifn.erl "-enable-feature ifn_expr"]
    ?SH-PROMPT:
    [invoke ok]

    [invoke compile feature_ifn.erl "'+{feature, while_expr, enable}'"]
    [invoke syntax-error while]
    [invoke syntax-error until]
    ?SH-PROMPT:
    [invoke notok]

    [invoke compile feature_ifn.erl "-enable-feature while_expr"]
    [invoke syntax-error while]
    [invoke syntax-error until]
    ?SH-PROMPT:
    [invoke notok]

    [invoke compile feature_ifn.erl "'+{feature, while_expr, enable}' '+{feature, ifn_expr, enable}'"]
    [invoke syntax-error while]
    [invoke syntax-error until]
    ?SH-PROMPT:
    [invoke notok]

    [invoke compile feature_ifn.erl "-enable-feature while_expr -enable-feature ifn_expr"]
    [invoke syntax-error while]
    [invoke syntax-error until]
    ?SH-PROMPT:
    [invoke notok]

    [invoke compile feature_maybe.erl ""]
    ?SH-PROMPT:
    [invoke ok]

    [invoke compile feature_maybe.erl "'+{feature, while_expr, enable}'"]
    ?SH-PROMPT:
    [invoke ok]

    # Different error message when ifn not in parser
    [invoke compile feature_maybe.erl "'+{feature, ifn_expr, enable}'"]
    [invoke syntax-error ifn]
    ?SH-PROMPT:
    [invoke notok]

    # Different error message when ifn not in parser
    [invoke compile feature_maybe.erl "'+{feature, while_expr, enable}' '+{feature, ifn_expr, enable}'"]
    [invoke syntax-error ifn]
    ?SH-PROMPT:
    [invoke notok]

    [invoke compile feature_maybe_ifn.erl ""]
    ?SH-PROMPT:
    [invoke ok]

    [invoke compile feature_maybe_ifn.erl "'+{feature, while_expr, enable}'"]
    ?SH-PROMPT:
    [invoke ok]

    [invoke compile feature_maybe_ifn.erl "'+{feature, ifn_expr, enable}'"]
    ?SH-PROMPT:
    [invoke ok]

    [invoke compile feature_maybe_ifn.erl "'+{feature, while_expr, enable}' '+{feature, ifn_expr, enable}'"]
    ?SH-PROMPT:
    [invoke ok]

[newshell erl]
    !export OTP_TEST_FEATURES=true
    ?SH-PROMPT:
    !erl
    ?$ERLPROMPT
    [invoke erl-compile feature_ignorant.erl []]
    ???{ok,feature_ignorant}
    ?$ERLPROMPT

    # Different error message when ifn not in parser
    [invoke erl-compile feature_ignorant.erl [{feature,ifn_expr,enable}]]
    ?syntax error before: ifn
    ?syntax error before: ifn
    ?error
    ?$ERLPROMPT

[cleanup]
    [invoke no-dump]
    !rm -fr $outdir
