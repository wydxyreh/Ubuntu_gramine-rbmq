##
## %CopyrightBegin%
##
## Copyright Ericsson AB 2021-2022. All Rights Reserved.
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##     http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
## %CopyrightEnd%
##

[doc Tests of using enable_feature as an option to erlc]

[include features.luxinc]

[macro syntax-error expr]
    ?syntax error before: $expr
[endmacro]

[invoke setup]

[newshell cmds]
    !export OTP_TEST_FEATURES=true
    ?SH-PROMPT:
    -Unknown option
    # DO not user erlc server as it seems that under "sometimes" new
    # servers are added and left lingering
    !export ERLC_USE_SERVER=$erlcserver
    ?SH-PROMPT:
    [invoke compile ignorant.erl ""]
    ?SH-PROMPT:
    [invoke ok]

    [invoke compile ignorant.erl "+'{feature, ifn, enable}'"]
    ?the feature 'ifn' does not exist
    ?SH-PROMPT:
    [invoke notok]

    [invoke compile ignorant.erl "+'{feature, maybe, enable}'"]
    ?the feature 'maybe' does not exist
    ?SH-PROMPT:
    [invoke notok]

    [invoke compile ignorant.erl "+'{feature, ifn, enable}' +'{feature, maybe, enable}'"]
    # FIXME these are in the wrong order
    ??the features 'maybe' and 'ifn' do not exist
    ?SH-PROMPT:
    [invoke notok]

    [invoke compile f_ifn.erl ""]
    ?SH-PROMPT:
    [invoke ok]

    [invoke compile f_ifn.erl "-enable-feature ifn"]
    ?the feature 'ifn' does not exist
    [invoke notok]

    [invoke compile f_ifn.erl "'+{feature, maybe, enable}'"]
    ?the feature 'maybe' does not exist
    ?SH-PROMPT:
    [invoke notok]

    [invoke compile f_ifn.erl "-enable-feature maybe"]
    ?the feature 'maybe' does not exist
    ?SH-PROMPT:
    [invoke notok]

    [invoke compile f_ifn.erl "'+{feature, maybe, enable}' '+{feature, ifn, enable}'"]
    # FIXME Fix order!
    ??the features 'ifn' and 'maybe' do not exist
    ?SH-PROMPT:
    [invoke notok]

    [invoke compile f_ifn.erl "-enable-feature maybe -enable-feature ifn"]
    # FIXME Fix order!
    ??the features 'maybe' and 'ifn' do not exist
    ?SH-PROMPT:
    [invoke notok]

    [invoke compile f_maybe.erl ""]
    ?SH-PROMPT:
    [invoke ok]

    [invoke compile f_maybe.erl "'+{feature, maybe, enable}'"]
    ?the feature 'maybe' does not exist
    [invoke notok]

    [invoke compile f_maybe.erl "-enable-feature maybe"]
    ?the feature 'maybe' does not exist
    [invoke notok]

    [invoke compile f_maybe.erl "'+{feature, ifn, enable}'"]
    ?the feature 'ifn' does not exist
    ?SH-PROMPT:
    [invoke notok]

    [invoke compile f_maybe.erl "-enable-feature ifn"]
    ?the feature 'ifn' does not exist
    ?SH-PROMPT:
    [invoke notok]

    [invoke compile f_maybe.erl "'+{feature, maybe, enable}' '+{feature, ifn, enable}'"]
    # FIXME fix order
    ??the features 'ifn' and 'maybe' do not exist
    ?SH-PROMPT:
    [invoke notok]

    [invoke compile f_maybe.erl "-enable-feature maybe -enable-feature ifn"]
    # FIXE fix order
    ??the features 'maybe' and 'ifn' do not exist
    ?SH-PROMPT:
    [invoke notok]

    [invoke compile f_maybe.erl "-enable-feature maybe -enable-feature ifn -enable-feature unless"]
    # FIXME fix order
    ??the features 'maybe', 'ifn' and 'unless' do not exist
    ?SH-PROMPT:
    [invoke notok]

    [invoke compile f_maybe_ifn.erl ""]
    ?SH-PROMPT:
    [invoke ok]


    # This file has instances of -feature(enable, ..}) inside
    [invoke compile f_incorrect_directives.erl ""]
    # FIXME Should we report an incorrect feature when it is in the wrong place?
    # ?the feature 'ifn' does not exist
    # ?%.*[0-9]+\| -feature
    ?feature directive not allowed after anything interesting
    ?%.*[0-9]+\| -feature

[newshell erl]
    !export OTP_TEST_FEATURES=true
    ?SH-PROMPT:
    -undefined function
    !erl -pa $outdir
    ?$ERLPROMPT
    [invoke erl-compile ignorant.erl []]
    ???{ok,ignorant}
    ?$ERLPROMPT

    [invoke erl-compile ignorant.erl [{feature,ifn,enable}]]
    ?the feature 'ifn' does not exist
    ?error
    ?$ERLPROMPT

    [invoke erl-compile ignorant.erl [{feature,ifn,enable},{feature,while,enable}]]
    ??the features 'ifn' and 'while' do not exist
    ?error
    ?$ERLPROMPT

    [invoke erl-compile ignorant.erl [{feature,unless,enable},{feature,ifn,enable},{feature,while,enable}]]
    ??the features 'unless', 'ifn' and 'while' do not exist
    ?error
    ?$ERLPROMPT

    [invoke erl-compile f_directives.erl []]
    ???{ok,f_directives}
    ?$ERLPROMPT

    # Test a sequence of enable and disable of the same feature
    # FIXME This should perhaps be elsewhere
    [invoke erl-compile f_directives_2.erl []]
    ???{ok,f_directives_2}
    ?$ERLPROMPT

[shell cmds]
    # Enable a feature on the command line and disable it in a directive
    # FIXME This should perhaps be elsewhere
    [invoke compile f_directives_3.erl "-enable-feature while_expr"]
    [invoke ok]

    [invoke compile f_macros.erl ""]
    ?SH-PROMPT:
    [invoke ok]

[shell erl]
    # Verify that only ifn_expr is used
    !Fs = erl_features:used(f_directives_2).
    ?$ERLPROMPT
    [invoke same-members Fs "[ifn_expr,cond_expr,maps]"]
    !f(Fs).
    ?$ERLPROMPT

    # Verify that only ifn_expr is used
    !Fs = erl_features:used(f_directives_3).
    ?$ERLPROMPT
    [invoke same-members Fs "[ifn_expr,cond_expr,maps]"]
    !f(Fs).
    ?$ERLPROMPT

    !l(f_macros).
    ?{module,f_macros}
    ?$ERLPROMPT

    !f_macros:has_ifn().
    ?true
    ?$ERLPROMPT

    !f_macros:has_hindly_milner().
    ?false
    ?$ERLPROMPT

    !f_macros:uses_ifn().
    ?false
    ?$ERLPROMPT

    !f_macros:uses_maybe().
    ?false
    ?$ERLPROMPT



[shell cmds]
    [invoke compile f_incorrect_disable.erl "-disable-feature ifn"]
    ?the feature 'ifn' does not exist
    ?SH-PROMPT:
    [invoke notok]

    [invoke compile f_incorrect_disable.erl ""]
    ?the feature 'unless' does not exist
    ?%.*[0-9]+\| -feature
    ?SH-PROMPT:
    [invoke notok]

[cleanup]
    [invoke no-dump]
    !rm -fr $outdir
