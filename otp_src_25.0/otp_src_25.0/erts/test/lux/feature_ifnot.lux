##
## %CopyrightBegin%
##
## Copyright Ericsson AB 2021-2022. All Rights Reserved.
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##     http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
## %CopyrightEnd%
##

[doc Testing of more general experimental feature]

[include features.luxinc]

[invoke setup]

[newshell erl]
    !export OTP_TEST_FEATURES=true
    ?SH-PROMPT:
    -undefined function
    !erl -pa $outdir
    ?$ERLPROMPT

    !erl_features:enable_feature(ifnot_expr).
    ?[ifnot_expr]
    ?$ERLPROMPT

    !ifnot false -> 40 + 2 end.
    ?42
    ?$ERLPROMPT

    !ifnot true -> 42 end.
    ?ok
    ?$ERLPROMPT

    !ifnot begin X = 2, X > 2 end -> true end.
    ?true
    ?$ERLPROMPT
    !f(X).
    ?$ERLPROMPT

    # Names bound are exported
    !ifnot begin X = 3, X > 4 end -> Y=7+X, X end.
    ?3
    ?$ERLPROMPT
    !Y.
    ?10
    ?$ERLPROMPT

[newshell cmds]
    !export OTP_TEST_FEATURES=true
    ?SH-PROMPT:
    [invoke compile f_ifnot.erl ""]
    ?SH-PROMPT:
    [invoke ok]

[shell erl]
    !l(f_ifnot).
    ??{module,f_ifnot}
    ?$ERLPROMPT

    !f_ifnot:f0().
    ?42
    ?$ERLPROMPT

    !f_ifnot:f1().
    ?ok
    ?$ERLPROMPT

    !f_ifnot:f2().
    ?true
    ?$ERLPROMPT

    !f_ifnot:f3().
    ??{3,10}
    ?$ERLPROMPT

    !f_ifnot:f4(true).
    ?ok
    ?$ERLPROMPT

    !f_ifnot:f4(false).
    ?foo
    ?$ERLPROMPT

    !f_ifnot:f4(foo).
    ?not_boolean
    ?$ERLPROMPT

[shell cmds]
    [invoke compile f_bad_ifnot.erl ""]
    # FIXME It should really be 'ifnot' since it is reserved (at that point)
    ?variable 'Y' unsafe in ifnot
    ?SH-PROMPT
    [invoke notok]

    # Moved from feature_erlc.lux.  This assumes that ifn is available
    # in parser, which is no longer true.
[shell cmds]
    [invoke compile f_use_ifn.erl ""]
    ?syntax error before: X
    ?SH-PROMPT:
    [invoke notok]

    [invoke compile f_use_ifn.erl "-enable-feature ifn_expr"]
    ?SH-PROMPT:
    [invoke ok]

    [shell erl]
    !f_use_ifn:use_ifn(0).
    ???!(0 > 0)
    ?$ERLPROMPT

    # Moved from feature_erlcold.lux as ifn is no longer present in parser
    [invoke compile feature_ignorant.erl "+'{feature, ifn_expr, enable}'"]
    ?syntax error before: ','
    ?syntax error before: ifn
    ?SH-PROMPT:
    [invoke notok]

    [invoke compile feature_ignorant.erl "-enable-feature ifn_expr"]
    ?syntax error before: ','
    ?syntax error before: ifn
    ?SH-PROMPT:
    [invoke notok]

    [invoke compile feature_ignorant.erl "+'{feature, ifn_expr, enable}' +'{feature, maybe_expr, enable}'"]
    ?syntax error before: ','
    ?syntax error before: maybe
    ?syntax error before: else
    ?syntax error before: ifn
    ?SH-PROMPT:
    [invoke notok]

    [invoke compile feature_ignorant.erl "-enable-feature ifn_expr -enable-feature maybe_expr"]
    ?syntax error before: ','
    ?syntax error before: maybe
    ?syntax error before: else
    ?syntax error before: ifn
    ?SH-PROMPT:
    [invoke notok]

    [invoke compile feature_maybe.erl "'+{feature, ifn_expr, enable}'"]
    [invoke syntax-error ',']
    ?SH-PROMPT:
    [invoke notok]

    [invoke compile feature_maybe.erl "'+{feature, maybe_expr, enable}' '+{feature, ifn_expr, enable}'"]
    [invoke syntax-error ',']
    ?SH-PROMPT:
    [invoke notok]

    # This file has instances of -compile({feature, .., enable}) inside
    [invoke compile feature_directive_maybe_ifn.erl "-enable-feature ifn_expr"]
    ?SH-PROMPT:
    [invoke ok]

[shell erl]
    [invoke erl-compile feature_ignorant.erl [{feature,ifn_expr,enable}]]
    ?syntax error before: ','
    ?syntax error before: ifn
    ?error
    ?$ERLPROMPT

    # Moved from feature_output.lux
[newshell compile]
    !export OTP_TEST_FEATURES=true
    ?SH-PROMPT:
    !export ERLC_USE_SERVER=$erlcserver
    ?SH-PROMPT:
    # This file has instances of -compile({feature, .., enable}) inside
    [invoke compile feature_directive_maybe_ifn.erl "-enable-feature ifn_expr"]
    ?SH-PROMPT:
    [invoke ok]

[shell erl]
    !l(feature_directive_maybe_ifn).
    ??{module,feature_directive_maybe_ifn}
    ?$ERLPROMPT

    !feature_directive_maybe_ifn:foo().
    ??['ifn','maybe','else','if']
    ?$ERLPROMPT

[cleanup]
    !rm -fr $outdir
