<module name="persistent_term">
<type>
  <name>key</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-key">key()</marker> = <seetype marker="erlang#term">term()</seetype></typehead></typedecl>
</type>
<type>
  <name>value</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-value">value()</marker> = <seetype marker="erlang#term">term()</seetype></typehead></typedecl>
</type>
<spec>
  <name>erase</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>erase(Key) -&gt; Result</head>
      <guard>
        <subtype><typename>Key</typename><string>Key = <seetype marker="#key">key()</seetype></string></subtype>
        <subtype><typename>Result</typename><string>Result = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Key</anno>
  <anno>Result</anno>
</spec>
<spec>
  <name>get</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>get() -&gt; List</head>
      <guard>
        <subtype><typename>List</typename><string>List = [{<seetype marker="#key">key()</seetype>, <seetype marker="#value">value()</seetype>}]</string></subtype>
      </guard></clause>
  </contract>
  <anno>List</anno>
</spec>
<spec>
  <name>get</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>get(Key) -&gt; Value</head>
      <guard>
        <subtype><typename>Key</typename><string>Key = <seetype marker="#key">key()</seetype></string></subtype>
        <subtype><typename>Value</typename><string>Value = <seetype marker="#value">value()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Key</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>get</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>get(Key, Default) -&gt; Value</head>
      <guard>
        <subtype><typename>Key</typename><string>Key = <seetype marker="#key">key()</seetype></string></subtype>
        <subtype><typename>Default</typename><string>Default = Value = <seetype marker="#value">value()</seetype></string></subtype>
        <subtype><typename>Value</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Default</anno>
  <anno>Key</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>info</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>info() -&gt; Info</head>
      <guard>
        <subtype><typename>Info</typename><string>Info = #{count := Count, memory := Memory}</string></subtype>
        <subtype><typename>Count</typename><string>Count = Memory = <seetype marker="erlang#non_neg_integer">integer() &gt;= 0</seetype></string></subtype>
        <subtype><typename>Memory</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Count</anno>
  <anno>Info</anno>
  <anno>Memory</anno>
</spec>
<spec>
  <name>put</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>put(Key, Value) -&gt; ok</head>
      <guard>
        <subtype><typename>Key</typename><string>Key = <seetype marker="#key">key()</seetype></string></subtype>
        <subtype><typename>Value</typename><string>Value = <seetype marker="#value">value()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Key</anno>
  <anno>Value</anno>
</spec>
<timestamp>Generated by EDoc, May 17 2022, 21:45:53.</timestamp>
</module>