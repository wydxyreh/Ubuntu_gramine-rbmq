<module name="logger_formatter">
<type>
  <name>config</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-config">config()</marker> = <br/><nbsp/><nbsp/><nbsp/><nbsp/>#{chars_limit =&gt; <seetype marker="erlang#pos_integer">integer() &gt;= 1</seetype> | unlimited,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>depth =&gt; <seetype marker="erlang#pos_integer">integer() &gt;= 1</seetype> | unlimited,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>legacy_header =&gt; <seetype marker="erlang#boolean">boolean()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>max_size =&gt; <seetype marker="erlang#pos_integer">integer() &gt;= 1</seetype> | unlimited,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>report_cb =&gt; <seetype marker="logger#report_cb">logger:report_cb()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>single_line =&gt; <seetype marker="erlang#boolean">boolean()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>template =&gt; <seetype marker="#template">template()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>time_designator =&gt; <seetype marker="erlang#byte">byte()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>time_offset =&gt; <seetype marker="erlang#integer">integer()</seetype> | [<seetype marker="erlang#byte">byte()</seetype>]}</typehead></typedecl>
</type>
<type>
  <name>metakey</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-metakey">metakey()</marker> = <seetype marker="erlang#atom">atom()</seetype> | [<seetype marker="erlang#atom">atom()</seetype>]</typehead></typedecl>
</type>
<type>
  <name>template</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-template">template()</marker> = <br/><nbsp/><nbsp/><nbsp/><nbsp/>[<seetype marker="#metakey">metakey()</seetype> |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seetype marker="#metakey">metakey()</seetype>, <seetype marker="#template">template()</seetype>, <seetype marker="#template">template()</seetype>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="unicode#chardata">unicode:chardata()</seetype>]</typehead></typedecl>
</type>
<spec>
  <name>check_config</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>check_config(Config) -&gt; ok | {error, <seetype marker="erlang#term">term()</seetype>}</head>
      <guard>
        <subtype><typename>Config</typename><string>Config = <seetype marker="#config">config()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Config</anno>
</spec>
<spec>
  <name>format</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>format(LogEvent, Config) -&gt; <seetype marker="unicode#chardata">unicode:chardata()</seetype></head>
      <guard>
        <subtype><typename>LogEvent</typename><string>LogEvent = <seetype marker="logger#log_event">logger:log_event()</seetype></string></subtype>
        <subtype><typename>Config</typename><string>Config = <seetype marker="#config">config()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Config</anno>
  <anno>LogEvent</anno>
</spec>
<timestamp>Generated by EDoc, May 17 2022, 21:43:35.</timestamp>
</module>