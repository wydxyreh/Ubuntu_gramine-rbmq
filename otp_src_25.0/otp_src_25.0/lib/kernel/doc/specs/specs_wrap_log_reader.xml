<module name="wrap_log_reader">
<type>
  <name>chunk_ret</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-chunk_ret">chunk_ret()</marker> = <br/><nbsp/><nbsp/><nbsp/><nbsp/>{Continuation2, Terms :: [<seetype marker="erlang#term">term()</seetype>]} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{Continuation2,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Terms :: [<seetype marker="erlang#term">term()</seetype>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Badbytes :: <seetype marker="erlang#non_neg_integer">integer() &gt;= 0</seetype>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{Continuation2, eof} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{error, Reason :: <seetype marker="erlang#term">term()</seetype>}</typehead></typedecl>
  <anno>Badbytes</anno>
  <anno>Continuation2</anno>
  <anno>Reason</anno>
  <anno>Terms</anno>
</type>
<type>
  <name>continuation</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-continuation">continuation()</marker></typehead></typedecl>
</type>
<type>
  <name>open_ret</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-open_ret">open_ret()</marker> = <br/><nbsp/><nbsp/><nbsp/><nbsp/>{ok, Continuation :: <seetype marker="#continuation">continuation()</seetype>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{error, Reason :: <seetype marker="erlang#tuple">tuple()</seetype>}</typehead></typedecl>
  <anno>Continuation</anno>
  <anno>Reason</anno>
</type>
<spec>
  <name>chunk</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>chunk(Continuation) -&gt; <seetype marker="#chunk_ret">chunk_ret()</seetype></head>
      <guard>
        <subtype><typename>Continuation</typename><string>Continuation = <seetype marker="#continuation">continuation()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Continuation</anno>
</spec>
<spec>
  <name>chunk</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>chunk(Continuation, N) -&gt; <seetype marker="#chunk_ret">chunk_ret()</seetype></head>
      <guard>
        <subtype><typename>Continuation</typename><string>Continuation = <seetype marker="#continuation">continuation()</seetype></string></subtype>
        <subtype><typename>N</typename><string>N = infinity | <seetype marker="erlang#pos_integer">integer() &gt;= 1</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Continuation</anno>
  <anno>N</anno>
</spec>
<spec>
  <name>close</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>close(Continuation) -&gt; ok | {error, Reason}</head>
      <guard>
        <subtype><typename>Continuation</typename><string>Continuation = <seetype marker="#continuation">continuation()</seetype></string></subtype>
        <subtype><typename>Reason</typename><string>Reason = <seetype marker="file#posix">file:posix()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Continuation</anno>
  <anno>Reason</anno>
</spec>
<spec>
  <name>open</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>open(Filename) -&gt; <seetype marker="#open_ret">open_ret()</seetype></head>
      <guard>
        <subtype><typename>Filename</typename><string>Filename = <seetype marker="erlang#string">string()</seetype> | <seetype marker="erlang#atom">atom()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Filename</anno>
</spec>
<spec>
  <name>open</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>open(Filename, N) -&gt; <seetype marker="#open_ret">open_ret()</seetype></head>
      <guard>
        <subtype><typename>Filename</typename><string>Filename = <seetype marker="erlang#string">string()</seetype> | <seetype marker="erlang#atom">atom()</seetype></string></subtype>
        <subtype><typename>N</typename><string>N = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Filename</anno>
  <anno>N</anno>
</spec>
<timestamp>Generated by EDoc, May 17 2022, 21:43:36.</timestamp>
</module>