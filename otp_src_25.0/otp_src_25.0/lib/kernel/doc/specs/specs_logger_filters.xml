<module name="logger_filters">
<spec>
  <name>domain</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>domain(LogEvent, Extra) -&gt; <seetype marker="logger#filter_return">logger:filter_return()</seetype></head>
      <guard>
        <subtype><typename>LogEvent</typename><string>LogEvent = <seetype marker="logger#log_event">logger:log_event()</seetype></string></subtype>
        <subtype><typename>Extra</typename><string>Extra = {Action, Compare, MatchDomain}</string></subtype>
        <subtype><typename>Action</typename><string>Action = log | stop</string></subtype>
        <subtype><typename>Compare</typename><string>Compare = super | sub | equal | not_equal | undefined</string></subtype>
        <subtype><typename>MatchDomain</typename><string>MatchDomain = [<seetype marker="erlang#atom">atom()</seetype>]</string></subtype>
      </guard></clause>
  </contract>
  <anno>Action</anno>
  <anno>Compare</anno>
  <anno>Extra</anno>
  <anno>LogEvent</anno>
  <anno>MatchDomain</anno>
</spec>
<spec>
  <name>level</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>level(LogEvent, Extra) -&gt; <seetype marker="logger#filter_return">logger:filter_return()</seetype></head>
      <guard>
        <subtype><typename>LogEvent</typename><string>LogEvent = <seetype marker="logger#log_event">logger:log_event()</seetype></string></subtype>
        <subtype><typename>Extra</typename><string>Extra = {Action, Operator, MatchLevel}</string></subtype>
        <subtype><typename>Action</typename><string>Action = log | stop</string></subtype>
        <subtype><typename>Operator</typename><string>Operator = neq | eq | lt | gt | lteq | gteq</string></subtype>
        <subtype><typename>MatchLevel</typename><string>MatchLevel = <seetype marker="logger#level">logger:level()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Action</anno>
  <anno>Extra</anno>
  <anno>LogEvent</anno>
  <anno>MatchLevel</anno>
  <anno>Operator</anno>
</spec>
<spec>
  <name>progress</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>progress(LogEvent, Extra) -&gt; <seetype marker="logger#filter_return">logger:filter_return()</seetype></head>
      <guard>
        <subtype><typename>LogEvent</typename><string>LogEvent = <seetype marker="logger#log_event">logger:log_event()</seetype></string></subtype>
        <subtype><typename>Extra</typename><string>Extra = log | stop</string></subtype>
      </guard></clause>
  </contract>
  <anno>Extra</anno>
  <anno>LogEvent</anno>
</spec>
<spec>
  <name>remote_gl</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>remote_gl(LogEvent, Extra) -&gt; <seetype marker="logger#filter_return">logger:filter_return()</seetype></head>
      <guard>
        <subtype><typename>LogEvent</typename><string>LogEvent = <seetype marker="logger#log_event">logger:log_event()</seetype></string></subtype>
        <subtype><typename>Extra</typename><string>Extra = log | stop</string></subtype>
      </guard></clause>
  </contract>
  <anno>Extra</anno>
  <anno>LogEvent</anno>
</spec>
<timestamp>Generated by EDoc, May 17 2022, 21:43:35.</timestamp>
</module>