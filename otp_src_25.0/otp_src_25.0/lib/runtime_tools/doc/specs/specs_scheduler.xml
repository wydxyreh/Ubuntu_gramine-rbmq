<module name="scheduler">
<type>
  <name>sched_id</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-sched_id">sched_id()</marker> = <seetype marker="erlang#integer">integer()</seetype></typehead></typedecl>
</type>
<type>
  <name>sched_sample</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-sched_sample">sched_sample()</marker></typehead></typedecl>
</type>
<type>
  <name>sched_type</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-sched_type">sched_type()</marker> = normal | cpu | io</typehead></typedecl>
</type>
<type>
  <name>sched_util_result</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-sched_util_result">sched_util_result()</marker> = <br/><nbsp/><nbsp/><nbsp/><nbsp/>[{<seetype marker="#sched_type">sched_type()</seetype>, <seetype marker="#sched_id">sched_id()</seetype>, <seetype marker="erlang#float">float()</seetype>, <seetype marker="erlang#string">string()</seetype>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{total, <seetype marker="erlang#float">float()</seetype>, <seetype marker="erlang#string">string()</seetype>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{weighted, <seetype marker="erlang#float">float()</seetype>, <seetype marker="erlang#string">string()</seetype>}]</typehead></typedecl>
</type>
<spec>
  <name>get_sample</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>get_sample() -&gt; <seetype marker="#sched_sample">sched_sample()</seetype> | undefined</head></clause>
  </contract>
</spec>
<spec>
  <name>get_sample_all</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>get_sample_all() -&gt; <seetype marker="#sched_sample">sched_sample()</seetype> | undefined</head></clause>
  </contract>
</spec>
<spec>
  <name>sample</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>sample() -&gt; <seetype marker="#sched_sample">sched_sample()</seetype></head></clause>
  </contract>
</spec>
<spec>
  <name>sample_all</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>sample_all() -&gt; <seetype marker="#sched_sample">sched_sample()</seetype></head></clause>
  </contract>
</spec>
<spec>
  <name>utilization</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>utilization(Seconds) -&gt; <seetype marker="#sched_util_result">sched_util_result()</seetype></head>
      <guard>
        <subtype><typename>Seconds</typename><string>Seconds = <seetype marker="erlang#pos_integer">integer() &gt;= 1</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Seconds</anno>
</spec>
<spec>
  <name>utilization</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>utilization(Sample) -&gt; <seetype marker="#sched_util_result">sched_util_result()</seetype></head>
      <guard>
        <subtype><typename>Sample</typename><string>Sample = <seetype marker="#sched_sample">sched_sample()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Sample</anno>
</spec>
<spec>
  <name>utilization</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>utilization(Sample1, Sample2) -&gt; <seetype marker="#sched_util_result">sched_util_result()</seetype></head>
      <guard>
        <subtype><typename>Sample1</typename><string>Sample1 = Sample2 = <seetype marker="#sched_sample">sched_sample()</seetype></string></subtype>
        <subtype><typename>Sample2</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Sample1</anno>
  <anno>Sample2</anno>
</spec>
<timestamp>Generated by EDoc, May 17 2022, 21:43:53.</timestamp>
</module>