<module name="system_information">
<spec>
  <name>application</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>application</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>applications</name>
  <arity>0</arity>
  <contract/>
</spec>
<spec>
  <name>applications</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>code_change</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>environment</name>
  <arity>0</arity>
  <contract/>
</spec>
<spec>
  <name>environment</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>from_file</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>handle_call</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>handle_cast</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>handle_info</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>init</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>load_report</name>
  <arity>0</arity>
  <contract/>
</spec>
<spec>
  <name>load_report</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>module</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>module</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>modules</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>report</name>
  <arity>0</arity>
  <contract/>
</spec>
<spec>
  <name>sanity_check</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>sanity_check() -&gt; ok | {failed, Failures}</head>
      <guard>
        <subtype><typename>Application</typename><string>Application = <seetype marker="erlang#atom">atom()</seetype></string></subtype>
        <subtype><typename>ApplicationVersion</typename><string>ApplicationVersion = <seetype marker="erlang#string">string()</seetype></string></subtype>
        <subtype><typename>MissingRuntimeDependencies</typename><string>MissingRuntimeDependencies = <br/><nbsp/><nbsp/><nbsp/><nbsp/>{missing_runtime_dependencies, ApplicationVersion,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>[ApplicationVersion]}</string></subtype>
        <subtype><typename>InvalidApplicationVersion</typename><string>InvalidApplicationVersion = <br/><nbsp/><nbsp/><nbsp/><nbsp/>{invalid_application_version, ApplicationVersion}</string></subtype>
        <subtype><typename>InvalidAppFile</typename><string>InvalidAppFile = {invalid_app_file, Application}</string></subtype>
        <subtype><typename>Failure</typename><string>Failure = <br/><nbsp/><nbsp/><nbsp/><nbsp/>MissingRuntimeDependencies | InvalidApplicationVersion |<br/><nbsp/><nbsp/><nbsp/><nbsp/>InvalidAppFile</string></subtype>
        <subtype><typename>Failures</typename><string>Failures = [Failure]</string></subtype>
      </guard></clause>
  </contract>
  <anno>Application</anno>
  <anno>ApplicationVersion</anno>
  <anno>Failure</anno>
  <anno>Failures</anno>
  <anno>InvalidAppFile</anno>
  <anno>InvalidApplicationVersion</anno>
  <anno>MissingRuntimeDependencies</anno>
</spec>
<spec>
  <name>start</name>
  <arity>0</arity>
  <contract/>
</spec>
<spec>
  <name>stop</name>
  <arity>0</arity>
  <contract/>
</spec>
<spec>
  <name>terminate</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>to_file</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>to_file(FileName) -&gt; ok | {error, Reason}</head>
      <guard>
        <subtype><typename>FileName</typename><string>FileName = <seetype marker="file#name_all">file:name_all()</seetype></string></subtype>
        <subtype><typename>Reason</typename><string>Reason = <seetype marker="file#posix">file:posix()</seetype> | badarg | terminated | system_limit</string></subtype>
      </guard></clause>
  </contract>
  <anno>FileName</anno>
  <anno>Reason</anno>
</spec>
<timestamp>Generated by EDoc, May 17 2022, 21:43:53.</timestamp>
</module>