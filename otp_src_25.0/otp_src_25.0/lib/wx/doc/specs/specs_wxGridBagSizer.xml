<module name="wxGridBagSizer">
<type>
  <name>wxGridBagSizer</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-wxGridBagSizer">wxGridBagSizer()</marker> = <seetype marker="wx#wx_object">wx:wx_object()</seetype></typehead></typedecl>
</type>
<spec>
  <name>add</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>add(This, Item) -&gt; <seetype marker="wxSizerItem#wxSizerItem">wxSizerItem:wxSizerItem()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxGridBagSizer">wxGridBagSizer()</seetype></string></subtype>
        <subtype><typename>Item</typename><string>Item = <seetype marker="wxGBSizerItem#wxGBSizerItem">wxGBSizerItem:wxGBSizerItem()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Item</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>add</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>add(This, Window, Pos) -&gt; <seetype marker="wxSizerItem#wxSizerItem">wxSizerItem:wxSizerItem()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxGridBagSizer">wxGridBagSizer()</seetype></string></subtype>
        <subtype><typename>Window</typename><string>Window = <seetype marker="wxWindow#wxWindow">wxWindow:wxWindow()</seetype> | <seetype marker="wxSizer#wxSizer">wxSizer:wxSizer()</seetype></string></subtype>
        <subtype><typename>Pos</typename><string>Pos = {R :: <seetype marker="erlang#integer">integer()</seetype>, C :: <seetype marker="erlang#integer">integer()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>C</anno>
  <anno>Pos</anno>
  <anno>R</anno>
  <anno>This</anno>
  <anno>Window</anno>
</spec>
<spec>
  <name>add</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>add(This, Width, Height, Pos) -&gt; <seetype marker="wxSizerItem#wxSizerItem">wxSizerItem:wxSizerItem()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxGridBagSizer">wxGridBagSizer()</seetype></string></subtype>
        <subtype><typename>Width</typename><string>Width = Height = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Height</typename><string/></subtype>
        <subtype><typename>Pos</typename><string>Pos = {R :: <seetype marker="erlang#integer">integer()</seetype>, C :: <seetype marker="erlang#integer">integer()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>C</anno>
  <anno>Height</anno>
  <anno>Pos</anno>
  <anno>R</anno>
  <anno>This</anno>
  <anno>Width</anno>
</spec>
<spec>
  <name>add</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>add(This, Window, Pos, Pos :: [Option]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="wxSizerItem#wxSizerItem">wxSizerItem:wxSizerItem()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxGridBagSizer">wxGridBagSizer()</seetype></string></subtype>
        <subtype><typename>Window</typename><string>Window = <seetype marker="wxWindow#wxWindow">wxWindow:wxWindow()</seetype> | <seetype marker="wxSizer#wxSizer">wxSizer:wxSizer()</seetype></string></subtype>
        <subtype><typename>Pos</typename><string>Pos = {R :: <seetype marker="erlang#integer">integer()</seetype>, C :: <seetype marker="erlang#integer">integer()</seetype>}</string></subtype>
        <subtype><typename>Option</typename><string>Option = <br/><nbsp/><nbsp/><nbsp/><nbsp/>{span, {RS :: <seetype marker="erlang#integer">integer()</seetype>, CS :: <seetype marker="erlang#integer">integer()</seetype>}} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{flag, <seetype marker="erlang#integer">integer()</seetype>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{border, <seetype marker="erlang#integer">integer()</seetype>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{userData, <seetype marker="wx#wx_object">wx:wx_object()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>C</anno>
  <anno>CS</anno>
  <anno>Option</anno>
  <anno>Pos</anno>
  <anno>R</anno>
  <anno>RS</anno>
  <anno>This</anno>
  <anno>Window</anno>
</spec>
<spec>
  <name>add</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>add(This, Width, Height, Pos, Options :: [Option]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="wxSizerItem#wxSizerItem">wxSizerItem:wxSizerItem()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxGridBagSizer">wxGridBagSizer()</seetype></string></subtype>
        <subtype><typename>Width</typename><string>Width = Height = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Height</typename><string/></subtype>
        <subtype><typename>Pos</typename><string>Pos = {R :: <seetype marker="erlang#integer">integer()</seetype>, C :: <seetype marker="erlang#integer">integer()</seetype>}</string></subtype>
        <subtype><typename>Option</typename><string>Option = <br/><nbsp/><nbsp/><nbsp/><nbsp/>{span, {RS :: <seetype marker="erlang#integer">integer()</seetype>, CS :: <seetype marker="erlang#integer">integer()</seetype>}} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{flag, <seetype marker="erlang#integer">integer()</seetype>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{border, <seetype marker="erlang#integer">integer()</seetype>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{userData, <seetype marker="wx#wx_object">wx:wx_object()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>C</anno>
  <anno>CS</anno>
  <anno>Height</anno>
  <anno>Option</anno>
  <anno>Options</anno>
  <anno>Pos</anno>
  <anno>R</anno>
  <anno>RS</anno>
  <anno>This</anno>
  <anno>Width</anno>
</spec>
<spec>
  <name>addGrowableCol</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>addGrowableCol</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>addGrowableRow</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>addGrowableRow</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>addSpacer</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>addStretchSpacer</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>addStretchSpacer</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>calcMin</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>calcMin(This) -&gt; {W :: <seetype marker="erlang#integer">integer()</seetype>, H :: <seetype marker="erlang#integer">integer()</seetype>}</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxGridBagSizer">wxGridBagSizer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>H</anno>
  <anno>This</anno>
  <anno>W</anno>
</spec>
<spec>
  <name>checkForIntersection</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>checkForIntersection(This, Item) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxGridBagSizer">wxGridBagSizer()</seetype></string></subtype>
        <subtype><typename>Item</typename><string>Item = <seetype marker="wxGBSizerItem#wxGBSizerItem">wxGBSizerItem:wxGBSizerItem()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Item</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>checkForIntersection</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>checkForIntersection(This, Pos, Span) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxGridBagSizer">wxGridBagSizer()</seetype></string></subtype>
        <subtype><typename>Pos</typename><string>Pos = {R :: <seetype marker="erlang#integer">integer()</seetype>, C :: <seetype marker="erlang#integer">integer()</seetype>}</string></subtype>
        <subtype><typename>Span</typename><string>Span = {RS :: <seetype marker="erlang#integer">integer()</seetype>, CS :: <seetype marker="erlang#integer">integer()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>C</anno>
  <anno>CS</anno>
  <anno>Pos</anno>
  <anno>R</anno>
  <anno>RS</anno>
  <anno>Span</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>checkForIntersection</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>checkForIntersection(This, Item, Span :: [Option]) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxGridBagSizer">wxGridBagSizer()</seetype></string></subtype>
        <subtype><typename>Item</typename><string>Item = <seetype marker="wxGBSizerItem#wxGBSizerItem">wxGBSizerItem:wxGBSizerItem()</seetype></string></subtype>
        <subtype><typename>Option</typename><string>Option = {excludeItem, <seetype marker="wxGBSizerItem#wxGBSizerItem">wxGBSizerItem:wxGBSizerItem()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>Item</anno>
  <anno>Option</anno>
  <anno>Span</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>checkForIntersection</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>checkForIntersection(This, Pos, Span, Options :: [Option]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxGridBagSizer">wxGridBagSizer()</seetype></string></subtype>
        <subtype><typename>Pos</typename><string>Pos = {R :: <seetype marker="erlang#integer">integer()</seetype>, C :: <seetype marker="erlang#integer">integer()</seetype>}</string></subtype>
        <subtype><typename>Span</typename><string>Span = {RS :: <seetype marker="erlang#integer">integer()</seetype>, CS :: <seetype marker="erlang#integer">integer()</seetype>}</string></subtype>
        <subtype><typename>Option</typename><string>Option = {excludeItem, <seetype marker="wxGBSizerItem#wxGBSizerItem">wxGBSizerItem:wxGBSizerItem()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>C</anno>
  <anno>CS</anno>
  <anno>Option</anno>
  <anno>Options</anno>
  <anno>Pos</anno>
  <anno>R</anno>
  <anno>RS</anno>
  <anno>Span</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>clear</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>clear</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>destroy</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>destroy(This :: <seetype marker="#wxGridBagSizer">wxGridBagSizer()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>detach</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>findItem</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>findItem(This, Window) -&gt; <seetype marker="wxGBSizerItem#wxGBSizerItem">wxGBSizerItem:wxGBSizerItem()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxGridBagSizer">wxGridBagSizer()</seetype></string></subtype>
        <subtype><typename>Window</typename><string>Window = <seetype marker="wxWindow#wxWindow">wxWindow:wxWindow()</seetype> | <seetype marker="wxSizer#wxSizer">wxSizer:wxSizer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
  <anno>Window</anno>
</spec>
<spec>
  <name>findItemAtPoint</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>findItemAtPoint(This, Pt) -&gt; <seetype marker="wxGBSizerItem#wxGBSizerItem">wxGBSizerItem:wxGBSizerItem()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxGridBagSizer">wxGridBagSizer()</seetype></string></subtype>
        <subtype><typename>Pt</typename><string>Pt = {X :: <seetype marker="erlang#integer">integer()</seetype>, Y :: <seetype marker="erlang#integer">integer()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>Pt</anno>
  <anno>This</anno>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>findItemAtPosition</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>findItemAtPosition(This, Pos) -&gt; <seetype marker="wxGBSizerItem#wxGBSizerItem">wxGBSizerItem:wxGBSizerItem()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxGridBagSizer">wxGridBagSizer()</seetype></string></subtype>
        <subtype><typename>Pos</typename><string>Pos = {R :: <seetype marker="erlang#integer">integer()</seetype>, C :: <seetype marker="erlang#integer">integer()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>C</anno>
  <anno>Pos</anno>
  <anno>R</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>findItemWithData</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>findItemWithData(This, UserData) -&gt; <seetype marker="wxGBSizerItem#wxGBSizerItem">wxGBSizerItem:wxGBSizerItem()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxGridBagSizer">wxGridBagSizer()</seetype></string></subtype>
        <subtype><typename>UserData</typename><string>UserData = <seetype marker="wx#wx_object">wx:wx_object()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
  <anno>UserData</anno>
</spec>
<spec>
  <name>fit</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>fitInside</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>getCellSize</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>getCellSize(This, Row, Col) -&gt; {W :: <seetype marker="erlang#integer">integer()</seetype>, H :: <seetype marker="erlang#integer">integer()</seetype>}</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxGridBagSizer">wxGridBagSizer()</seetype></string></subtype>
        <subtype><typename>Row</typename><string>Row = Col = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Col</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Col</anno>
  <anno>H</anno>
  <anno>Row</anno>
  <anno>This</anno>
  <anno>W</anno>
</spec>
<spec>
  <name>getChildren</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getCols</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getEmptyCellSize</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getEmptyCellSize(This) -&gt; {W :: <seetype marker="erlang#integer">integer()</seetype>, H :: <seetype marker="erlang#integer">integer()</seetype>}</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxGridBagSizer">wxGridBagSizer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>H</anno>
  <anno>This</anno>
  <anno>W</anno>
</spec>
<spec>
  <name>getFlexibleDirection</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getHGap</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getItem</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>getItem</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>getItemPosition</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getItemPosition(This, Window) -&gt; {R :: <seetype marker="erlang#integer">integer()</seetype>, C :: <seetype marker="erlang#integer">integer()</seetype>}</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxGridBagSizer">wxGridBagSizer()</seetype></string></subtype>
        <subtype><typename>Window</typename><string>Window = <seetype marker="wxWindow#wxWindow">wxWindow:wxWindow()</seetype> | <seetype marker="wxSizer#wxSizer">wxSizer:wxSizer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>C</anno>
  <anno>R</anno>
  <anno>This</anno>
  <anno>Window</anno>
</spec>
<spec>
  <name>getItemPosition</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getItemPosition(This, Index) -&gt; {R :: <seetype marker="erlang#integer">integer()</seetype>, C :: <seetype marker="erlang#integer">integer()</seetype>}</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxGridBagSizer">wxGridBagSizer()</seetype></string></subtype>
        <subtype><typename>Index</typename><string>Index = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>C</anno>
  <anno>Index</anno>
  <anno>R</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>getItemSpan</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getItemSpan(This, Window) -&gt; {RS :: <seetype marker="erlang#integer">integer()</seetype>, CS :: <seetype marker="erlang#integer">integer()</seetype>}</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxGridBagSizer">wxGridBagSizer()</seetype></string></subtype>
        <subtype><typename>Window</typename><string>Window = <seetype marker="wxWindow#wxWindow">wxWindow:wxWindow()</seetype> | <seetype marker="wxSizer#wxSizer">wxSizer:wxSizer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>CS</anno>
  <anno>RS</anno>
  <anno>This</anno>
  <anno>Window</anno>
</spec>
<spec>
  <name>getItemSpan</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getItemSpan(This, Index) -&gt; {RS :: <seetype marker="erlang#integer">integer()</seetype>, CS :: <seetype marker="erlang#integer">integer()</seetype>}</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxGridBagSizer">wxGridBagSizer()</seetype></string></subtype>
        <subtype><typename>Index</typename><string>Index = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>CS</anno>
  <anno>Index</anno>
  <anno>RS</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>getMinSize</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getNonFlexibleGrowMode</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getPosition</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getRows</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getSize</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getVGap</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>hide</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>hide</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>insert</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>insert</name>
  <arity>4</arity>
  <contract/>
</spec>
<spec>
  <name>insert</name>
  <arity>5</arity>
  <contract/>
</spec>
<spec>
  <name>insertSpacer</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>insertStretchSpacer</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>insertStretchSpacer</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>isShown</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>layout</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>new</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>new() -&gt; <seetype marker="#wxGridBagSizer">wxGridBagSizer()</seetype></head></clause>
  </contract>
</spec>
<spec>
  <name>new</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>new(Options :: [Option]) -&gt; <seetype marker="#wxGridBagSizer">wxGridBagSizer()</seetype></head>
      <guard>
        <subtype><typename>Option</typename><string>Option = {vgap, <seetype marker="erlang#integer">integer()</seetype>} | {hgap, <seetype marker="erlang#integer">integer()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>Option</anno>
  <anno>Options</anno>
</spec>
<spec>
  <name>parent_class</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>prepend</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>prepend</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>prepend</name>
  <arity>4</arity>
  <contract/>
</spec>
<spec>
  <name>prependSpacer</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>prependStretchSpacer</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>prependStretchSpacer</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>recalcSizes</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>remove</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>removeGrowableCol</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>removeGrowableRow</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>replace</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>replace</name>
  <arity>4</arity>
  <contract/>
</spec>
<spec>
  <name>setCols</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>setDimension</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>setDimension</name>
  <arity>5</arity>
  <contract/>
</spec>
<spec>
  <name>setEmptyCellSize</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setEmptyCellSize(This, Sz) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxGridBagSizer">wxGridBagSizer()</seetype></string></subtype>
        <subtype><typename>Sz</typename><string>Sz = {W :: <seetype marker="erlang#integer">integer()</seetype>, H :: <seetype marker="erlang#integer">integer()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>H</anno>
  <anno>Sz</anno>
  <anno>This</anno>
  <anno>W</anno>
</spec>
<spec>
  <name>setFlexibleDirection</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>setHGap</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>setItemMinSize</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>setItemMinSize</name>
  <arity>4</arity>
  <contract/>
</spec>
<spec>
  <name>setItemPosition</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>setItemPosition(This, Window, Pos) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxGridBagSizer">wxGridBagSizer()</seetype></string></subtype>
        <subtype><typename>Window</typename><string>Window = <seetype marker="wxWindow#wxWindow">wxWindow:wxWindow()</seetype> | <seetype marker="wxSizer#wxSizer">wxSizer:wxSizer()</seetype></string></subtype>
        <subtype><typename>Pos</typename><string>Pos = {R :: <seetype marker="erlang#integer">integer()</seetype>, C :: <seetype marker="erlang#integer">integer()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>C</anno>
  <anno>Pos</anno>
  <anno>R</anno>
  <anno>This</anno>
  <anno>Window</anno>
</spec>
<spec>
  <name>setItemPosition</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>setItemPosition(This, Index, Pos) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxGridBagSizer">wxGridBagSizer()</seetype></string></subtype>
        <subtype><typename>Index</typename><string>Index = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Pos</typename><string>Pos = {R :: <seetype marker="erlang#integer">integer()</seetype>, C :: <seetype marker="erlang#integer">integer()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>C</anno>
  <anno>Index</anno>
  <anno>Pos</anno>
  <anno>R</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setItemSpan</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>setItemSpan(This, Window, Span) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxGridBagSizer">wxGridBagSizer()</seetype></string></subtype>
        <subtype><typename>Window</typename><string>Window = <seetype marker="wxWindow#wxWindow">wxWindow:wxWindow()</seetype> | <seetype marker="wxSizer#wxSizer">wxSizer:wxSizer()</seetype></string></subtype>
        <subtype><typename>Span</typename><string>Span = {RS :: <seetype marker="erlang#integer">integer()</seetype>, CS :: <seetype marker="erlang#integer">integer()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>CS</anno>
  <anno>RS</anno>
  <anno>Span</anno>
  <anno>This</anno>
  <anno>Window</anno>
</spec>
<spec>
  <name>setItemSpan</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>setItemSpan(This, Index, Span) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxGridBagSizer">wxGridBagSizer()</seetype></string></subtype>
        <subtype><typename>Index</typename><string>Index = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Span</typename><string>Span = {RS :: <seetype marker="erlang#integer">integer()</seetype>, CS :: <seetype marker="erlang#integer">integer()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>CS</anno>
  <anno>Index</anno>
  <anno>RS</anno>
  <anno>Span</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setMinSize</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>setMinSize</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>setNonFlexibleGrowMode</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>setRows</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>setSizeHints</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>setVGap</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>setVirtualSizeHints</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>show</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>show</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>showItems</name>
  <arity>2</arity>
  <contract/>
</spec>
<timestamp>Generated by EDoc, May 17 2022, 21:44:35.</timestamp>
</module>