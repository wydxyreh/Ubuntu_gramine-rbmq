<module name="wxNotificationMessage">
<type>
  <name>wxNotificationMessage</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-wxNotificationMessage">wxNotificationMessage()</marker> = <seetype marker="wx#wx_object">wx:wx_object()</seetype></typehead></typedecl>
</type>
<spec>
  <name>addAction</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>addAction(This, Actionid) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxNotificationMessage">wxNotificationMessage()</seetype></string></subtype>
        <subtype><typename>Actionid</typename><string>Actionid = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Actionid</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>addAction</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>addAction(This, Actionid, Options :: [Option]) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxNotificationMessage">wxNotificationMessage()</seetype></string></subtype>
        <subtype><typename>Actionid</typename><string>Actionid = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Option</typename><string>Option = {label, <seetype marker="unicode#chardata">unicode:chardata()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>Actionid</anno>
  <anno>Option</anno>
  <anno>Options</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>close</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>close(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxNotificationMessage">wxNotificationMessage()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>connect</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>connect</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>destroy</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>destroy(This :: <seetype marker="#wxNotificationMessage">wxNotificationMessage()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>disconnect</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>disconnect</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>disconnect</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>mSWUseToasts</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>mSWUseToasts() -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head></clause>
  </contract>
</spec>
<spec>
  <name>mSWUseToasts</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>mSWUseToasts(Options :: [Option]) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>Option</typename><string>Option = <br/><nbsp/><nbsp/><nbsp/><nbsp/>{shortcutPath, <seetype marker="unicode#chardata">unicode:chardata()</seetype>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{appId, <seetype marker="unicode#chardata">unicode:chardata()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>Option</anno>
  <anno>Options</anno>
</spec>
<spec>
  <name>new</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>new() -&gt; <seetype marker="#wxNotificationMessage">wxNotificationMessage()</seetype></head></clause>
  </contract>
</spec>
<spec>
  <name>new</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>new(Title) -&gt; <seetype marker="#wxNotificationMessage">wxNotificationMessage()</seetype></head>
      <guard>
        <subtype><typename>Title</typename><string>Title = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Title</anno>
</spec>
<spec>
  <name>new</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>new(Title, Options :: [Option]) -&gt; <seetype marker="#wxNotificationMessage">wxNotificationMessage()</seetype></head>
      <guard>
        <subtype><typename>Title</typename><string>Title = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
        <subtype><typename>Option</typename><string>Option = <br/><nbsp/><nbsp/><nbsp/><nbsp/>{message, <seetype marker="unicode#chardata">unicode:chardata()</seetype>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{parent, <seetype marker="wxWindow#wxWindow">wxWindow:wxWindow()</seetype>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{flags, <seetype marker="erlang#integer">integer()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>Option</anno>
  <anno>Options</anno>
  <anno>Title</anno>
</spec>
<spec>
  <name>parent_class</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>setFlags</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setFlags(This, Flags) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxNotificationMessage">wxNotificationMessage()</seetype></string></subtype>
        <subtype><typename>Flags</typename><string>Flags = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Flags</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setIcon</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setIcon(This, Icon) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxNotificationMessage">wxNotificationMessage()</seetype></string></subtype>
        <subtype><typename>Icon</typename><string>Icon = <seetype marker="wxIcon#wxIcon">wxIcon:wxIcon()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Icon</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setMessage</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setMessage(This, Message) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxNotificationMessage">wxNotificationMessage()</seetype></string></subtype>
        <subtype><typename>Message</typename><string>Message = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Message</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setParent</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setParent(This, Parent) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxNotificationMessage">wxNotificationMessage()</seetype></string></subtype>
        <subtype><typename>Parent</typename><string>Parent = <seetype marker="wxWindow#wxWindow">wxWindow:wxWindow()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Parent</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setTitle</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setTitle(This, Title) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxNotificationMessage">wxNotificationMessage()</seetype></string></subtype>
        <subtype><typename>Title</typename><string>Title = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
  <anno>Title</anno>
</spec>
<spec>
  <name>show</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>show(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxNotificationMessage">wxNotificationMessage()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>show</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>show(This, Options :: [Option]) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxNotificationMessage">wxNotificationMessage()</seetype></string></subtype>
        <subtype><typename>Option</typename><string>Option = {timeout, <seetype marker="erlang#integer">integer()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>Option</anno>
  <anno>Options</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>useTaskBarIcon</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>useTaskBarIcon(Icon) -&gt; <seetype marker="wxTaskBarIcon#wxTaskBarIcon">wxTaskBarIcon:wxTaskBarIcon()</seetype></head>
      <guard>
        <subtype><typename>Icon</typename><string>Icon = <seetype marker="wxTaskBarIcon#wxTaskBarIcon">wxTaskBarIcon:wxTaskBarIcon()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Icon</anno>
</spec>
<timestamp>Generated by EDoc, May 17 2022, 21:44:40.</timestamp>
</module>