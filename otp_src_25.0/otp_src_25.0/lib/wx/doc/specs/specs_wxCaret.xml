<module name="wxCaret">
<type>
  <name>wxCaret</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-wxCaret">wxCaret()</marker> = <seetype marker="wx#wx_object">wx:wx_object()</seetype></typehead></typedecl>
</type>
<spec>
  <name>create</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>create(This, Window, Size) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxCaret">wxCaret()</seetype></string></subtype>
        <subtype><typename>Window</typename><string>Window = <seetype marker="wxWindow#wxWindow">wxWindow:wxWindow()</seetype></string></subtype>
        <subtype><typename>Size</typename><string>Size = {W :: <seetype marker="erlang#integer">integer()</seetype>, H :: <seetype marker="erlang#integer">integer()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>H</anno>
  <anno>Size</anno>
  <anno>This</anno>
  <anno>W</anno>
  <anno>Window</anno>
</spec>
<spec>
  <name>create</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>create(This, Window, Width, Height) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxCaret">wxCaret()</seetype></string></subtype>
        <subtype><typename>Window</typename><string>Window = <seetype marker="wxWindow#wxWindow">wxWindow:wxWindow()</seetype></string></subtype>
        <subtype><typename>Width</typename><string>Width = Height = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Height</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Height</anno>
  <anno>This</anno>
  <anno>Width</anno>
  <anno>Window</anno>
</spec>
<spec>
  <name>destroy</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>destroy(This :: <seetype marker="#wxCaret">wxCaret()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getBlinkTime</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>getBlinkTime() -&gt; <seetype marker="erlang#integer">integer()</seetype></head></clause>
  </contract>
</spec>
<spec>
  <name>getPosition</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getPosition(This) -&gt; {X :: <seetype marker="erlang#integer">integer()</seetype>, Y :: <seetype marker="erlang#integer">integer()</seetype>}</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxCaret">wxCaret()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>getSize</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getSize(This) -&gt; {W :: <seetype marker="erlang#integer">integer()</seetype>, H :: <seetype marker="erlang#integer">integer()</seetype>}</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxCaret">wxCaret()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>H</anno>
  <anno>This</anno>
  <anno>W</anno>
</spec>
<spec>
  <name>getWindow</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getWindow(This) -&gt; <seetype marker="wxWindow#wxWindow">wxWindow:wxWindow()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxCaret">wxCaret()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>hide</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>hide(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxCaret">wxCaret()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>isOk</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>isOk(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxCaret">wxCaret()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>isVisible</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>isVisible(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxCaret">wxCaret()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>move</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>move(This, Pt) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxCaret">wxCaret()</seetype></string></subtype>
        <subtype><typename>Pt</typename><string>Pt = {X :: <seetype marker="erlang#integer">integer()</seetype>, Y :: <seetype marker="erlang#integer">integer()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>Pt</anno>
  <anno>This</anno>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>move</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>move(This, X, Y) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxCaret">wxCaret()</seetype></string></subtype>
        <subtype><typename>X</typename><string>X = Y = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Y</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>new</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>new(Window, Size) -&gt; <seetype marker="#wxCaret">wxCaret()</seetype></head>
      <guard>
        <subtype><typename>Window</typename><string>Window = <seetype marker="wxWindow#wxWindow">wxWindow:wxWindow()</seetype></string></subtype>
        <subtype><typename>Size</typename><string>Size = {W :: <seetype marker="erlang#integer">integer()</seetype>, H :: <seetype marker="erlang#integer">integer()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>H</anno>
  <anno>Size</anno>
  <anno>W</anno>
  <anno>Window</anno>
</spec>
<spec>
  <name>new</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>new(Window, Width, Height) -&gt; <seetype marker="#wxCaret">wxCaret()</seetype></head>
      <guard>
        <subtype><typename>Window</typename><string>Window = <seetype marker="wxWindow#wxWindow">wxWindow:wxWindow()</seetype></string></subtype>
        <subtype><typename>Width</typename><string>Width = Height = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Height</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Height</anno>
  <anno>Width</anno>
  <anno>Window</anno>
</spec>
<spec>
  <name>parent_class</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>setBlinkTime</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>setBlinkTime(Milliseconds) -&gt; ok</head>
      <guard>
        <subtype><typename>Milliseconds</typename><string>Milliseconds = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Milliseconds</anno>
</spec>
<spec>
  <name>setSize</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setSize(This, Size) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxCaret">wxCaret()</seetype></string></subtype>
        <subtype><typename>Size</typename><string>Size = {W :: <seetype marker="erlang#integer">integer()</seetype>, H :: <seetype marker="erlang#integer">integer()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>H</anno>
  <anno>Size</anno>
  <anno>This</anno>
  <anno>W</anno>
</spec>
<spec>
  <name>setSize</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>setSize(This, Width, Height) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxCaret">wxCaret()</seetype></string></subtype>
        <subtype><typename>Width</typename><string>Width = Height = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Height</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Height</anno>
  <anno>This</anno>
  <anno>Width</anno>
</spec>
<spec>
  <name>show</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>show(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxCaret">wxCaret()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>show</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>show(This, Options :: [Option]) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxCaret">wxCaret()</seetype></string></subtype>
        <subtype><typename>Option</typename><string>Option = {show, <seetype marker="erlang#boolean">boolean()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>Option</anno>
  <anno>Options</anno>
  <anno>This</anno>
</spec>
<timestamp>Generated by EDoc, May 17 2022, 21:44:30.</timestamp>
</module>