<module name="wxMouseEvent">
<type>
  <name>wxMouse</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-wxMouse">wxMouse()</marker> = <br/><nbsp/><nbsp/><nbsp/><nbsp/>#wxMouse{type = <seetype marker="wxMouseEvent#wxMouseEventType">wxMouseEvent:wxMouseEventType()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>x = <seetype marker="erlang#integer">integer()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>y = <seetype marker="erlang#integer">integer()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>leftDown = <seetype marker="erlang#boolean">boolean()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>middleDown = <seetype marker="erlang#boolean">boolean()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>rightDown = <seetype marker="erlang#boolean">boolean()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>controlDown = <seetype marker="erlang#boolean">boolean()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>shiftDown = <seetype marker="erlang#boolean">boolean()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>altDown = <seetype marker="erlang#boolean">boolean()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>metaDown = <seetype marker="erlang#boolean">boolean()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>wheelRotation = <seetype marker="erlang#integer">integer()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>wheelDelta = <seetype marker="erlang#integer">integer()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>linesPerAction = <seetype marker="erlang#integer">integer()</seetype>}</typehead></typedecl>
</type>
<type>
  <name>wxMouseEvent</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-wxMouseEvent">wxMouseEvent()</marker> = <seetype marker="wx#wx_object">wx:wx_object()</seetype></typehead></typedecl>
</type>
<type>
  <name>wxMouseEventType</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-wxMouseEventType">wxMouseEventType()</marker> = <br/><nbsp/><nbsp/><nbsp/><nbsp/>left_down | left_up | middle_down | middle_up | right_down |<br/><nbsp/><nbsp/><nbsp/><nbsp/>right_up | motion | enter_window | leave_window |<br/><nbsp/><nbsp/><nbsp/><nbsp/>left_dclick | middle_dclick | right_dclick | mousewheel |<br/><nbsp/><nbsp/><nbsp/><nbsp/>aux1_down | aux1_up | aux1_dclick | aux2_down | aux2_up |<br/><nbsp/><nbsp/><nbsp/><nbsp/>aux2_dclick</typehead></typedecl>
</type>
<spec>
  <name>altDown</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>altDown(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxMouseEvent">wxMouseEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>aux1DClick</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>aux1DClick(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxMouseEvent">wxMouseEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>aux1Down</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>aux1Down(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxMouseEvent">wxMouseEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>aux1Up</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>aux1Up(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxMouseEvent">wxMouseEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>aux2DClick</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>aux2DClick(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxMouseEvent">wxMouseEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>aux2Down</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>aux2Down(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxMouseEvent">wxMouseEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>aux2Up</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>aux2Up(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxMouseEvent">wxMouseEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>button</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>button(This, But) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxMouseEvent">wxMouseEvent()</seetype></string></subtype>
        <subtype><typename>But</typename><string>But = <seetype marker="wx#wx_enum">wx:wx_enum()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>But</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>buttonDClick</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>buttonDClick(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxMouseEvent">wxMouseEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>buttonDClick</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>buttonDClick(This, Options :: [Option]) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxMouseEvent">wxMouseEvent()</seetype></string></subtype>
        <subtype><typename>Option</typename><string>Option = {but, <seetype marker="wx#wx_enum">wx:wx_enum()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>Option</anno>
  <anno>Options</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>buttonDown</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>buttonDown(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxMouseEvent">wxMouseEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>buttonDown</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>buttonDown(This, Options :: [Option]) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxMouseEvent">wxMouseEvent()</seetype></string></subtype>
        <subtype><typename>Option</typename><string>Option = {but, <seetype marker="wx#wx_enum">wx:wx_enum()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>Option</anno>
  <anno>Options</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>buttonUp</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>buttonUp(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxMouseEvent">wxMouseEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>buttonUp</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>buttonUp(This, Options :: [Option]) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxMouseEvent">wxMouseEvent()</seetype></string></subtype>
        <subtype><typename>Option</typename><string>Option = {but, <seetype marker="wx#wx_enum">wx:wx_enum()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>Option</anno>
  <anno>Options</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>cmdDown</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>cmdDown(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxMouseEvent">wxMouseEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>controlDown</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>controlDown(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxMouseEvent">wxMouseEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>dragging</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>dragging(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxMouseEvent">wxMouseEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>entering</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>entering(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxMouseEvent">wxMouseEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getButton</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getButton(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxMouseEvent">wxMouseEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getId</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getLinesPerAction</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getLinesPerAction(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxMouseEvent">wxMouseEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getLogicalPosition</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getLogicalPosition(This, Dc) -&gt; {X :: <seetype marker="erlang#integer">integer()</seetype>, Y :: <seetype marker="erlang#integer">integer()</seetype>}</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxMouseEvent">wxMouseEvent()</seetype></string></subtype>
        <subtype><typename>Dc</typename><string>Dc = <seetype marker="wxDC#wxDC">wxDC:wxDC()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Dc</anno>
  <anno>This</anno>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>getPosition</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getPosition(This) -&gt; {X :: <seetype marker="erlang#integer">integer()</seetype>, Y :: <seetype marker="erlang#integer">integer()</seetype>}</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxMouseEvent">wxMouseEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>getSkipped</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getTimestamp</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getWheelAxis</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getWheelAxis(This) -&gt; <seetype marker="wx#wx_enum">wx:wx_enum()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxMouseEvent">wxMouseEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getWheelDelta</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getWheelDelta(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxMouseEvent">wxMouseEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getWheelRotation</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getWheelRotation(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxMouseEvent">wxMouseEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getX</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getX(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxMouseEvent">wxMouseEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getY</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getY(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxMouseEvent">wxMouseEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>isButton</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>isButton(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxMouseEvent">wxMouseEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>isCommandEvent</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>isPageScroll</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>isPageScroll(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxMouseEvent">wxMouseEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>leaving</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>leaving(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxMouseEvent">wxMouseEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>leftDClick</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>leftDClick(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxMouseEvent">wxMouseEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>leftDown</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>leftDown(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxMouseEvent">wxMouseEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>leftIsDown</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>leftIsDown(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxMouseEvent">wxMouseEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>leftUp</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>leftUp(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxMouseEvent">wxMouseEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>metaDown</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>metaDown(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxMouseEvent">wxMouseEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>middleDClick</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>middleDClick(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxMouseEvent">wxMouseEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>middleDown</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>middleDown(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxMouseEvent">wxMouseEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>middleIsDown</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>middleIsDown(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxMouseEvent">wxMouseEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>middleUp</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>middleUp(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxMouseEvent">wxMouseEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>moving</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>moving(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxMouseEvent">wxMouseEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>parent_class</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>resumePropagation</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>rightDClick</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>rightDClick(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxMouseEvent">wxMouseEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>rightDown</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>rightDown(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxMouseEvent">wxMouseEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>rightIsDown</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>rightIsDown(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxMouseEvent">wxMouseEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>rightUp</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>rightUp(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxMouseEvent">wxMouseEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>shiftDown</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>shiftDown(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxMouseEvent">wxMouseEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>shouldPropagate</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>skip</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>skip</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>stopPropagation</name>
  <arity>1</arity>
  <contract/>
</spec>
<timestamp>Generated by EDoc, May 17 2022, 21:44:39.</timestamp>
</module>