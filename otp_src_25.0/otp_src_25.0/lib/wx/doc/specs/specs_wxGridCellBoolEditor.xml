<module name="wxGridCellBoolEditor">
<type>
  <name>wxGridCellBoolEditor</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-wxGridCellBoolEditor">wxGridCellBoolEditor()</marker> = <seetype marker="wx#wx_object">wx:wx_object()</seetype></typehead></typedecl>
</type>
<spec>
  <name>destroy</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>destroy(This :: <seetype marker="#wxGridCellBoolEditor">wxGridCellBoolEditor()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>handleReturn</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>isCreated</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>isTrueValue</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>isTrueValue(Value) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>Value</typename><string>Value = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Value</anno>
</spec>
<spec>
  <name>new</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>new() -&gt; <seetype marker="#wxGridCellBoolEditor">wxGridCellBoolEditor()</seetype></head></clause>
  </contract>
</spec>
<spec>
  <name>parent_class</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>reset</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>setSize</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>show</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>show</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>startingClick</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>startingKey</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>useStringValues</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>useStringValues() -&gt; ok</head></clause>
  </contract>
</spec>
<spec>
  <name>useStringValues</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>useStringValues(Options :: [Option]) -&gt; ok</head>
      <guard>
        <subtype><typename>Option</typename><string>Option = <br/><nbsp/><nbsp/><nbsp/><nbsp/>{valueTrue, <seetype marker="unicode#chardata">unicode:chardata()</seetype>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{valueFalse, <seetype marker="unicode#chardata">unicode:chardata()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>Option</anno>
  <anno>Options</anno>
</spec>
<timestamp>Generated by EDoc, May 17 2022, 21:44:35.</timestamp>
</module>