<module name="gl">
<type>
  <name>clamp</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-clamp">clamp()</marker> = <seetype marker="erlang#float">float()</seetype></typehead></typedecl>
</type>
<type>
  <name>enum</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-enum">enum()</marker> = <seetype marker="erlang#non_neg_integer">integer() &gt;= 0</seetype></typehead></typedecl>
</type>
<type>
  <name>f</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-f">f()</marker> = <seetype marker="erlang#float">float()</seetype></typehead></typedecl>
</type>
<type>
  <name>i</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-i">i()</marker> = <seetype marker="erlang#integer">integer()</seetype></typehead></typedecl>
</type>
<type>
  <name>m12</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-m12">m12()</marker> = <br/><nbsp/><nbsp/><nbsp/><nbsp/>{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}</typehead></typedecl>
</type>
<type>
  <name>m16</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-m16">m16()</marker> = <br/><nbsp/><nbsp/><nbsp/><nbsp/>{<seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>}</typehead></typedecl>
</type>
<type>
  <name>matrix</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-matrix">matrix()</marker> = <seetype marker="#m12">m12()</seetype> | <seetype marker="#m16">m16()</seetype></typehead></typedecl>
</type>
<type>
  <name>mem</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-mem">mem()</marker> = <seetype marker="erlang#binary">binary()</seetype> | <seetype marker="erlang#tuple">tuple()</seetype></typehead></typedecl>
</type>
<type>
  <name>offset</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-offset">offset()</marker> = <seetype marker="erlang#non_neg_integer">integer() &gt;= 0</seetype></typehead></typedecl>
</type>
<spec>
  <name>'begin'</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>'begin'(Mode :: <seetype marker="#enum">enum()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Mode</anno>
</spec>
<spec>
  <name>'end'</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>'end'() -&gt; ok</head></clause>
  </contract>
</spec>
<spec>
  <name>accum</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>accum(Op :: <seetype marker="#enum">enum()</seetype>, Value :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Op</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>activeShaderProgram</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>activeShaderProgram(Pipeline :: <seetype marker="#i">i()</seetype>, Program :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Pipeline</anno>
  <anno>Program</anno>
</spec>
<spec>
  <name>activeTexture</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>activeTexture(Texture :: <seetype marker="#enum">enum()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Texture</anno>
</spec>
<spec>
  <name>alphaFunc</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>alphaFunc(Func :: <seetype marker="#enum">enum()</seetype>, Ref :: <seetype marker="#clamp">clamp()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Func</anno>
  <anno>Ref</anno>
</spec>
<spec>
  <name>areTexturesResident</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>areTexturesResident(Textures :: [<seetype marker="#i">i()</seetype>]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{0 | 1, Residences :: [0 | 1]}</head></clause>
  </contract>
  <anno>Residences</anno>
  <anno>Textures</anno>
</spec>
<spec>
  <name>arrayElement</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>arrayElement(I :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>I</anno>
</spec>
<spec>
  <name>attachObjectARB</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>attachObjectARB(ContainerObj :: <seetype marker="#i">i()</seetype>, Obj :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>ContainerObj</anno>
  <anno>Obj</anno>
</spec>
<spec>
  <name>attachShader</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>attachShader(Program :: <seetype marker="#i">i()</seetype>, Shader :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Program</anno>
  <anno>Shader</anno>
</spec>
<spec>
  <name>beginConditionalRender</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>beginConditionalRender(Id :: <seetype marker="#i">i()</seetype>, Mode :: <seetype marker="#enum">enum()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Id</anno>
  <anno>Mode</anno>
</spec>
<spec>
  <name>beginQuery</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>beginQuery(Target :: <seetype marker="#enum">enum()</seetype>, Id :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Id</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>beginQueryIndexed</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>beginQueryIndexed(Target :: <seetype marker="#enum">enum()</seetype>, Index :: <seetype marker="#i">i()</seetype>, Id :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Id</anno>
  <anno>Index</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>beginTransformFeedback</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>beginTransformFeedback(PrimitiveMode :: <seetype marker="#enum">enum()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>PrimitiveMode</anno>
</spec>
<spec>
  <name>bindAttribLocation</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>bindAttribLocation(Program :: <seetype marker="#i">i()</seetype>, Index :: <seetype marker="#i">i()</seetype>, Name :: <seetype marker="erlang#string">string()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>Name</anno>
  <anno>Program</anno>
</spec>
<spec>
  <name>bindAttribLocationARB</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>bindAttribLocationARB(ProgramObj :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Index :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Name :: <seetype marker="erlang#string">string()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>Name</anno>
  <anno>ProgramObj</anno>
</spec>
<spec>
  <name>bindBuffer</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>bindBuffer(Target :: <seetype marker="#enum">enum()</seetype>, Buffer :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Buffer</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>bindBufferBase</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>bindBufferBase(Target :: <seetype marker="#enum">enum()</seetype>, Index :: <seetype marker="#i">i()</seetype>, Buffer :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Buffer</anno>
  <anno>Index</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>bindBufferRange</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>bindBufferRange(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Index :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Buffer :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Offset :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Size :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Buffer</anno>
  <anno>Index</anno>
  <anno>Offset</anno>
  <anno>Size</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>bindBuffersBase</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>bindBuffersBase(Target :: <seetype marker="#enum">enum()</seetype>, First :: <seetype marker="#i">i()</seetype>, Buffers :: [<seetype marker="#i">i()</seetype>]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Buffers</anno>
  <anno>First</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>bindBuffersRange</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>bindBuffersRange(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>First :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Buffers :: [<seetype marker="#i">i()</seetype>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Offsets :: [<seetype marker="#i">i()</seetype>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Sizes :: [<seetype marker="#i">i()</seetype>]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Buffers</anno>
  <anno>First</anno>
  <anno>Offsets</anno>
  <anno>Sizes</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>bindFragDataLocation</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>bindFragDataLocation(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Color :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Name :: <seetype marker="erlang#string">string()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Color</anno>
  <anno>Name</anno>
  <anno>Program</anno>
</spec>
<spec>
  <name>bindFragDataLocationIndexed</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>bindFragDataLocationIndexed(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ColorNumber :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Index :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Name :: <seetype marker="erlang#string">string()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>ColorNumber</anno>
  <anno>Index</anno>
  <anno>Name</anno>
  <anno>Program</anno>
</spec>
<spec>
  <name>bindFramebuffer</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>bindFramebuffer(Target :: <seetype marker="#enum">enum()</seetype>, Framebuffer :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Framebuffer</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>bindImageTexture</name>
  <arity>7</arity>
  <contract>
    <clause>
      <head>bindImageTexture(Unit, Texture, Level, Layered, Layer, Access,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Format) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Unit</typename><string>Unit = Texture = Level = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Texture</typename><string/></subtype>
        <subtype><typename>Level</typename><string/></subtype>
        <subtype><typename>Layered</typename><string>Layered = 0 | 1</string></subtype>
        <subtype><typename>Layer</typename><string>Layer = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Access</typename><string>Access = Format = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Format</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Access</anno>
  <anno>Format</anno>
  <anno>Layer</anno>
  <anno>Layered</anno>
  <anno>Level</anno>
  <anno>Texture</anno>
  <anno>Unit</anno>
</spec>
<spec>
  <name>bindImageTextures</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>bindImageTextures(First :: <seetype marker="#i">i()</seetype>, Textures :: [<seetype marker="#i">i()</seetype>]) -&gt; ok</head></clause>
  </contract>
  <anno>First</anno>
  <anno>Textures</anno>
</spec>
<spec>
  <name>bindProgramARB</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>bindProgramARB(Target :: <seetype marker="#enum">enum()</seetype>, Program :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Program</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>bindProgramPipeline</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>bindProgramPipeline(Pipeline :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Pipeline</anno>
</spec>
<spec>
  <name>bindRenderbuffer</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>bindRenderbuffer(Target :: <seetype marker="#enum">enum()</seetype>, Renderbuffer :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Renderbuffer</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>bindSampler</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>bindSampler(Unit :: <seetype marker="#i">i()</seetype>, Sampler :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Sampler</anno>
  <anno>Unit</anno>
</spec>
<spec>
  <name>bindSamplers</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>bindSamplers(First :: <seetype marker="#i">i()</seetype>, Samplers :: [<seetype marker="#i">i()</seetype>]) -&gt; ok</head></clause>
  </contract>
  <anno>First</anno>
  <anno>Samplers</anno>
</spec>
<spec>
  <name>bindTexture</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>bindTexture(Target :: <seetype marker="#enum">enum()</seetype>, Texture :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Target</anno>
  <anno>Texture</anno>
</spec>
<spec>
  <name>bindTextureUnit</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>bindTextureUnit(Unit :: <seetype marker="#i">i()</seetype>, Texture :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Texture</anno>
  <anno>Unit</anno>
</spec>
<spec>
  <name>bindTextures</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>bindTextures(First :: <seetype marker="#i">i()</seetype>, Textures :: [<seetype marker="#i">i()</seetype>]) -&gt; ok</head></clause>
  </contract>
  <anno>First</anno>
  <anno>Textures</anno>
</spec>
<spec>
  <name>bindTransformFeedback</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>bindTransformFeedback(Target :: <seetype marker="#enum">enum()</seetype>, Id :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Id</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>bindVertexArray</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>bindVertexArray(Array :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Array</anno>
</spec>
<spec>
  <name>bindVertexBuffer</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>bindVertexBuffer(Bindingindex :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Buffer :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Offset :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Stride :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Bindingindex</anno>
  <anno>Buffer</anno>
  <anno>Offset</anno>
  <anno>Stride</anno>
</spec>
<spec>
  <name>bindVertexBuffers</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>bindVertexBuffers(First :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Buffers :: [<seetype marker="#i">i()</seetype>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Offsets :: [<seetype marker="#i">i()</seetype>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Strides :: [<seetype marker="#i">i()</seetype>]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Buffers</anno>
  <anno>First</anno>
  <anno>Offsets</anno>
  <anno>Strides</anno>
</spec>
<spec>
  <name>bitmap</name>
  <arity>7</arity>
  <contract>
    <clause>
      <head>bitmap(Width, Height, Xorig, Yorig, Xmove, Ymove, Bitmap) -&gt; ok</head>
      <guard>
        <subtype><typename>Width</typename><string>Width = Height = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Height</typename><string/></subtype>
        <subtype><typename>Xorig</typename><string>Xorig = Yorig = Xmove = Ymove = <seetype marker="#f">f()</seetype></string></subtype>
        <subtype><typename>Yorig</typename><string/></subtype>
        <subtype><typename>Xmove</typename><string/></subtype>
        <subtype><typename>Ymove</typename><string/></subtype>
        <subtype><typename>Bitmap</typename><string>Bitmap = <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Bitmap</anno>
  <anno>Height</anno>
  <anno>Width</anno>
  <anno>Xmove</anno>
  <anno>Xorig</anno>
  <anno>Ymove</anno>
  <anno>Yorig</anno>
</spec>
<spec>
  <name>blendBarrierKHR</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>blendBarrierKHR() -&gt; ok</head></clause>
  </contract>
</spec>
<spec>
  <name>blendColor</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>blendColor(Red :: <seetype marker="#clamp">clamp()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Green :: <seetype marker="#clamp">clamp()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Blue :: <seetype marker="#clamp">clamp()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Alpha :: <seetype marker="#clamp">clamp()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Alpha</anno>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
</spec>
<spec>
  <name>blendEquation</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>blendEquation(Mode :: <seetype marker="#enum">enum()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Mode</anno>
</spec>
<spec>
  <name>blendEquationSeparate</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>blendEquationSeparate(ModeRGB :: <seetype marker="#enum">enum()</seetype>, ModeAlpha :: <seetype marker="#enum">enum()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>ModeAlpha</anno>
  <anno>ModeRGB</anno>
</spec>
<spec>
  <name>blendEquationSeparatei</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>blendEquationSeparatei(Buf :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ModeRGB :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ModeAlpha :: <seetype marker="#enum">enum()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Buf</anno>
  <anno>ModeAlpha</anno>
  <anno>ModeRGB</anno>
</spec>
<spec>
  <name>blendEquationi</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>blendEquationi(Buf :: <seetype marker="#i">i()</seetype>, Mode :: <seetype marker="#enum">enum()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Buf</anno>
  <anno>Mode</anno>
</spec>
<spec>
  <name>blendFunc</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>blendFunc(Sfactor :: <seetype marker="#enum">enum()</seetype>, Dfactor :: <seetype marker="#enum">enum()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Dfactor</anno>
  <anno>Sfactor</anno>
</spec>
<spec>
  <name>blendFuncSeparate</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>blendFuncSeparate(SfactorRGB, DfactorRGB, SfactorAlpha,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>DfactorAlpha) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>SfactorRGB</typename><string>SfactorRGB = DfactorRGB = SfactorAlpha = DfactorAlpha = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>DfactorRGB</typename><string></string></subtype>
        <subtype><typename>SfactorAlpha</typename><string></string></subtype>
        <subtype><typename>DfactorAlpha</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>DfactorAlpha</anno>
  <anno>DfactorRGB</anno>
  <anno>SfactorAlpha</anno>
  <anno>SfactorRGB</anno>
</spec>
<spec>
  <name>blendFuncSeparatei</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>blendFuncSeparatei(Buf :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>SrcRGB :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>DstRGB :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>SrcAlpha :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>DstAlpha :: <seetype marker="#enum">enum()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Buf</anno>
  <anno>DstAlpha</anno>
  <anno>DstRGB</anno>
  <anno>SrcAlpha</anno>
  <anno>SrcRGB</anno>
</spec>
<spec>
  <name>blendFunci</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>blendFunci(Buf :: <seetype marker="#i">i()</seetype>, Src :: <seetype marker="#enum">enum()</seetype>, Dst :: <seetype marker="#enum">enum()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Buf</anno>
  <anno>Dst</anno>
  <anno>Src</anno>
</spec>
<spec>
  <name>blitFramebuffer</name>
  <arity>10</arity>
  <contract>
    <clause>
      <head>blitFramebuffer(SrcX0, SrcY0, SrcX1, SrcY1, DstX0, DstY0, DstX1,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>DstY1, Mask, Filter) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>SrcX0</typename><string>SrcX0 = SrcY0 = SrcX1 = SrcY1 = DstX0 = DstY0 = DstX1 = DstY1 = Mask = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>SrcY0</typename><string/></subtype>
        <subtype><typename>SrcX1</typename><string/></subtype>
        <subtype><typename>SrcY1</typename><string/></subtype>
        <subtype><typename>DstX0</typename><string/></subtype>
        <subtype><typename>DstY0</typename><string/></subtype>
        <subtype><typename>DstX1</typename><string/></subtype>
        <subtype><typename>DstY1</typename><string/></subtype>
        <subtype><typename>Mask</typename><string/></subtype>
        <subtype><typename>Filter</typename><string>Filter = <seetype marker="#enum">enum()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>DstX0</anno>
  <anno>DstX1</anno>
  <anno>DstY0</anno>
  <anno>DstY1</anno>
  <anno>Filter</anno>
  <anno>Mask</anno>
  <anno>SrcX0</anno>
  <anno>SrcX1</anno>
  <anno>SrcY0</anno>
  <anno>SrcY1</anno>
</spec>
<spec>
  <name>bufferData</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>bufferData(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Size :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Data :: <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Usage :: <seetype marker="#enum">enum()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Data</anno>
  <anno>Size</anno>
  <anno>Target</anno>
  <anno>Usage</anno>
</spec>
<spec>
  <name>bufferPageCommitmentARB</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>bufferPageCommitmentARB(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Offset :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Size :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Commit :: 0 | 1) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Commit</anno>
  <anno>Offset</anno>
  <anno>Size</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>bufferStorage</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>bufferStorage(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Size :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Data :: <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Flags :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Data</anno>
  <anno>Flags</anno>
  <anno>Size</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>bufferSubData</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>bufferSubData(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Offset :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Size :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Data :: <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Data</anno>
  <anno>Offset</anno>
  <anno>Size</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>callList</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>callList(List :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>List</anno>
</spec>
<spec>
  <name>callLists</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>callLists(Lists :: [<seetype marker="#i">i()</seetype>]) -&gt; ok</head></clause>
  </contract>
  <anno>Lists</anno>
</spec>
<spec>
  <name>checkFramebufferStatus</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>checkFramebufferStatus(Target :: <seetype marker="#enum">enum()</seetype>) -&gt; <seetype marker="#enum">enum()</seetype></head></clause>
  </contract>
  <anno>Target</anno>
</spec>
<spec>
  <name>clampColor</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>clampColor(Target :: <seetype marker="#enum">enum()</seetype>, Clamp :: <seetype marker="#enum">enum()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Clamp</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>clear</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>clear(Mask :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Mask</anno>
</spec>
<spec>
  <name>clearAccum</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>clearAccum(Red :: <seetype marker="#f">f()</seetype>, Green :: <seetype marker="#f">f()</seetype>, Blue :: <seetype marker="#f">f()</seetype>, Alpha :: <seetype marker="#f">f()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Alpha</anno>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
</spec>
<spec>
  <name>clearBufferData</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>clearBufferData(Target, Internalformat, Format, Type, Data) -&gt; ok</head>
      <guard>
        <subtype><typename>Target</typename><string>Target = Internalformat = Format = Type = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Internalformat</typename><string/></subtype>
        <subtype><typename>Format</typename><string/></subtype>
        <subtype><typename>Type</typename><string/></subtype>
        <subtype><typename>Data</typename><string>Data = <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Data</anno>
  <anno>Format</anno>
  <anno>Internalformat</anno>
  <anno>Target</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>clearBufferSubData</name>
  <arity>7</arity>
  <contract>
    <clause>
      <head>clearBufferSubData(Target, Internalformat, Offset, Size, Format,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Type, Data) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Target</typename><string>Target = Internalformat = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Internalformat</typename><string/></subtype>
        <subtype><typename>Offset</typename><string>Offset = Size = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Size</typename><string/></subtype>
        <subtype><typename>Format</typename><string>Format = Type = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Type</typename><string/></subtype>
        <subtype><typename>Data</typename><string>Data = <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Data</anno>
  <anno>Format</anno>
  <anno>Internalformat</anno>
  <anno>Offset</anno>
  <anno>Size</anno>
  <anno>Target</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>clearBufferfi</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>clearBufferfi(Buffer :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Drawbuffer :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Depth :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Stencil :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Buffer</anno>
  <anno>Depth</anno>
  <anno>Drawbuffer</anno>
  <anno>Stencil</anno>
</spec>
<spec>
  <name>clearBufferfv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>clearBufferfv(Buffer :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Drawbuffer :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value :: <seetype marker="erlang#tuple">tuple()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Buffer</anno>
  <anno>Drawbuffer</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>clearBufferiv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>clearBufferiv(Buffer :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Drawbuffer :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value :: <seetype marker="erlang#tuple">tuple()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Buffer</anno>
  <anno>Drawbuffer</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>clearBufferuiv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>clearBufferuiv(Buffer :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Drawbuffer :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value :: <seetype marker="erlang#tuple">tuple()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Buffer</anno>
  <anno>Drawbuffer</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>clearColor</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>clearColor(Red :: <seetype marker="#clamp">clamp()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Green :: <seetype marker="#clamp">clamp()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Blue :: <seetype marker="#clamp">clamp()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Alpha :: <seetype marker="#clamp">clamp()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Alpha</anno>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
</spec>
<spec>
  <name>clearDepth</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>clearDepth(Depth :: <seetype marker="#clamp">clamp()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Depth</anno>
</spec>
<spec>
  <name>clearDepthf</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>clearDepthf(D :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>D</anno>
</spec>
<spec>
  <name>clearIndex</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>clearIndex(C :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>C</anno>
</spec>
<spec>
  <name>clearStencil</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>clearStencil(S :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>S</anno>
</spec>
<spec>
  <name>clearTexImage</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>clearTexImage(Texture :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Level :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Format :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Type :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Data :: <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Data</anno>
  <anno>Format</anno>
  <anno>Level</anno>
  <anno>Texture</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>clearTexSubImage</name>
  <arity>11</arity>
  <contract>
    <clause>
      <head>clearTexSubImage(Texture, Level, Xoffset, Yoffset, Zoffset, Width,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Height, Depth, Format, Type, Data) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Texture</typename><string>Texture = Level = Xoffset = Yoffset = Zoffset = Width = Height = Depth = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Level</typename><string/></subtype>
        <subtype><typename>Xoffset</typename><string/></subtype>
        <subtype><typename>Yoffset</typename><string/></subtype>
        <subtype><typename>Zoffset</typename><string/></subtype>
        <subtype><typename>Width</typename><string/></subtype>
        <subtype><typename>Height</typename><string/></subtype>
        <subtype><typename>Depth</typename><string/></subtype>
        <subtype><typename>Format</typename><string>Format = Type = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Type</typename><string/></subtype>
        <subtype><typename>Data</typename><string>Data = <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Data</anno>
  <anno>Depth</anno>
  <anno>Format</anno>
  <anno>Height</anno>
  <anno>Level</anno>
  <anno>Texture</anno>
  <anno>Type</anno>
  <anno>Width</anno>
  <anno>Xoffset</anno>
  <anno>Yoffset</anno>
  <anno>Zoffset</anno>
</spec>
<spec>
  <name>clientActiveTexture</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>clientActiveTexture(Texture :: <seetype marker="#enum">enum()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Texture</anno>
</spec>
<spec>
  <name>clientWaitSync</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>clientWaitSync(Sync :: <seetype marker="#i">i()</seetype>, Flags :: <seetype marker="#i">i()</seetype>, Timeout :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#enum">enum()</seetype></head></clause>
  </contract>
  <anno>Flags</anno>
  <anno>Sync</anno>
  <anno>Timeout</anno>
</spec>
<spec>
  <name>clipControl</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>clipControl(Origin :: <seetype marker="#enum">enum()</seetype>, Depth :: <seetype marker="#enum">enum()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Depth</anno>
  <anno>Origin</anno>
</spec>
<spec>
  <name>clipPlane</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>clipPlane(Plane :: <seetype marker="#enum">enum()</seetype>, Equation :: {<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Equation</anno>
  <anno>Plane</anno>
</spec>
<spec>
  <name>color3b</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>color3b(Red :: <seetype marker="#i">i()</seetype>, Green :: <seetype marker="#i">i()</seetype>, Blue :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
</spec>
<spec>
  <name>color3bv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>color3bv(X1 :: {Red :: <seetype marker="#i">i()</seetype>, Green :: <seetype marker="#i">i()</seetype>, Blue :: <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>color3d</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>color3d(Red :: <seetype marker="#f">f()</seetype>, Green :: <seetype marker="#f">f()</seetype>, Blue :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
</spec>
<spec>
  <name>color3dv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>color3dv(X1 :: {Red :: <seetype marker="#f">f()</seetype>, Green :: <seetype marker="#f">f()</seetype>, Blue :: <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>color3f</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>color3f(Red :: <seetype marker="#f">f()</seetype>, Green :: <seetype marker="#f">f()</seetype>, Blue :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
</spec>
<spec>
  <name>color3fv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>color3fv(X1 :: {Red :: <seetype marker="#f">f()</seetype>, Green :: <seetype marker="#f">f()</seetype>, Blue :: <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>color3i</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>color3i(Red :: <seetype marker="#i">i()</seetype>, Green :: <seetype marker="#i">i()</seetype>, Blue :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
</spec>
<spec>
  <name>color3iv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>color3iv(X1 :: {Red :: <seetype marker="#i">i()</seetype>, Green :: <seetype marker="#i">i()</seetype>, Blue :: <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>color3s</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>color3s(Red :: <seetype marker="#i">i()</seetype>, Green :: <seetype marker="#i">i()</seetype>, Blue :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
</spec>
<spec>
  <name>color3sv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>color3sv(X1 :: {Red :: <seetype marker="#i">i()</seetype>, Green :: <seetype marker="#i">i()</seetype>, Blue :: <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>color3ub</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>color3ub(Red :: <seetype marker="#i">i()</seetype>, Green :: <seetype marker="#i">i()</seetype>, Blue :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
</spec>
<spec>
  <name>color3ubv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>color3ubv(X1 :: {Red :: <seetype marker="#i">i()</seetype>, Green :: <seetype marker="#i">i()</seetype>, Blue :: <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>color3ui</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>color3ui(Red :: <seetype marker="#i">i()</seetype>, Green :: <seetype marker="#i">i()</seetype>, Blue :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
</spec>
<spec>
  <name>color3uiv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>color3uiv(X1 :: {Red :: <seetype marker="#i">i()</seetype>, Green :: <seetype marker="#i">i()</seetype>, Blue :: <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>color3us</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>color3us(Red :: <seetype marker="#i">i()</seetype>, Green :: <seetype marker="#i">i()</seetype>, Blue :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
</spec>
<spec>
  <name>color3usv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>color3usv(X1 :: {Red :: <seetype marker="#i">i()</seetype>, Green :: <seetype marker="#i">i()</seetype>, Blue :: <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>color4b</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>color4b(Red :: <seetype marker="#i">i()</seetype>, Green :: <seetype marker="#i">i()</seetype>, Blue :: <seetype marker="#i">i()</seetype>, Alpha :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Alpha</anno>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
</spec>
<spec>
  <name>color4bv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>color4bv(X1 ::<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{Red :: <seetype marker="#i">i()</seetype>, Green :: <seetype marker="#i">i()</seetype>, Blue :: <seetype marker="#i">i()</seetype>, Alpha :: <seetype marker="#i">i()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Alpha</anno>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>color4d</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>color4d(Red :: <seetype marker="#f">f()</seetype>, Green :: <seetype marker="#f">f()</seetype>, Blue :: <seetype marker="#f">f()</seetype>, Alpha :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Alpha</anno>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
</spec>
<spec>
  <name>color4dv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>color4dv(X1 ::<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{Red :: <seetype marker="#f">f()</seetype>, Green :: <seetype marker="#f">f()</seetype>, Blue :: <seetype marker="#f">f()</seetype>, Alpha :: <seetype marker="#f">f()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Alpha</anno>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>color4f</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>color4f(Red :: <seetype marker="#f">f()</seetype>, Green :: <seetype marker="#f">f()</seetype>, Blue :: <seetype marker="#f">f()</seetype>, Alpha :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Alpha</anno>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
</spec>
<spec>
  <name>color4fv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>color4fv(X1 ::<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{Red :: <seetype marker="#f">f()</seetype>, Green :: <seetype marker="#f">f()</seetype>, Blue :: <seetype marker="#f">f()</seetype>, Alpha :: <seetype marker="#f">f()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Alpha</anno>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>color4i</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>color4i(Red :: <seetype marker="#i">i()</seetype>, Green :: <seetype marker="#i">i()</seetype>, Blue :: <seetype marker="#i">i()</seetype>, Alpha :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Alpha</anno>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
</spec>
<spec>
  <name>color4iv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>color4iv(X1 ::<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{Red :: <seetype marker="#i">i()</seetype>, Green :: <seetype marker="#i">i()</seetype>, Blue :: <seetype marker="#i">i()</seetype>, Alpha :: <seetype marker="#i">i()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Alpha</anno>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>color4s</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>color4s(Red :: <seetype marker="#i">i()</seetype>, Green :: <seetype marker="#i">i()</seetype>, Blue :: <seetype marker="#i">i()</seetype>, Alpha :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Alpha</anno>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
</spec>
<spec>
  <name>color4sv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>color4sv(X1 ::<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{Red :: <seetype marker="#i">i()</seetype>, Green :: <seetype marker="#i">i()</seetype>, Blue :: <seetype marker="#i">i()</seetype>, Alpha :: <seetype marker="#i">i()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Alpha</anno>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>color4ub</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>color4ub(Red :: <seetype marker="#i">i()</seetype>, Green :: <seetype marker="#i">i()</seetype>, Blue :: <seetype marker="#i">i()</seetype>, Alpha :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Alpha</anno>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
</spec>
<spec>
  <name>color4ubv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>color4ubv(X1 ::<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{Red :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Green :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Blue :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Alpha :: <seetype marker="#i">i()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Alpha</anno>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>color4ui</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>color4ui(Red :: <seetype marker="#i">i()</seetype>, Green :: <seetype marker="#i">i()</seetype>, Blue :: <seetype marker="#i">i()</seetype>, Alpha :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Alpha</anno>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
</spec>
<spec>
  <name>color4uiv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>color4uiv(X1 ::<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{Red :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Green :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Blue :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Alpha :: <seetype marker="#i">i()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Alpha</anno>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>color4us</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>color4us(Red :: <seetype marker="#i">i()</seetype>, Green :: <seetype marker="#i">i()</seetype>, Blue :: <seetype marker="#i">i()</seetype>, Alpha :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Alpha</anno>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
</spec>
<spec>
  <name>color4usv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>color4usv(X1 ::<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{Red :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Green :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Blue :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Alpha :: <seetype marker="#i">i()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Alpha</anno>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>colorMask</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>colorMask(Red :: 0 | 1,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Green :: 0 | 1,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Blue :: 0 | 1,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Alpha :: 0 | 1) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Alpha</anno>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
</spec>
<spec>
  <name>colorMaski</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>colorMaski(Index :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>R :: 0 | 1,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>G :: 0 | 1,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>B :: 0 | 1,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>A :: 0 | 1) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>A</anno>
  <anno>B</anno>
  <anno>G</anno>
  <anno>Index</anno>
  <anno>R</anno>
</spec>
<spec>
  <name>colorMaterial</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>colorMaterial(Face :: <seetype marker="#enum">enum()</seetype>, Mode :: <seetype marker="#enum">enum()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Face</anno>
  <anno>Mode</anno>
</spec>
<spec>
  <name>colorPointer</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>colorPointer(Size :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Type :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Stride :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Ptr :: <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Ptr</anno>
  <anno>Size</anno>
  <anno>Stride</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>colorSubTable</name>
  <arity>6</arity>
  <contract>
    <clause>
      <head>colorSubTable(Target, Start, Count, Format, Type, Data) -&gt; ok</head>
      <guard>
        <subtype><typename>Target</typename><string>Target = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Start</typename><string>Start = Count = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Count</typename><string/></subtype>
        <subtype><typename>Format</typename><string>Format = Type = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Type</typename><string/></subtype>
        <subtype><typename>Data</typename><string>Data = <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Count</anno>
  <anno>Data</anno>
  <anno>Format</anno>
  <anno>Start</anno>
  <anno>Target</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>colorTable</name>
  <arity>6</arity>
  <contract>
    <clause>
      <head>colorTable(Target, Internalformat, Width, Format, Type, Table) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Target</typename><string>Target = Internalformat = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Internalformat</typename><string/></subtype>
        <subtype><typename>Width</typename><string>Width = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Format</typename><string>Format = Type = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Type</typename><string/></subtype>
        <subtype><typename>Table</typename><string>Table = <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Format</anno>
  <anno>Internalformat</anno>
  <anno>Table</anno>
  <anno>Target</anno>
  <anno>Type</anno>
  <anno>Width</anno>
</spec>
<spec>
  <name>colorTableParameterfv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>colorTableParameterfv(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Pname :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Params :: {<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Params</anno>
  <anno>Pname</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>colorTableParameteriv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>colorTableParameteriv(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Pname :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Params :: {<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Params</anno>
  <anno>Pname</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>compileShader</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>compileShader(Shader :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Shader</anno>
</spec>
<spec>
  <name>compileShaderARB</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>compileShaderARB(ShaderObj :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>ShaderObj</anno>
</spec>
<spec>
  <name>compileShaderIncludeARB</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>compileShaderIncludeARB(Shader :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Path :: [<seetype marker="unicode#chardata">unicode:chardata()</seetype>]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Path</anno>
  <anno>Shader</anno>
</spec>
<spec>
  <name>compressedTexImage1D</name>
  <arity>7</arity>
  <contract>
    <clause>
      <head>compressedTexImage1D(Target, Level, Internalformat, Width, Border,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ImageSize, Data) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Target</typename><string>Target = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Level</typename><string>Level = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Internalformat</typename><string>Internalformat = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Width</typename><string>Width = Border = ImageSize = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Border</typename><string/></subtype>
        <subtype><typename>ImageSize</typename><string/></subtype>
        <subtype><typename>Data</typename><string>Data = <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Border</anno>
  <anno>Data</anno>
  <anno>ImageSize</anno>
  <anno>Internalformat</anno>
  <anno>Level</anno>
  <anno>Target</anno>
  <anno>Width</anno>
</spec>
<spec>
  <name>compressedTexImage2D</name>
  <arity>8</arity>
  <contract>
    <clause>
      <head>compressedTexImage2D(Target, Level, Internalformat, Width, Height,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Border, ImageSize, Data) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Target</typename><string>Target = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Level</typename><string>Level = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Internalformat</typename><string>Internalformat = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Width</typename><string>Width = Height = Border = ImageSize = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Height</typename><string/></subtype>
        <subtype><typename>Border</typename><string/></subtype>
        <subtype><typename>ImageSize</typename><string/></subtype>
        <subtype><typename>Data</typename><string>Data = <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Border</anno>
  <anno>Data</anno>
  <anno>Height</anno>
  <anno>ImageSize</anno>
  <anno>Internalformat</anno>
  <anno>Level</anno>
  <anno>Target</anno>
  <anno>Width</anno>
</spec>
<spec>
  <name>compressedTexImage3D</name>
  <arity>9</arity>
  <contract>
    <clause>
      <head>compressedTexImage3D(Target, Level, Internalformat, Width, Height,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Depth, Border, ImageSize, Data) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Target</typename><string>Target = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Level</typename><string>Level = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Internalformat</typename><string>Internalformat = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Width</typename><string>Width = Height = Depth = Border = ImageSize = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Height</typename><string/></subtype>
        <subtype><typename>Depth</typename><string/></subtype>
        <subtype><typename>Border</typename><string/></subtype>
        <subtype><typename>ImageSize</typename><string/></subtype>
        <subtype><typename>Data</typename><string>Data = <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Border</anno>
  <anno>Data</anno>
  <anno>Depth</anno>
  <anno>Height</anno>
  <anno>ImageSize</anno>
  <anno>Internalformat</anno>
  <anno>Level</anno>
  <anno>Target</anno>
  <anno>Width</anno>
</spec>
<spec>
  <name>compressedTexSubImage1D</name>
  <arity>7</arity>
  <contract>
    <clause>
      <head>compressedTexSubImage1D(Target, Level, Xoffset, Width, Format,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ImageSize, Data) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Target</typename><string>Target = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Level</typename><string>Level = Xoffset = Width = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Xoffset</typename><string/></subtype>
        <subtype><typename>Width</typename><string/></subtype>
        <subtype><typename>Format</typename><string>Format = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>ImageSize</typename><string>ImageSize = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Data</typename><string>Data = <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Data</anno>
  <anno>Format</anno>
  <anno>ImageSize</anno>
  <anno>Level</anno>
  <anno>Target</anno>
  <anno>Width</anno>
  <anno>Xoffset</anno>
</spec>
<spec>
  <name>compressedTexSubImage2D</name>
  <arity>9</arity>
  <contract>
    <clause>
      <head>compressedTexSubImage2D(Target, Level, Xoffset, Yoffset, Width,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Height, Format, ImageSize, Data) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Target</typename><string>Target = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Level</typename><string>Level = Xoffset = Yoffset = Width = Height = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Xoffset</typename><string/></subtype>
        <subtype><typename>Yoffset</typename><string/></subtype>
        <subtype><typename>Width</typename><string/></subtype>
        <subtype><typename>Height</typename><string/></subtype>
        <subtype><typename>Format</typename><string>Format = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>ImageSize</typename><string>ImageSize = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Data</typename><string>Data = <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Data</anno>
  <anno>Format</anno>
  <anno>Height</anno>
  <anno>ImageSize</anno>
  <anno>Level</anno>
  <anno>Target</anno>
  <anno>Width</anno>
  <anno>Xoffset</anno>
  <anno>Yoffset</anno>
</spec>
<spec>
  <name>compressedTexSubImage3D</name>
  <arity>11</arity>
  <contract>
    <clause>
      <head>compressedTexSubImage3D(Target, Level, Xoffset, Yoffset, Zoffset,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Width, Height, Depth, Format, ImageSize,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Data) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Target</typename><string>Target = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Level</typename><string>Level = Xoffset = Yoffset = Zoffset = Width = Height = Depth = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Xoffset</typename><string/></subtype>
        <subtype><typename>Yoffset</typename><string/></subtype>
        <subtype><typename>Zoffset</typename><string/></subtype>
        <subtype><typename>Width</typename><string/></subtype>
        <subtype><typename>Height</typename><string/></subtype>
        <subtype><typename>Depth</typename><string/></subtype>
        <subtype><typename>Format</typename><string>Format = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>ImageSize</typename><string>ImageSize = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Data</typename><string>Data = <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Data</anno>
  <anno>Depth</anno>
  <anno>Format</anno>
  <anno>Height</anno>
  <anno>ImageSize</anno>
  <anno>Level</anno>
  <anno>Target</anno>
  <anno>Width</anno>
  <anno>Xoffset</anno>
  <anno>Yoffset</anno>
  <anno>Zoffset</anno>
</spec>
<spec>
  <name>compressedTextureSubImage1D</name>
  <arity>7</arity>
  <contract>
    <clause>
      <head>compressedTextureSubImage1D(Texture, Level, Xoffset, Width,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Format, ImageSize, Data) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Texture</typename><string>Texture = Level = Xoffset = Width = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Level</typename><string/></subtype>
        <subtype><typename>Xoffset</typename><string/></subtype>
        <subtype><typename>Width</typename><string/></subtype>
        <subtype><typename>Format</typename><string>Format = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>ImageSize</typename><string>ImageSize = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Data</typename><string>Data = <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Data</anno>
  <anno>Format</anno>
  <anno>ImageSize</anno>
  <anno>Level</anno>
  <anno>Texture</anno>
  <anno>Width</anno>
  <anno>Xoffset</anno>
</spec>
<spec>
  <name>compressedTextureSubImage2D</name>
  <arity>9</arity>
  <contract>
    <clause>
      <head>compressedTextureSubImage2D(Texture, Level, Xoffset, Yoffset,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Width, Height, Format, ImageSize,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Data) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Texture</typename><string>Texture = Level = Xoffset = Yoffset = Width = Height = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Level</typename><string/></subtype>
        <subtype><typename>Xoffset</typename><string/></subtype>
        <subtype><typename>Yoffset</typename><string/></subtype>
        <subtype><typename>Width</typename><string/></subtype>
        <subtype><typename>Height</typename><string/></subtype>
        <subtype><typename>Format</typename><string>Format = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>ImageSize</typename><string>ImageSize = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Data</typename><string>Data = <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Data</anno>
  <anno>Format</anno>
  <anno>Height</anno>
  <anno>ImageSize</anno>
  <anno>Level</anno>
  <anno>Texture</anno>
  <anno>Width</anno>
  <anno>Xoffset</anno>
  <anno>Yoffset</anno>
</spec>
<spec>
  <name>compressedTextureSubImage3D</name>
  <arity>11</arity>
  <contract>
    <clause>
      <head>compressedTextureSubImage3D(Texture, Level, Xoffset, Yoffset,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Zoffset, Width, Height, Depth, Format,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ImageSize, Data) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Texture</typename><string>Texture = Level = Xoffset = Yoffset = Zoffset = Width = Height = Depth = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Level</typename><string/></subtype>
        <subtype><typename>Xoffset</typename><string/></subtype>
        <subtype><typename>Yoffset</typename><string/></subtype>
        <subtype><typename>Zoffset</typename><string/></subtype>
        <subtype><typename>Width</typename><string/></subtype>
        <subtype><typename>Height</typename><string/></subtype>
        <subtype><typename>Depth</typename><string/></subtype>
        <subtype><typename>Format</typename><string>Format = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>ImageSize</typename><string>ImageSize = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Data</typename><string>Data = <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Data</anno>
  <anno>Depth</anno>
  <anno>Format</anno>
  <anno>Height</anno>
  <anno>ImageSize</anno>
  <anno>Level</anno>
  <anno>Texture</anno>
  <anno>Width</anno>
  <anno>Xoffset</anno>
  <anno>Yoffset</anno>
  <anno>Zoffset</anno>
</spec>
<spec>
  <name>convolutionFilter1D</name>
  <arity>6</arity>
  <contract>
    <clause>
      <head>convolutionFilter1D(Target, Internalformat, Width, Format, Type,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Image) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Target</typename><string>Target = Internalformat = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Internalformat</typename><string/></subtype>
        <subtype><typename>Width</typename><string>Width = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Format</typename><string>Format = Type = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Type</typename><string/></subtype>
        <subtype><typename>Image</typename><string>Image = <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Format</anno>
  <anno>Image</anno>
  <anno>Internalformat</anno>
  <anno>Target</anno>
  <anno>Type</anno>
  <anno>Width</anno>
</spec>
<spec>
  <name>convolutionFilter2D</name>
  <arity>7</arity>
  <contract>
    <clause>
      <head>convolutionFilter2D(Target, Internalformat, Width, Height, Format,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Type, Image) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Target</typename><string>Target = Internalformat = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Internalformat</typename><string/></subtype>
        <subtype><typename>Width</typename><string>Width = Height = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Height</typename><string/></subtype>
        <subtype><typename>Format</typename><string>Format = Type = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Type</typename><string/></subtype>
        <subtype><typename>Image</typename><string>Image = <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Format</anno>
  <anno>Height</anno>
  <anno>Image</anno>
  <anno>Internalformat</anno>
  <anno>Target</anno>
  <anno>Type</anno>
  <anno>Width</anno>
</spec>
<spec>
  <name>convolutionParameterf</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>convolutionParameterf(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Pname :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Params :: <seetype marker="erlang#tuple">tuple()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Params</anno>
  <anno>Pname</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>convolutionParameterfv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>convolutionParameterfv(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Pname :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Params :: <seetype marker="erlang#tuple">tuple()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Params</anno>
  <anno>Pname</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>convolutionParameteri</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>convolutionParameteri(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Pname :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Params :: <seetype marker="erlang#tuple">tuple()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Params</anno>
  <anno>Pname</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>convolutionParameteriv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>convolutionParameteriv(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Pname :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Params :: <seetype marker="erlang#tuple">tuple()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Params</anno>
  <anno>Pname</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>copyBufferSubData</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>copyBufferSubData(ReadTarget, WriteTarget, ReadOffset,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>WriteOffset, Size) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>ReadTarget</typename><string>ReadTarget = WriteTarget = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>WriteTarget</typename><string/></subtype>
        <subtype><typename>ReadOffset</typename><string>ReadOffset = WriteOffset = Size = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>WriteOffset</typename><string></string></subtype>
        <subtype><typename>Size</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>ReadOffset</anno>
  <anno>ReadTarget</anno>
  <anno>Size</anno>
  <anno>WriteOffset</anno>
  <anno>WriteTarget</anno>
</spec>
<spec>
  <name>copyColorSubTable</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>copyColorSubTable(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Start :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Y :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Width :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Start</anno>
  <anno>Target</anno>
  <anno>Width</anno>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>copyColorTable</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>copyColorTable(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Internalformat :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Y :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Width :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Internalformat</anno>
  <anno>Target</anno>
  <anno>Width</anno>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>copyConvolutionFilter1D</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>copyConvolutionFilter1D(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Internalformat :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Y :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Width :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Internalformat</anno>
  <anno>Target</anno>
  <anno>Width</anno>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>copyConvolutionFilter2D</name>
  <arity>6</arity>
  <contract>
    <clause>
      <head>copyConvolutionFilter2D(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Internalformat :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Y :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Width :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Height :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Height</anno>
  <anno>Internalformat</anno>
  <anno>Target</anno>
  <anno>Width</anno>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>copyImageSubData</name>
  <arity>15</arity>
  <contract>
    <clause>
      <head>copyImageSubData(SrcName, SrcTarget, SrcLevel, SrcX, SrcY, SrcZ,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>DstName, DstTarget, DstLevel, DstX, DstY, DstZ,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>SrcWidth, SrcHeight, SrcDepth) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>SrcName</typename><string>SrcName = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>SrcTarget</typename><string>SrcTarget = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>SrcLevel</typename><string>SrcLevel = SrcX = SrcY = SrcZ = DstName = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>SrcX</typename><string/></subtype>
        <subtype><typename>SrcY</typename><string/></subtype>
        <subtype><typename>SrcZ</typename><string/></subtype>
        <subtype><typename>DstName</typename><string/></subtype>
        <subtype><typename>DstTarget</typename><string>DstTarget = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>DstLevel</typename><string>DstLevel = DstX = DstY = DstZ = SrcWidth = SrcHeight = SrcDepth = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>DstX</typename><string></string></subtype>
        <subtype><typename>DstY</typename><string></string></subtype>
        <subtype><typename>DstZ</typename><string></string></subtype>
        <subtype><typename>SrcWidth</typename><string></string></subtype>
        <subtype><typename>SrcHeight</typename><string></string></subtype>
        <subtype><typename>SrcDepth</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>DstLevel</anno>
  <anno>DstName</anno>
  <anno>DstTarget</anno>
  <anno>DstX</anno>
  <anno>DstY</anno>
  <anno>DstZ</anno>
  <anno>SrcDepth</anno>
  <anno>SrcHeight</anno>
  <anno>SrcLevel</anno>
  <anno>SrcName</anno>
  <anno>SrcTarget</anno>
  <anno>SrcWidth</anno>
  <anno>SrcX</anno>
  <anno>SrcY</anno>
  <anno>SrcZ</anno>
</spec>
<spec>
  <name>copyPixels</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>copyPixels(X :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Y :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Width :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Height :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Type :: <seetype marker="#enum">enum()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Height</anno>
  <anno>Type</anno>
  <anno>Width</anno>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>copyTexImage1D</name>
  <arity>7</arity>
  <contract>
    <clause>
      <head>copyTexImage1D(Target, Level, Internalformat, X, Y, Width, Border) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Target</typename><string>Target = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Level</typename><string>Level = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Internalformat</typename><string>Internalformat = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>X</typename><string>X = Y = Width = Border = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Y</typename><string></string></subtype>
        <subtype><typename>Width</typename><string></string></subtype>
        <subtype><typename>Border</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Border</anno>
  <anno>Internalformat</anno>
  <anno>Level</anno>
  <anno>Target</anno>
  <anno>Width</anno>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>copyTexImage2D</name>
  <arity>8</arity>
  <contract>
    <clause>
      <head>copyTexImage2D(Target, Level, Internalformat, X, Y, Width, Height,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Border) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Target</typename><string>Target = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Level</typename><string>Level = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Internalformat</typename><string>Internalformat = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>X</typename><string>X = Y = Width = Height = Border = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Y</typename><string></string></subtype>
        <subtype><typename>Width</typename><string></string></subtype>
        <subtype><typename>Height</typename><string></string></subtype>
        <subtype><typename>Border</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Border</anno>
  <anno>Height</anno>
  <anno>Internalformat</anno>
  <anno>Level</anno>
  <anno>Target</anno>
  <anno>Width</anno>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>copyTexSubImage1D</name>
  <arity>6</arity>
  <contract>
    <clause>
      <head>copyTexSubImage1D(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Level :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Xoffset :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Y :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Width :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Level</anno>
  <anno>Target</anno>
  <anno>Width</anno>
  <anno>X</anno>
  <anno>Xoffset</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>copyTexSubImage2D</name>
  <arity>8</arity>
  <contract>
    <clause>
      <head>copyTexSubImage2D(Target, Level, Xoffset, Yoffset, X, Y, Width,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Height) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Target</typename><string>Target = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Level</typename><string>Level = Xoffset = Yoffset = X = Y = Width = Height = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Xoffset</typename><string></string></subtype>
        <subtype><typename>Yoffset</typename><string></string></subtype>
        <subtype><typename>X</typename><string></string></subtype>
        <subtype><typename>Y</typename><string></string></subtype>
        <subtype><typename>Width</typename><string></string></subtype>
        <subtype><typename>Height</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Height</anno>
  <anno>Level</anno>
  <anno>Target</anno>
  <anno>Width</anno>
  <anno>X</anno>
  <anno>Xoffset</anno>
  <anno>Y</anno>
  <anno>Yoffset</anno>
</spec>
<spec>
  <name>copyTexSubImage3D</name>
  <arity>9</arity>
  <contract>
    <clause>
      <head>copyTexSubImage3D(Target, Level, Xoffset, Yoffset, Zoffset, X, Y,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Width, Height) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Target</typename><string>Target = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Level</typename><string>Level = Xoffset = Yoffset = Zoffset = X = Y = Width = Height = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Xoffset</typename><string></string></subtype>
        <subtype><typename>Yoffset</typename><string></string></subtype>
        <subtype><typename>Zoffset</typename><string></string></subtype>
        <subtype><typename>X</typename><string></string></subtype>
        <subtype><typename>Y</typename><string></string></subtype>
        <subtype><typename>Width</typename><string></string></subtype>
        <subtype><typename>Height</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Height</anno>
  <anno>Level</anno>
  <anno>Target</anno>
  <anno>Width</anno>
  <anno>X</anno>
  <anno>Xoffset</anno>
  <anno>Y</anno>
  <anno>Yoffset</anno>
  <anno>Zoffset</anno>
</spec>
<spec>
  <name>createBuffers</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>createBuffers(N :: <seetype marker="#i">i()</seetype>) -&gt; [<seetype marker="#i">i()</seetype>]</head></clause>
  </contract>
  <anno>N</anno>
</spec>
<spec>
  <name>createFramebuffers</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>createFramebuffers(N :: <seetype marker="#i">i()</seetype>) -&gt; [<seetype marker="#i">i()</seetype>]</head></clause>
  </contract>
  <anno>N</anno>
</spec>
<spec>
  <name>createProgram</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>createProgram() -&gt; <seetype marker="#i">i()</seetype></head></clause>
  </contract>
</spec>
<spec>
  <name>createProgramObjectARB</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>createProgramObjectARB() -&gt; <seetype marker="#i">i()</seetype></head></clause>
  </contract>
</spec>
<spec>
  <name>createProgramPipelines</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>createProgramPipelines(N :: <seetype marker="#i">i()</seetype>) -&gt; [<seetype marker="#i">i()</seetype>]</head></clause>
  </contract>
  <anno>N</anno>
</spec>
<spec>
  <name>createQueries</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>createQueries(Target :: <seetype marker="#enum">enum()</seetype>, N :: <seetype marker="#i">i()</seetype>) -&gt; [<seetype marker="#i">i()</seetype>]</head></clause>
  </contract>
  <anno>N</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>createRenderbuffers</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>createRenderbuffers(N :: <seetype marker="#i">i()</seetype>) -&gt; [<seetype marker="#i">i()</seetype>]</head></clause>
  </contract>
  <anno>N</anno>
</spec>
<spec>
  <name>createSamplers</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>createSamplers(N :: <seetype marker="#i">i()</seetype>) -&gt; [<seetype marker="#i">i()</seetype>]</head></clause>
  </contract>
  <anno>N</anno>
</spec>
<spec>
  <name>createShader</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>createShader(Type :: <seetype marker="#enum">enum()</seetype>) -&gt; <seetype marker="#i">i()</seetype></head></clause>
  </contract>
  <anno>Type</anno>
</spec>
<spec>
  <name>createShaderObjectARB</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>createShaderObjectARB(ShaderType :: <seetype marker="#enum">enum()</seetype>) -&gt; <seetype marker="#i">i()</seetype></head></clause>
  </contract>
  <anno>ShaderType</anno>
</spec>
<spec>
  <name>createShaderProgramv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>createShaderProgramv(Type :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Strings :: [<seetype marker="unicode#chardata">unicode:chardata()</seetype>]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype></head></clause>
  </contract>
  <anno>Strings</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>createTextures</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>createTextures(Target :: <seetype marker="#enum">enum()</seetype>, N :: <seetype marker="#i">i()</seetype>) -&gt; [<seetype marker="#i">i()</seetype>]</head></clause>
  </contract>
  <anno>N</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>createTransformFeedbacks</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>createTransformFeedbacks(N :: <seetype marker="#i">i()</seetype>) -&gt; [<seetype marker="#i">i()</seetype>]</head></clause>
  </contract>
  <anno>N</anno>
</spec>
<spec>
  <name>createVertexArrays</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>createVertexArrays(N :: <seetype marker="#i">i()</seetype>) -&gt; [<seetype marker="#i">i()</seetype>]</head></clause>
  </contract>
  <anno>N</anno>
</spec>
<spec>
  <name>cullFace</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>cullFace(Mode :: <seetype marker="#enum">enum()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Mode</anno>
</spec>
<spec>
  <name>currentPaletteMatrixARB</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>currentPaletteMatrixARB(Index :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
</spec>
<spec>
  <name>debugMessageControl</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>debugMessageControl(Source :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Type :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Severity :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Ids :: [<seetype marker="#i">i()</seetype>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Enabled :: 0 | 1) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Enabled</anno>
  <anno>Ids</anno>
  <anno>Severity</anno>
  <anno>Source</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>debugMessageInsert</name>
  <arity>6</arity>
  <contract>
    <clause>
      <head>debugMessageInsert(Source, Type, Id, Severity, Length, Buf) -&gt; ok</head>
      <guard>
        <subtype><typename>Source</typename><string>Source = Type = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Type</typename><string/></subtype>
        <subtype><typename>Id</typename><string>Id = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Severity</typename><string>Severity = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Length</typename><string>Length = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Buf</typename><string>Buf = <seetype marker="erlang#string">string()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Buf</anno>
  <anno>Id</anno>
  <anno>Length</anno>
  <anno>Severity</anno>
  <anno>Source</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>deleteBuffers</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>deleteBuffers(Buffers :: [<seetype marker="#i">i()</seetype>]) -&gt; ok</head></clause>
  </contract>
  <anno>Buffers</anno>
</spec>
<spec>
  <name>deleteFramebuffers</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>deleteFramebuffers(Framebuffers :: [<seetype marker="#i">i()</seetype>]) -&gt; ok</head></clause>
  </contract>
  <anno>Framebuffers</anno>
</spec>
<spec>
  <name>deleteLists</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>deleteLists(List :: <seetype marker="#i">i()</seetype>, Range :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>List</anno>
  <anno>Range</anno>
</spec>
<spec>
  <name>deleteNamedStringARB</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>deleteNamedStringARB(Name :: <seetype marker="erlang#string">string()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Name</anno>
</spec>
<spec>
  <name>deleteObjectARB</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>deleteObjectARB(Obj :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Obj</anno>
</spec>
<spec>
  <name>deleteProgram</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>deleteProgram(Program :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Program</anno>
</spec>
<spec>
  <name>deleteProgramPipelines</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>deleteProgramPipelines(Pipelines :: [<seetype marker="#i">i()</seetype>]) -&gt; ok</head></clause>
  </contract>
  <anno>Pipelines</anno>
</spec>
<spec>
  <name>deleteProgramsARB</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>deleteProgramsARB(Programs :: [<seetype marker="#i">i()</seetype>]) -&gt; ok</head></clause>
  </contract>
  <anno>Programs</anno>
</spec>
<spec>
  <name>deleteQueries</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>deleteQueries(Ids :: [<seetype marker="#i">i()</seetype>]) -&gt; ok</head></clause>
  </contract>
  <anno>Ids</anno>
</spec>
<spec>
  <name>deleteRenderbuffers</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>deleteRenderbuffers(Renderbuffers :: [<seetype marker="#i">i()</seetype>]) -&gt; ok</head></clause>
  </contract>
  <anno>Renderbuffers</anno>
</spec>
<spec>
  <name>deleteSamplers</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>deleteSamplers(Samplers :: [<seetype marker="#i">i()</seetype>]) -&gt; ok</head></clause>
  </contract>
  <anno>Samplers</anno>
</spec>
<spec>
  <name>deleteShader</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>deleteShader(Shader :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Shader</anno>
</spec>
<spec>
  <name>deleteSync</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>deleteSync(Sync :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Sync</anno>
</spec>
<spec>
  <name>deleteTextures</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>deleteTextures(Textures :: [<seetype marker="#i">i()</seetype>]) -&gt; ok</head></clause>
  </contract>
  <anno>Textures</anno>
</spec>
<spec>
  <name>deleteTransformFeedbacks</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>deleteTransformFeedbacks(Ids :: [<seetype marker="#i">i()</seetype>]) -&gt; ok</head></clause>
  </contract>
  <anno>Ids</anno>
</spec>
<spec>
  <name>deleteVertexArrays</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>deleteVertexArrays(Arrays :: [<seetype marker="#i">i()</seetype>]) -&gt; ok</head></clause>
  </contract>
  <anno>Arrays</anno>
</spec>
<spec>
  <name>depthBoundsEXT</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>depthBoundsEXT(Zmin :: <seetype marker="#clamp">clamp()</seetype>, Zmax :: <seetype marker="#clamp">clamp()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Zmax</anno>
  <anno>Zmin</anno>
</spec>
<spec>
  <name>depthFunc</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>depthFunc(Func :: <seetype marker="#enum">enum()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Func</anno>
</spec>
<spec>
  <name>depthMask</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>depthMask(Flag :: 0 | 1) -&gt; ok</head></clause>
  </contract>
  <anno>Flag</anno>
</spec>
<spec>
  <name>depthRange</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>depthRange(Near_val :: <seetype marker="#clamp">clamp()</seetype>, Far_val :: <seetype marker="#clamp">clamp()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Far_val</anno>
  <anno>Near_val</anno>
</spec>
<spec>
  <name>depthRangeArrayv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>depthRangeArrayv(First :: <seetype marker="#i">i()</seetype>, V :: [{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}]) -&gt; ok</head></clause>
  </contract>
  <anno>First</anno>
  <anno>V</anno>
</spec>
<spec>
  <name>depthRangeIndexed</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>depthRangeIndexed(Index :: <seetype marker="#i">i()</seetype>, N :: <seetype marker="#f">f()</seetype>, F :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>F</anno>
  <anno>Index</anno>
  <anno>N</anno>
</spec>
<spec>
  <name>depthRangef</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>depthRangef(N :: <seetype marker="#f">f()</seetype>, F :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>F</anno>
  <anno>N</anno>
</spec>
<spec>
  <name>detachObjectARB</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>detachObjectARB(ContainerObj :: <seetype marker="#i">i()</seetype>, AttachedObj :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>AttachedObj</anno>
  <anno>ContainerObj</anno>
</spec>
<spec>
  <name>detachShader</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>detachShader(Program :: <seetype marker="#i">i()</seetype>, Shader :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Program</anno>
  <anno>Shader</anno>
</spec>
<spec>
  <name>disable</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>disable(Cap :: <seetype marker="#enum">enum()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Cap</anno>
</spec>
<spec>
  <name>disableClientState</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>disableClientState(Cap :: <seetype marker="#enum">enum()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Cap</anno>
</spec>
<spec>
  <name>disableVertexArrayAttrib</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>disableVertexArrayAttrib(Vaobj :: <seetype marker="#i">i()</seetype>, Index :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>Vaobj</anno>
</spec>
<spec>
  <name>disableVertexAttribArray</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>disableVertexAttribArray(Index :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
</spec>
<spec>
  <name>disablei</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>disablei(Target :: <seetype marker="#enum">enum()</seetype>, Index :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>dispatchCompute</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>dispatchCompute(Num_groups_x :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Num_groups_y :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Num_groups_z :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Num_groups_x</anno>
  <anno>Num_groups_y</anno>
  <anno>Num_groups_z</anno>
</spec>
<spec>
  <name>dispatchComputeGroupSizeARB</name>
  <arity>6</arity>
  <contract>
    <clause>
      <head>dispatchComputeGroupSizeARB(Num_groups_x, Num_groups_y,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Num_groups_z, Group_size_x,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Group_size_y, Group_size_z) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Num_groups_x</typename><string>Num_groups_x = Num_groups_y = Num_groups_z = Group_size_x = Group_size_y = Group_size_z = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Num_groups_y</typename><string></string></subtype>
        <subtype><typename>Num_groups_z</typename><string></string></subtype>
        <subtype><typename>Group_size_x</typename><string></string></subtype>
        <subtype><typename>Group_size_y</typename><string></string></subtype>
        <subtype><typename>Group_size_z</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Group_size_x</anno>
  <anno>Group_size_y</anno>
  <anno>Group_size_z</anno>
  <anno>Num_groups_x</anno>
  <anno>Num_groups_y</anno>
  <anno>Num_groups_z</anno>
</spec>
<spec>
  <name>dispatchComputeIndirect</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>dispatchComputeIndirect(Indirect :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Indirect</anno>
</spec>
<spec>
  <name>drawArrays</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>drawArrays(Mode :: <seetype marker="#enum">enum()</seetype>, First :: <seetype marker="#i">i()</seetype>, Count :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Count</anno>
  <anno>First</anno>
  <anno>Mode</anno>
</spec>
<spec>
  <name>drawArraysIndirect</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>drawArraysIndirect(Mode :: <seetype marker="#enum">enum()</seetype>, Indirect :: <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Indirect</anno>
  <anno>Mode</anno>
</spec>
<spec>
  <name>drawArraysInstanced</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>drawArraysInstanced(Mode :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>First :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Count :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Instancecount :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Count</anno>
  <anno>First</anno>
  <anno>Instancecount</anno>
  <anno>Mode</anno>
</spec>
<spec>
  <name>drawArraysInstancedBaseInstance</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>drawArraysInstancedBaseInstance(Mode :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>First :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Count :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Instancecount :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Baseinstance :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Baseinstance</anno>
  <anno>Count</anno>
  <anno>First</anno>
  <anno>Instancecount</anno>
  <anno>Mode</anno>
</spec>
<spec>
  <name>drawBuffer</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>drawBuffer(Mode :: <seetype marker="#enum">enum()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Mode</anno>
</spec>
<spec>
  <name>drawBuffers</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>drawBuffers(Bufs :: [<seetype marker="#enum">enum()</seetype>]) -&gt; ok</head></clause>
  </contract>
  <anno>Bufs</anno>
</spec>
<spec>
  <name>drawElements</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>drawElements(Mode :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Count :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Type :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Indices :: <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Count</anno>
  <anno>Indices</anno>
  <anno>Mode</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>drawElementsBaseVertex</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>drawElementsBaseVertex(Mode, Count, Type, Indices, Basevertex) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Mode</typename><string>Mode = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Count</typename><string>Count = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Type</typename><string>Type = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Indices</typename><string>Indices = <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype></string></subtype>
        <subtype><typename>Basevertex</typename><string>Basevertex = <seetype marker="#i">i()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Basevertex</anno>
  <anno>Count</anno>
  <anno>Indices</anno>
  <anno>Mode</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>drawElementsIndirect</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>drawElementsIndirect(Mode :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Type :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Indirect :: <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Indirect</anno>
  <anno>Mode</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>drawElementsInstanced</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>drawElementsInstanced(Mode, Count, Type, Indices, Instancecount) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Mode</typename><string>Mode = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Count</typename><string>Count = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Type</typename><string>Type = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Indices</typename><string>Indices = <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype></string></subtype>
        <subtype><typename>Instancecount</typename><string>Instancecount = <seetype marker="#i">i()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Count</anno>
  <anno>Indices</anno>
  <anno>Instancecount</anno>
  <anno>Mode</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>drawElementsInstancedBaseInstance</name>
  <arity>6</arity>
  <contract>
    <clause>
      <head>drawElementsInstancedBaseInstance(Mode, Count, Type, Indices,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Instancecount, Baseinstance) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Mode</typename><string>Mode = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Count</typename><string>Count = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Type</typename><string>Type = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Indices</typename><string>Indices = <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype></string></subtype>
        <subtype><typename>Instancecount</typename><string>Instancecount = Baseinstance = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Baseinstance</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Baseinstance</anno>
  <anno>Count</anno>
  <anno>Indices</anno>
  <anno>Instancecount</anno>
  <anno>Mode</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>drawElementsInstancedBaseVertex</name>
  <arity>6</arity>
  <contract>
    <clause>
      <head>drawElementsInstancedBaseVertex(Mode, Count, Type, Indices,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Instancecount, Basevertex) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Mode</typename><string>Mode = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Count</typename><string>Count = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Type</typename><string>Type = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Indices</typename><string>Indices = <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype></string></subtype>
        <subtype><typename>Instancecount</typename><string>Instancecount = Basevertex = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Basevertex</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Basevertex</anno>
  <anno>Count</anno>
  <anno>Indices</anno>
  <anno>Instancecount</anno>
  <anno>Mode</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>drawElementsInstancedBaseVertexBaseInstance</name>
  <arity>7</arity>
  <contract>
    <clause>
      <head>drawElementsInstancedBaseVertexBaseInstance(Mode, Count, Type,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Indices,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Instancecount,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Basevertex,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Baseinstance) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Mode</typename><string>Mode = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Count</typename><string>Count = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Type</typename><string>Type = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Indices</typename><string>Indices = <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype></string></subtype>
        <subtype><typename>Instancecount</typename><string>Instancecount = Basevertex = Baseinstance = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Basevertex</typename><string></string></subtype>
        <subtype><typename>Baseinstance</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Baseinstance</anno>
  <anno>Basevertex</anno>
  <anno>Count</anno>
  <anno>Indices</anno>
  <anno>Instancecount</anno>
  <anno>Mode</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>drawPixels</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>drawPixels(Width :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Height :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Format :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Type :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Pixels :: <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Format</anno>
  <anno>Height</anno>
  <anno>Pixels</anno>
  <anno>Type</anno>
  <anno>Width</anno>
</spec>
<spec>
  <name>drawRangeElements</name>
  <arity>6</arity>
  <contract>
    <clause>
      <head>drawRangeElements(Mode, Start, End, Count, Type, Indices) -&gt; ok</head>
      <guard>
        <subtype><typename>Mode</typename><string>Mode = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Start</typename><string>Start = End = Count = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>End</typename><string/></subtype>
        <subtype><typename>Count</typename><string/></subtype>
        <subtype><typename>Type</typename><string>Type = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Indices</typename><string>Indices = <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Count</anno>
  <anno>End</anno>
  <anno>Indices</anno>
  <anno>Mode</anno>
  <anno>Start</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>drawRangeElementsBaseVertex</name>
  <arity>7</arity>
  <contract>
    <clause>
      <head>drawRangeElementsBaseVertex(Mode, Start, End, Count, Type,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Indices, Basevertex) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Mode</typename><string>Mode = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Start</typename><string>Start = End = Count = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>End</typename><string/></subtype>
        <subtype><typename>Count</typename><string/></subtype>
        <subtype><typename>Type</typename><string>Type = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Indices</typename><string>Indices = <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype></string></subtype>
        <subtype><typename>Basevertex</typename><string>Basevertex = <seetype marker="#i">i()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Basevertex</anno>
  <anno>Count</anno>
  <anno>End</anno>
  <anno>Indices</anno>
  <anno>Mode</anno>
  <anno>Start</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>drawTransformFeedback</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>drawTransformFeedback(Mode :: <seetype marker="#enum">enum()</seetype>, Id :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Id</anno>
  <anno>Mode</anno>
</spec>
<spec>
  <name>drawTransformFeedbackInstanced</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>drawTransformFeedbackInstanced(Mode :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Id :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Instancecount :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Id</anno>
  <anno>Instancecount</anno>
  <anno>Mode</anno>
</spec>
<spec>
  <name>drawTransformFeedbackStream</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>drawTransformFeedbackStream(Mode :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Id :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Stream :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Id</anno>
  <anno>Mode</anno>
  <anno>Stream</anno>
</spec>
<spec>
  <name>drawTransformFeedbackStreamInstanced</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>drawTransformFeedbackStreamInstanced(Mode :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Id :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Stream :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Instancecount :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Id</anno>
  <anno>Instancecount</anno>
  <anno>Mode</anno>
  <anno>Stream</anno>
</spec>
<spec>
  <name>edgeFlag</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>edgeFlag(Flag :: 0 | 1) -&gt; ok</head></clause>
  </contract>
  <anno>Flag</anno>
</spec>
<spec>
  <name>edgeFlagPointer</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>edgeFlagPointer(Stride :: <seetype marker="#i">i()</seetype>, Ptr :: <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Ptr</anno>
  <anno>Stride</anno>
</spec>
<spec>
  <name>edgeFlagv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>edgeFlagv(X1 :: {Flag :: 0 | 1}) -&gt; ok</head></clause>
  </contract>
  <anno>Flag</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>enable</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>enable(Cap :: <seetype marker="#enum">enum()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Cap</anno>
</spec>
<spec>
  <name>enableClientState</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>enableClientState(Cap :: <seetype marker="#enum">enum()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Cap</anno>
</spec>
<spec>
  <name>enableVertexArrayAttrib</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>enableVertexArrayAttrib(Vaobj :: <seetype marker="#i">i()</seetype>, Index :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>Vaobj</anno>
</spec>
<spec>
  <name>enableVertexAttribArray</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>enableVertexAttribArray(Index :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
</spec>
<spec>
  <name>enablei</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>enablei(Target :: <seetype marker="#enum">enum()</seetype>, Index :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>endConditionalRender</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>endConditionalRender() -&gt; ok</head></clause>
  </contract>
</spec>
<spec>
  <name>endList</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>endList() -&gt; ok</head></clause>
  </contract>
</spec>
<spec>
  <name>endQuery</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>endQuery(Target :: <seetype marker="#enum">enum()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Target</anno>
</spec>
<spec>
  <name>endQueryIndexed</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>endQueryIndexed(Target :: <seetype marker="#enum">enum()</seetype>, Index :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>endTransformFeedback</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>endTransformFeedback() -&gt; ok</head></clause>
  </contract>
</spec>
<spec>
  <name>evalCoord1d</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>evalCoord1d(U :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>U</anno>
</spec>
<spec>
  <name>evalCoord1dv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>evalCoord1dv(X1 :: {U :: <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>U</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>evalCoord1f</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>evalCoord1f(U :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>U</anno>
</spec>
<spec>
  <name>evalCoord1fv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>evalCoord1fv(X1 :: {U :: <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>U</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>evalCoord2d</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>evalCoord2d(U :: <seetype marker="#f">f()</seetype>, V :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>U</anno>
  <anno>V</anno>
</spec>
<spec>
  <name>evalCoord2dv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>evalCoord2dv(X1 :: {U :: <seetype marker="#f">f()</seetype>, V :: <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>U</anno>
  <anno>V</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>evalCoord2f</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>evalCoord2f(U :: <seetype marker="#f">f()</seetype>, V :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>U</anno>
  <anno>V</anno>
</spec>
<spec>
  <name>evalCoord2fv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>evalCoord2fv(X1 :: {U :: <seetype marker="#f">f()</seetype>, V :: <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>U</anno>
  <anno>V</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>evalMesh1</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>evalMesh1(Mode :: <seetype marker="#enum">enum()</seetype>, I1 :: <seetype marker="#i">i()</seetype>, I2 :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>I1</anno>
  <anno>I2</anno>
  <anno>Mode</anno>
</spec>
<spec>
  <name>evalMesh2</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>evalMesh2(Mode :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>I1 :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>I2 :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>J1 :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>J2 :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>I1</anno>
  <anno>I2</anno>
  <anno>J1</anno>
  <anno>J2</anno>
  <anno>Mode</anno>
</spec>
<spec>
  <name>evalPoint1</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>evalPoint1(I :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>I</anno>
</spec>
<spec>
  <name>evalPoint2</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>evalPoint2(I :: <seetype marker="#i">i()</seetype>, J :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>I</anno>
  <anno>J</anno>
</spec>
<spec>
  <name>evaluateDepthValuesARB</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>evaluateDepthValuesARB() -&gt; ok</head></clause>
  </contract>
</spec>
<spec>
  <name>feedbackBuffer</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>feedbackBuffer(Size :: <seetype marker="#i">i()</seetype>, Type :: <seetype marker="#enum">enum()</seetype>, Buffer :: <seetype marker="#mem">mem()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Buffer</anno>
  <anno>Size</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>fenceSync</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>fenceSync(Condition :: <seetype marker="#enum">enum()</seetype>, Flags :: <seetype marker="#i">i()</seetype>) -&gt; <seetype marker="#i">i()</seetype></head></clause>
  </contract>
  <anno>Condition</anno>
  <anno>Flags</anno>
</spec>
<spec>
  <name>finish</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>finish() -&gt; ok</head></clause>
  </contract>
</spec>
<spec>
  <name>flush</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>flush() -&gt; ok</head></clause>
  </contract>
</spec>
<spec>
  <name>flushMappedBufferRange</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>flushMappedBufferRange(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Offset :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Length :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Length</anno>
  <anno>Offset</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>flushMappedNamedBufferRange</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>flushMappedNamedBufferRange(Buffer :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Offset :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Length :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Buffer</anno>
  <anno>Length</anno>
  <anno>Offset</anno>
</spec>
<spec>
  <name>fogCoordPointer</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>fogCoordPointer(Type :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Stride :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Pointer :: <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Pointer</anno>
  <anno>Stride</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>fogCoordd</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>fogCoordd(Coord :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Coord</anno>
</spec>
<spec>
  <name>fogCoorddv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>fogCoorddv(X1 :: {Coord :: <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Coord</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>fogCoordf</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>fogCoordf(Coord :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Coord</anno>
</spec>
<spec>
  <name>fogCoordfv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>fogCoordfv(X1 :: {Coord :: <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Coord</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>fogf</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>fogf(Pname :: <seetype marker="#enum">enum()</seetype>, Param :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Param</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>fogfv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>fogfv(Pname :: <seetype marker="#enum">enum()</seetype>, Params :: <seetype marker="erlang#tuple">tuple()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Params</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>fogi</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>fogi(Pname :: <seetype marker="#enum">enum()</seetype>, Param :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Param</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>fogiv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>fogiv(Pname :: <seetype marker="#enum">enum()</seetype>, Params :: <seetype marker="erlang#tuple">tuple()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Params</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>framebufferParameteri</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>framebufferParameteri(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Pname :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Param :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Param</anno>
  <anno>Pname</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>framebufferRenderbuffer</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>framebufferRenderbuffer(Target, Attachment, Renderbuffertarget,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Renderbuffer) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Target</typename><string>Target = Attachment = Renderbuffertarget = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Attachment</typename><string/></subtype>
        <subtype><typename>Renderbuffertarget</typename><string/></subtype>
        <subtype><typename>Renderbuffer</typename><string>Renderbuffer = <seetype marker="#i">i()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Attachment</anno>
  <anno>Renderbuffer</anno>
  <anno>Renderbuffertarget</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>framebufferTexture</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>framebufferTexture(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Attachment :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Texture :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Level :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Attachment</anno>
  <anno>Level</anno>
  <anno>Target</anno>
  <anno>Texture</anno>
</spec>
<spec>
  <name>framebufferTexture1D</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>framebufferTexture1D(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Attachment :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Textarget :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Texture :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Level :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Attachment</anno>
  <anno>Level</anno>
  <anno>Target</anno>
  <anno>Textarget</anno>
  <anno>Texture</anno>
</spec>
<spec>
  <name>framebufferTexture2D</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>framebufferTexture2D(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Attachment :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Textarget :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Texture :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Level :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Attachment</anno>
  <anno>Level</anno>
  <anno>Target</anno>
  <anno>Textarget</anno>
  <anno>Texture</anno>
</spec>
<spec>
  <name>framebufferTexture3D</name>
  <arity>6</arity>
  <contract>
    <clause>
      <head>framebufferTexture3D(Target, Attachment, Textarget, Texture,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Level, Zoffset) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Target</typename><string>Target = Attachment = Textarget = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Attachment</typename><string/></subtype>
        <subtype><typename>Textarget</typename><string/></subtype>
        <subtype><typename>Texture</typename><string>Texture = Level = Zoffset = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Level</typename><string></string></subtype>
        <subtype><typename>Zoffset</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Attachment</anno>
  <anno>Level</anno>
  <anno>Target</anno>
  <anno>Textarget</anno>
  <anno>Texture</anno>
  <anno>Zoffset</anno>
</spec>
<spec>
  <name>framebufferTextureFaceARB</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>framebufferTextureFaceARB(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Attachment :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Texture :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Level :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Face :: <seetype marker="#enum">enum()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Attachment</anno>
  <anno>Face</anno>
  <anno>Level</anno>
  <anno>Target</anno>
  <anno>Texture</anno>
</spec>
<spec>
  <name>framebufferTextureLayer</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>framebufferTextureLayer(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Attachment :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Texture :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Level :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Layer :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Attachment</anno>
  <anno>Layer</anno>
  <anno>Level</anno>
  <anno>Target</anno>
  <anno>Texture</anno>
</spec>
<spec>
  <name>frontFace</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>frontFace(Mode :: <seetype marker="#enum">enum()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Mode</anno>
</spec>
<spec>
  <name>frustum</name>
  <arity>6</arity>
  <contract>
    <clause>
      <head>frustum(Left :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Right :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Bottom :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Top :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Near_val :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Far_val :: <seetype marker="#f">f()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Bottom</anno>
  <anno>Far_val</anno>
  <anno>Left</anno>
  <anno>Near_val</anno>
  <anno>Right</anno>
  <anno>Top</anno>
</spec>
<spec>
  <name>genBuffers</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>genBuffers(N :: <seetype marker="#i">i()</seetype>) -&gt; [<seetype marker="#i">i()</seetype>]</head></clause>
  </contract>
  <anno>N</anno>
</spec>
<spec>
  <name>genFramebuffers</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>genFramebuffers(N :: <seetype marker="#i">i()</seetype>) -&gt; [<seetype marker="#i">i()</seetype>]</head></clause>
  </contract>
  <anno>N</anno>
</spec>
<spec>
  <name>genLists</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>genLists(Range :: <seetype marker="#i">i()</seetype>) -&gt; <seetype marker="#i">i()</seetype></head></clause>
  </contract>
  <anno>Range</anno>
</spec>
<spec>
  <name>genProgramPipelines</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>genProgramPipelines(N :: <seetype marker="#i">i()</seetype>) -&gt; [<seetype marker="#i">i()</seetype>]</head></clause>
  </contract>
  <anno>N</anno>
</spec>
<spec>
  <name>genProgramsARB</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>genProgramsARB(N :: <seetype marker="#i">i()</seetype>) -&gt; [<seetype marker="#i">i()</seetype>]</head></clause>
  </contract>
  <anno>N</anno>
</spec>
<spec>
  <name>genQueries</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>genQueries(N :: <seetype marker="#i">i()</seetype>) -&gt; [<seetype marker="#i">i()</seetype>]</head></clause>
  </contract>
  <anno>N</anno>
</spec>
<spec>
  <name>genRenderbuffers</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>genRenderbuffers(N :: <seetype marker="#i">i()</seetype>) -&gt; [<seetype marker="#i">i()</seetype>]</head></clause>
  </contract>
  <anno>N</anno>
</spec>
<spec>
  <name>genSamplers</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>genSamplers(Count :: <seetype marker="#i">i()</seetype>) -&gt; [<seetype marker="#i">i()</seetype>]</head></clause>
  </contract>
  <anno>Count</anno>
</spec>
<spec>
  <name>genTextures</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>genTextures(N :: <seetype marker="#i">i()</seetype>) -&gt; [<seetype marker="#i">i()</seetype>]</head></clause>
  </contract>
  <anno>N</anno>
</spec>
<spec>
  <name>genTransformFeedbacks</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>genTransformFeedbacks(N :: <seetype marker="#i">i()</seetype>) -&gt; [<seetype marker="#i">i()</seetype>]</head></clause>
  </contract>
  <anno>N</anno>
</spec>
<spec>
  <name>genVertexArrays</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>genVertexArrays(N :: <seetype marker="#i">i()</seetype>) -&gt; [<seetype marker="#i">i()</seetype>]</head></clause>
  </contract>
  <anno>N</anno>
</spec>
<spec>
  <name>generateMipmap</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>generateMipmap(Target :: <seetype marker="#enum">enum()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Target</anno>
</spec>
<spec>
  <name>generateTextureMipmap</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>generateTextureMipmap(Texture :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Texture</anno>
</spec>
<spec>
  <name>getActiveAttrib</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>getActiveAttrib(Program :: <seetype marker="#i">i()</seetype>, Index :: <seetype marker="#i">i()</seetype>, BufSize :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{Size :: <seetype marker="#i">i()</seetype>, Type :: <seetype marker="#enum">enum()</seetype>, Name :: <seetype marker="erlang#string">string()</seetype>}</head></clause>
  </contract>
  <anno>BufSize</anno>
  <anno>Index</anno>
  <anno>Name</anno>
  <anno>Program</anno>
  <anno>Size</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>getActiveAttribARB</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>getActiveAttribARB(ProgramObj :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Index :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>MaxLength :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{Size :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Type :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Name :: <seetype marker="erlang#string">string()</seetype>}</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>MaxLength</anno>
  <anno>Name</anno>
  <anno>ProgramObj</anno>
  <anno>Size</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>getActiveSubroutineName</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>getActiveSubroutineName(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Shadertype :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Index :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Bufsize :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="erlang#string">string()</seetype></head></clause>
  </contract>
  <anno>Bufsize</anno>
  <anno>Index</anno>
  <anno>Program</anno>
  <anno>Shadertype</anno>
</spec>
<spec>
  <name>getActiveSubroutineUniformName</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>getActiveSubroutineUniformName(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Shadertype :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Index :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Bufsize :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="erlang#string">string()</seetype></head></clause>
  </contract>
  <anno>Bufsize</anno>
  <anno>Index</anno>
  <anno>Program</anno>
  <anno>Shadertype</anno>
</spec>
<spec>
  <name>getActiveUniform</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>getActiveUniform(Program :: <seetype marker="#i">i()</seetype>, Index :: <seetype marker="#i">i()</seetype>, BufSize :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{Size :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Type :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Name :: <seetype marker="erlang#string">string()</seetype>}</head></clause>
  </contract>
  <anno>BufSize</anno>
  <anno>Index</anno>
  <anno>Name</anno>
  <anno>Program</anno>
  <anno>Size</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>getActiveUniformARB</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>getActiveUniformARB(ProgramObj :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Index :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>MaxLength :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{Size :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Type :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Name :: <seetype marker="erlang#string">string()</seetype>}</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>MaxLength</anno>
  <anno>Name</anno>
  <anno>ProgramObj</anno>
  <anno>Size</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>getActiveUniformBlockName</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>getActiveUniformBlockName(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>UniformBlockIndex :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>BufSize :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="erlang#string">string()</seetype></head></clause>
  </contract>
  <anno>BufSize</anno>
  <anno>Program</anno>
  <anno>UniformBlockIndex</anno>
</spec>
<spec>
  <name>getActiveUniformBlockiv</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>getActiveUniformBlockiv(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>UniformBlockIndex :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Pname :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Params :: <seetype marker="#mem">mem()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Params</anno>
  <anno>Pname</anno>
  <anno>Program</anno>
  <anno>UniformBlockIndex</anno>
</spec>
<spec>
  <name>getActiveUniformName</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>getActiveUniformName(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>UniformIndex :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>BufSize :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="erlang#string">string()</seetype></head></clause>
  </contract>
  <anno>BufSize</anno>
  <anno>Program</anno>
  <anno>UniformIndex</anno>
</spec>
<spec>
  <name>getActiveUniformsiv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>getActiveUniformsiv(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>UniformIndices :: [<seetype marker="#i">i()</seetype>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Pname :: <seetype marker="#enum">enum()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>[<seetype marker="#i">i()</seetype>]</head></clause>
  </contract>
  <anno>Pname</anno>
  <anno>Program</anno>
  <anno>UniformIndices</anno>
</spec>
<spec>
  <name>getAttachedObjectsARB</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getAttachedObjectsARB(ContainerObj :: <seetype marker="#i">i()</seetype>, MaxCount :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>[<seetype marker="#i">i()</seetype>]</head></clause>
  </contract>
  <anno>ContainerObj</anno>
  <anno>MaxCount</anno>
</spec>
<spec>
  <name>getAttachedShaders</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getAttachedShaders(Program :: <seetype marker="#i">i()</seetype>, MaxCount :: <seetype marker="#i">i()</seetype>) -&gt; [<seetype marker="#i">i()</seetype>]</head></clause>
  </contract>
  <anno>MaxCount</anno>
  <anno>Program</anno>
</spec>
<spec>
  <name>getAttribLocation</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getAttribLocation(Program :: <seetype marker="#i">i()</seetype>, Name :: <seetype marker="erlang#string">string()</seetype>) -&gt; <seetype marker="#i">i()</seetype></head></clause>
  </contract>
  <anno>Name</anno>
  <anno>Program</anno>
</spec>
<spec>
  <name>getAttribLocationARB</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getAttribLocationARB(ProgramObj :: <seetype marker="#i">i()</seetype>, Name :: <seetype marker="erlang#string">string()</seetype>) -&gt; <seetype marker="#i">i()</seetype></head></clause>
  </contract>
  <anno>Name</anno>
  <anno>ProgramObj</anno>
</spec>
<spec>
  <name>getBooleani_v</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getBooleani_v(Target :: <seetype marker="#enum">enum()</seetype>, Index :: <seetype marker="#i">i()</seetype>) -&gt; [0 | 1]</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>getBooleanv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getBooleanv(Pname :: <seetype marker="#enum">enum()</seetype>) -&gt; [0 | 1]</head></clause>
  </contract>
  <anno>Pname</anno>
</spec>
<spec>
  <name>getBufferParameteri64v</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getBufferParameteri64v(Target :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt; [<seetype marker="#i">i()</seetype>]</head></clause>
  </contract>
  <anno>Pname</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>getBufferParameteriv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getBufferParameteriv(Target :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt; <seetype marker="#i">i()</seetype></head></clause>
  </contract>
  <anno>Pname</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>getBufferParameterivARB</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getBufferParameterivARB(Target :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>[<seetype marker="#i">i()</seetype>]</head></clause>
  </contract>
  <anno>Pname</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>getBufferSubData</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>getBufferSubData(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Offset :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Size :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Data :: <seetype marker="#mem">mem()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Data</anno>
  <anno>Offset</anno>
  <anno>Size</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>getClipPlane</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getClipPlane(Plane :: <seetype marker="#enum">enum()</seetype>) -&gt; {<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}</head></clause>
  </contract>
  <anno>Plane</anno>
</spec>
<spec>
  <name>getColorTable</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>getColorTable(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Format :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Type :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Table :: <seetype marker="#mem">mem()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Format</anno>
  <anno>Table</anno>
  <anno>Target</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>getColorTableParameterfv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getColorTableParameterfv(Target :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}</head></clause>
  </contract>
  <anno>Pname</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>getColorTableParameteriv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getColorTableParameteriv(Target :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}</head></clause>
  </contract>
  <anno>Pname</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>getCompressedTexImage</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>getCompressedTexImage(Target :: <seetype marker="#enum">enum()</seetype>, Lod :: <seetype marker="#i">i()</seetype>, Img :: <seetype marker="#mem">mem()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Img</anno>
  <anno>Lod</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>getCompressedTexImageARB</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>getCompressedTexImageARB(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Level :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Img :: <seetype marker="#mem">mem()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Img</anno>
  <anno>Level</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>getConvolutionFilter</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>getConvolutionFilter(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Format :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Type :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Image :: <seetype marker="#mem">mem()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Format</anno>
  <anno>Image</anno>
  <anno>Target</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>getConvolutionParameterfv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getConvolutionParameterfv(Target :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}</head></clause>
  </contract>
  <anno>Pname</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>getConvolutionParameteriv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getConvolutionParameteriv(Target :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}</head></clause>
  </contract>
  <anno>Pname</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>getDebugMessageLog</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getDebugMessageLog(Count :: <seetype marker="#i">i()</seetype>, BufSize :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Sources :: [<seetype marker="#enum">enum()</seetype>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Types :: [<seetype marker="#enum">enum()</seetype>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Ids :: [<seetype marker="#i">i()</seetype>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Severities :: [<seetype marker="#enum">enum()</seetype>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>MessageLog :: <seetype marker="erlang#string">string()</seetype>}</head></clause>
  </contract>
  <anno>BufSize</anno>
  <anno>Count</anno>
  <anno>Ids</anno>
  <anno>MessageLog</anno>
  <anno>Severities</anno>
  <anno>Sources</anno>
  <anno>Types</anno>
</spec>
<spec>
  <name>getDoublei_v</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getDoublei_v(Target :: <seetype marker="#enum">enum()</seetype>, Index :: <seetype marker="#i">i()</seetype>) -&gt; [<seetype marker="#f">f()</seetype>]</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>getDoublev</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getDoublev(Pname :: <seetype marker="#enum">enum()</seetype>) -&gt; [<seetype marker="#f">f()</seetype>]</head></clause>
  </contract>
  <anno>Pname</anno>
</spec>
<spec>
  <name>getError</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>getError() -&gt; <seetype marker="#enum">enum()</seetype></head></clause>
  </contract>
</spec>
<spec>
  <name>getFloati_v</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getFloati_v(Target :: <seetype marker="#enum">enum()</seetype>, Index :: <seetype marker="#i">i()</seetype>) -&gt; [<seetype marker="#f">f()</seetype>]</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>getFloatv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getFloatv(Pname :: <seetype marker="#enum">enum()</seetype>) -&gt; [<seetype marker="#f">f()</seetype>]</head></clause>
  </contract>
  <anno>Pname</anno>
</spec>
<spec>
  <name>getFragDataIndex</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getFragDataIndex(Program :: <seetype marker="#i">i()</seetype>, Name :: <seetype marker="erlang#string">string()</seetype>) -&gt; <seetype marker="#i">i()</seetype></head></clause>
  </contract>
  <anno>Name</anno>
  <anno>Program</anno>
</spec>
<spec>
  <name>getFragDataLocation</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getFragDataLocation(Program :: <seetype marker="#i">i()</seetype>, Name :: <seetype marker="erlang#string">string()</seetype>) -&gt; <seetype marker="#i">i()</seetype></head></clause>
  </contract>
  <anno>Name</anno>
  <anno>Program</anno>
</spec>
<spec>
  <name>getFramebufferAttachmentParameteriv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>getFramebufferAttachmentParameteriv(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Attachment :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Pname :: <seetype marker="#enum">enum()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype></head></clause>
  </contract>
  <anno>Attachment</anno>
  <anno>Pname</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>getFramebufferParameteriv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getFramebufferParameteriv(Target :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype></head></clause>
  </contract>
  <anno>Pname</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>getGraphicsResetStatus</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>getGraphicsResetStatus() -&gt; <seetype marker="#enum">enum()</seetype></head></clause>
  </contract>
</spec>
<spec>
  <name>getHandleARB</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getHandleARB(Pname :: <seetype marker="#enum">enum()</seetype>) -&gt; <seetype marker="#i">i()</seetype></head></clause>
  </contract>
  <anno>Pname</anno>
</spec>
<spec>
  <name>getHistogram</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>getHistogram(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Reset :: 0 | 1,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Format :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Type :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Values :: <seetype marker="#mem">mem()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Format</anno>
  <anno>Reset</anno>
  <anno>Target</anno>
  <anno>Type</anno>
  <anno>Values</anno>
</spec>
<spec>
  <name>getHistogramParameterfv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getHistogramParameterfv(Target :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seetype marker="#f">f()</seetype>}</head></clause>
  </contract>
  <anno>Pname</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>getHistogramParameteriv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getHistogramParameteriv(Target :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seetype marker="#i">i()</seetype>}</head></clause>
  </contract>
  <anno>Pname</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>getImageHandleARB</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>getImageHandleARB(Texture :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Level :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Layered :: 0 | 1,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Layer :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Format :: <seetype marker="#enum">enum()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype></head></clause>
  </contract>
  <anno>Format</anno>
  <anno>Layer</anno>
  <anno>Layered</anno>
  <anno>Level</anno>
  <anno>Texture</anno>
</spec>
<spec>
  <name>getInfoLogARB</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getInfoLogARB(Obj :: <seetype marker="#i">i()</seetype>, MaxLength :: <seetype marker="#i">i()</seetype>) -&gt; <seetype marker="erlang#string">string()</seetype></head></clause>
  </contract>
  <anno>MaxLength</anno>
  <anno>Obj</anno>
</spec>
<spec>
  <name>getInteger64i_v</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getInteger64i_v(Target :: <seetype marker="#enum">enum()</seetype>, Index :: <seetype marker="#i">i()</seetype>) -&gt; [<seetype marker="#i">i()</seetype>]</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>getInteger64v</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getInteger64v(Pname :: <seetype marker="#enum">enum()</seetype>) -&gt; [<seetype marker="#i">i()</seetype>]</head></clause>
  </contract>
  <anno>Pname</anno>
</spec>
<spec>
  <name>getIntegeri_v</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getIntegeri_v(Target :: <seetype marker="#enum">enum()</seetype>, Index :: <seetype marker="#i">i()</seetype>) -&gt; [<seetype marker="#i">i()</seetype>]</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>getIntegerv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getIntegerv(Pname :: <seetype marker="#enum">enum()</seetype>) -&gt; [<seetype marker="#i">i()</seetype>]</head></clause>
  </contract>
  <anno>Pname</anno>
</spec>
<spec>
  <name>getInternalformati64v</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>getInternalformati64v(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Internalformat :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Pname :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>BufSize :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>[<seetype marker="#i">i()</seetype>]</head></clause>
  </contract>
  <anno>BufSize</anno>
  <anno>Internalformat</anno>
  <anno>Pname</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>getInternalformativ</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>getInternalformativ(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Internalformat :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Pname :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>BufSize :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>[<seetype marker="#i">i()</seetype>]</head></clause>
  </contract>
  <anno>BufSize</anno>
  <anno>Internalformat</anno>
  <anno>Pname</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>getLightfv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getLightfv(Light :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}</head></clause>
  </contract>
  <anno>Light</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>getLightiv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getLightiv(Light :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}</head></clause>
  </contract>
  <anno>Light</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>getMapdv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>getMapdv(Target :: <seetype marker="#enum">enum()</seetype>, Query :: <seetype marker="#enum">enum()</seetype>, V :: <seetype marker="#mem">mem()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Query</anno>
  <anno>Target</anno>
  <anno>V</anno>
</spec>
<spec>
  <name>getMapfv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>getMapfv(Target :: <seetype marker="#enum">enum()</seetype>, Query :: <seetype marker="#enum">enum()</seetype>, V :: <seetype marker="#mem">mem()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Query</anno>
  <anno>Target</anno>
  <anno>V</anno>
</spec>
<spec>
  <name>getMapiv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>getMapiv(Target :: <seetype marker="#enum">enum()</seetype>, Query :: <seetype marker="#enum">enum()</seetype>, V :: <seetype marker="#mem">mem()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Query</anno>
  <anno>Target</anno>
  <anno>V</anno>
</spec>
<spec>
  <name>getMaterialfv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getMaterialfv(Face :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}</head></clause>
  </contract>
  <anno>Face</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>getMaterialiv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getMaterialiv(Face :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}</head></clause>
  </contract>
  <anno>Face</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>getMinmax</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>getMinmax(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Reset :: 0 | 1,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Format :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Types :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Values :: <seetype marker="#mem">mem()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Format</anno>
  <anno>Reset</anno>
  <anno>Target</anno>
  <anno>Types</anno>
  <anno>Values</anno>
</spec>
<spec>
  <name>getMinmaxParameterfv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getMinmaxParameterfv(Target :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt; {<seetype marker="#f">f()</seetype>}</head></clause>
  </contract>
  <anno>Pname</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>getMinmaxParameteriv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getMinmaxParameteriv(Target :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt; {<seetype marker="#i">i()</seetype>}</head></clause>
  </contract>
  <anno>Pname</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>getMultisamplefv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getMultisamplefv(Pname :: <seetype marker="#enum">enum()</seetype>, Index :: <seetype marker="#i">i()</seetype>) -&gt; {<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>getObjectParameterfvARB</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getObjectParameterfvARB(Obj :: <seetype marker="#i">i()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt; <seetype marker="#f">f()</seetype></head></clause>
  </contract>
  <anno>Obj</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>getObjectParameterivARB</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getObjectParameterivARB(Obj :: <seetype marker="#i">i()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt; <seetype marker="#i">i()</seetype></head></clause>
  </contract>
  <anno>Obj</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>getPixelMapfv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getPixelMapfv(Map :: <seetype marker="#enum">enum()</seetype>, Values :: <seetype marker="#mem">mem()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Map</anno>
  <anno>Values</anno>
</spec>
<spec>
  <name>getPixelMapuiv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getPixelMapuiv(Map :: <seetype marker="#enum">enum()</seetype>, Values :: <seetype marker="#mem">mem()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Map</anno>
  <anno>Values</anno>
</spec>
<spec>
  <name>getPixelMapusv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getPixelMapusv(Map :: <seetype marker="#enum">enum()</seetype>, Values :: <seetype marker="#mem">mem()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Map</anno>
  <anno>Values</anno>
</spec>
<spec>
  <name>getPolygonStipple</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>getPolygonStipple() -&gt; <seetype marker="erlang#binary">binary()</seetype></head></clause>
  </contract>
</spec>
<spec>
  <name>getProgramBinary</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getProgramBinary(Program :: <seetype marker="#i">i()</seetype>, BufSize :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{BinaryFormat :: <seetype marker="#enum">enum()</seetype>, Binary :: <seetype marker="erlang#binary">binary()</seetype>}</head></clause>
  </contract>
  <anno>Binary</anno>
  <anno>BinaryFormat</anno>
  <anno>BufSize</anno>
  <anno>Program</anno>
</spec>
<spec>
  <name>getProgramEnvParameterdvARB</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getProgramEnvParameterdvARB(Target :: <seetype marker="#enum">enum()</seetype>, Index :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>getProgramEnvParameterfvARB</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getProgramEnvParameterfvARB(Target :: <seetype marker="#enum">enum()</seetype>, Index :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>getProgramInfoLog</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getProgramInfoLog(Program :: <seetype marker="#i">i()</seetype>, BufSize :: <seetype marker="#i">i()</seetype>) -&gt; <seetype marker="erlang#string">string()</seetype></head></clause>
  </contract>
  <anno>BufSize</anno>
  <anno>Program</anno>
</spec>
<spec>
  <name>getProgramInterfaceiv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>getProgramInterfaceiv(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ProgramInterface :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Pname :: <seetype marker="#enum">enum()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype></head></clause>
  </contract>
  <anno>Pname</anno>
  <anno>Program</anno>
  <anno>ProgramInterface</anno>
</spec>
<spec>
  <name>getProgramLocalParameterdvARB</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getProgramLocalParameterdvARB(Target :: <seetype marker="#enum">enum()</seetype>, Index :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>getProgramLocalParameterfvARB</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getProgramLocalParameterfvARB(Target :: <seetype marker="#enum">enum()</seetype>, Index :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>getProgramPipelineInfoLog</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getProgramPipelineInfoLog(Pipeline :: <seetype marker="#i">i()</seetype>, BufSize :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="erlang#string">string()</seetype></head></clause>
  </contract>
  <anno>BufSize</anno>
  <anno>Pipeline</anno>
</spec>
<spec>
  <name>getProgramPipelineiv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getProgramPipelineiv(Pipeline :: <seetype marker="#i">i()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt; <seetype marker="#i">i()</seetype></head></clause>
  </contract>
  <anno>Pipeline</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>getProgramResourceIndex</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>getProgramResourceIndex(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ProgramInterface :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Name :: <seetype marker="erlang#string">string()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype></head></clause>
  </contract>
  <anno>Name</anno>
  <anno>Program</anno>
  <anno>ProgramInterface</anno>
</spec>
<spec>
  <name>getProgramResourceLocation</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>getProgramResourceLocation(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ProgramInterface :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Name :: <seetype marker="erlang#string">string()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype></head></clause>
  </contract>
  <anno>Name</anno>
  <anno>Program</anno>
  <anno>ProgramInterface</anno>
</spec>
<spec>
  <name>getProgramResourceLocationIndex</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>getProgramResourceLocationIndex(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ProgramInterface :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Name :: <seetype marker="erlang#string">string()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype></head></clause>
  </contract>
  <anno>Name</anno>
  <anno>Program</anno>
  <anno>ProgramInterface</anno>
</spec>
<spec>
  <name>getProgramResourceName</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>getProgramResourceName(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ProgramInterface :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Index :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>BufSize :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="erlang#string">string()</seetype></head></clause>
  </contract>
  <anno>BufSize</anno>
  <anno>Index</anno>
  <anno>Program</anno>
  <anno>ProgramInterface</anno>
</spec>
<spec>
  <name>getProgramStageiv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>getProgramStageiv(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Shadertype :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Pname :: <seetype marker="#enum">enum()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype></head></clause>
  </contract>
  <anno>Pname</anno>
  <anno>Program</anno>
  <anno>Shadertype</anno>
</spec>
<spec>
  <name>getProgramStringARB</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>getProgramStringARB(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Pname :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>String :: <seetype marker="#mem">mem()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Pname</anno>
  <anno>String</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>getProgramiv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getProgramiv(Program :: <seetype marker="#i">i()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt; <seetype marker="#i">i()</seetype></head></clause>
  </contract>
  <anno>Pname</anno>
  <anno>Program</anno>
</spec>
<spec>
  <name>getQueryBufferObjecti64v</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>getQueryBufferObjecti64v(Id :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Buffer :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Pname :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Offset :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Buffer</anno>
  <anno>Id</anno>
  <anno>Offset</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>getQueryBufferObjectiv</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>getQueryBufferObjectiv(Id :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Buffer :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Pname :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Offset :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Buffer</anno>
  <anno>Id</anno>
  <anno>Offset</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>getQueryBufferObjectui64v</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>getQueryBufferObjectui64v(Id :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Buffer :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Pname :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Offset :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Buffer</anno>
  <anno>Id</anno>
  <anno>Offset</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>getQueryBufferObjectuiv</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>getQueryBufferObjectuiv(Id :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Buffer :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Pname :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Offset :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Buffer</anno>
  <anno>Id</anno>
  <anno>Offset</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>getQueryIndexediv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>getQueryIndexediv(Target :: <seetype marker="#enum">enum()</seetype>, Index :: <seetype marker="#i">i()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype></head></clause>
  </contract>
  <anno>Index</anno>
  <anno>Pname</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>getQueryObjecti64v</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getQueryObjecti64v(Id :: <seetype marker="#i">i()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt; <seetype marker="#i">i()</seetype></head></clause>
  </contract>
  <anno>Id</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>getQueryObjectiv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getQueryObjectiv(Id :: <seetype marker="#i">i()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt; <seetype marker="#i">i()</seetype></head></clause>
  </contract>
  <anno>Id</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>getQueryObjectui64v</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getQueryObjectui64v(Id :: <seetype marker="#i">i()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt; <seetype marker="#i">i()</seetype></head></clause>
  </contract>
  <anno>Id</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>getQueryObjectuiv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getQueryObjectuiv(Id :: <seetype marker="#i">i()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt; <seetype marker="#i">i()</seetype></head></clause>
  </contract>
  <anno>Id</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>getQueryiv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getQueryiv(Target :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt; <seetype marker="#i">i()</seetype></head></clause>
  </contract>
  <anno>Pname</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>getRenderbufferParameteriv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getRenderbufferParameteriv(Target :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype></head></clause>
  </contract>
  <anno>Pname</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>getSamplerParameterIiv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getSamplerParameterIiv(Sampler :: <seetype marker="#i">i()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt; [<seetype marker="#i">i()</seetype>]</head></clause>
  </contract>
  <anno>Pname</anno>
  <anno>Sampler</anno>
</spec>
<spec>
  <name>getSamplerParameterIuiv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getSamplerParameterIuiv(Sampler :: <seetype marker="#i">i()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt; [<seetype marker="#i">i()</seetype>]</head></clause>
  </contract>
  <anno>Pname</anno>
  <anno>Sampler</anno>
</spec>
<spec>
  <name>getSamplerParameterfv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getSamplerParameterfv(Sampler :: <seetype marker="#i">i()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt; [<seetype marker="#f">f()</seetype>]</head></clause>
  </contract>
  <anno>Pname</anno>
  <anno>Sampler</anno>
</spec>
<spec>
  <name>getSamplerParameteriv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getSamplerParameteriv(Sampler :: <seetype marker="#i">i()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt; [<seetype marker="#i">i()</seetype>]</head></clause>
  </contract>
  <anno>Pname</anno>
  <anno>Sampler</anno>
</spec>
<spec>
  <name>getShaderInfoLog</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getShaderInfoLog(Shader :: <seetype marker="#i">i()</seetype>, BufSize :: <seetype marker="#i">i()</seetype>) -&gt; <seetype marker="erlang#string">string()</seetype></head></clause>
  </contract>
  <anno>BufSize</anno>
  <anno>Shader</anno>
</spec>
<spec>
  <name>getShaderPrecisionFormat</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getShaderPrecisionFormat(Shadertype :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Precisiontype :: <seetype marker="#enum">enum()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{Range :: {<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>},<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Precision :: <seetype marker="#i">i()</seetype>}</head></clause>
  </contract>
  <anno>Precision</anno>
  <anno>Precisiontype</anno>
  <anno>Range</anno>
  <anno>Shadertype</anno>
</spec>
<spec>
  <name>getShaderSource</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getShaderSource(Shader :: <seetype marker="#i">i()</seetype>, BufSize :: <seetype marker="#i">i()</seetype>) -&gt; <seetype marker="erlang#string">string()</seetype></head></clause>
  </contract>
  <anno>BufSize</anno>
  <anno>Shader</anno>
</spec>
<spec>
  <name>getShaderSourceARB</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getShaderSourceARB(Obj :: <seetype marker="#i">i()</seetype>, MaxLength :: <seetype marker="#i">i()</seetype>) -&gt; <seetype marker="erlang#string">string()</seetype></head></clause>
  </contract>
  <anno>MaxLength</anno>
  <anno>Obj</anno>
</spec>
<spec>
  <name>getShaderiv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getShaderiv(Shader :: <seetype marker="#i">i()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt; <seetype marker="#i">i()</seetype></head></clause>
  </contract>
  <anno>Pname</anno>
  <anno>Shader</anno>
</spec>
<spec>
  <name>getString</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getString(Name :: <seetype marker="#enum">enum()</seetype>) -&gt; <seetype marker="erlang#string">string()</seetype></head></clause>
  </contract>
  <anno>Name</anno>
</spec>
<spec>
  <name>getStringi</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getStringi(Name :: <seetype marker="#enum">enum()</seetype>, Index :: <seetype marker="#i">i()</seetype>) -&gt; <seetype marker="erlang#string">string()</seetype></head></clause>
  </contract>
  <anno>Index</anno>
  <anno>Name</anno>
</spec>
<spec>
  <name>getSubroutineIndex</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>getSubroutineIndex(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Shadertype :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Name :: <seetype marker="erlang#string">string()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype></head></clause>
  </contract>
  <anno>Name</anno>
  <anno>Program</anno>
  <anno>Shadertype</anno>
</spec>
<spec>
  <name>getSubroutineUniformLocation</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>getSubroutineUniformLocation(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Shadertype :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Name :: <seetype marker="erlang#string">string()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype></head></clause>
  </contract>
  <anno>Name</anno>
  <anno>Program</anno>
  <anno>Shadertype</anno>
</spec>
<spec>
  <name>getSynciv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>getSynciv(Sync :: <seetype marker="#i">i()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>, BufSize :: <seetype marker="#i">i()</seetype>) -&gt; [<seetype marker="#i">i()</seetype>]</head></clause>
  </contract>
  <anno>BufSize</anno>
  <anno>Pname</anno>
  <anno>Sync</anno>
</spec>
<spec>
  <name>getTexEnvfv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getTexEnvfv(Target :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}</head></clause>
  </contract>
  <anno>Pname</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>getTexEnviv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getTexEnviv(Target :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}</head></clause>
  </contract>
  <anno>Pname</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>getTexGendv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getTexGendv(Coord :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}</head></clause>
  </contract>
  <anno>Coord</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>getTexGenfv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getTexGenfv(Coord :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}</head></clause>
  </contract>
  <anno>Coord</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>getTexGeniv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getTexGeniv(Coord :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}</head></clause>
  </contract>
  <anno>Coord</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>getTexImage</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>getTexImage(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Level :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Format :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Type :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Pixels :: <seetype marker="#mem">mem()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Format</anno>
  <anno>Level</anno>
  <anno>Pixels</anno>
  <anno>Target</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>getTexLevelParameterfv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>getTexLevelParameterfv(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Level :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Pname :: <seetype marker="#enum">enum()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seetype marker="#f">f()</seetype>}</head></clause>
  </contract>
  <anno>Level</anno>
  <anno>Pname</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>getTexLevelParameteriv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>getTexLevelParameteriv(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Level :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Pname :: <seetype marker="#enum">enum()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seetype marker="#i">i()</seetype>}</head></clause>
  </contract>
  <anno>Level</anno>
  <anno>Pname</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>getTexParameterIiv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getTexParameterIiv(Target :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}</head></clause>
  </contract>
  <anno>Pname</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>getTexParameterIuiv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getTexParameterIuiv(Target :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}</head></clause>
  </contract>
  <anno>Pname</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>getTexParameterfv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getTexParameterfv(Target :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}</head></clause>
  </contract>
  <anno>Pname</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>getTexParameteriv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getTexParameteriv(Target :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}</head></clause>
  </contract>
  <anno>Pname</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>getTransformFeedbackVarying</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>getTransformFeedbackVarying(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Index :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>BufSize :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{Size :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Type :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Name :: <seetype marker="erlang#string">string()</seetype>}</head></clause>
  </contract>
  <anno>BufSize</anno>
  <anno>Index</anno>
  <anno>Name</anno>
  <anno>Program</anno>
  <anno>Size</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>getUniformBlockIndex</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getUniformBlockIndex(Program :: <seetype marker="#i">i()</seetype>, UniformBlockName :: <seetype marker="erlang#string">string()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype></head></clause>
  </contract>
  <anno>Program</anno>
  <anno>UniformBlockName</anno>
</spec>
<spec>
  <name>getUniformIndices</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getUniformIndices(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>UniformNames :: [<seetype marker="unicode#chardata">unicode:chardata()</seetype>]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>[<seetype marker="#i">i()</seetype>]</head></clause>
  </contract>
  <anno>Program</anno>
  <anno>UniformNames</anno>
</spec>
<spec>
  <name>getUniformLocation</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getUniformLocation(Program :: <seetype marker="#i">i()</seetype>, Name :: <seetype marker="erlang#string">string()</seetype>) -&gt; <seetype marker="#i">i()</seetype></head></clause>
  </contract>
  <anno>Name</anno>
  <anno>Program</anno>
</spec>
<spec>
  <name>getUniformLocationARB</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getUniformLocationARB(ProgramObj :: <seetype marker="#i">i()</seetype>, Name :: <seetype marker="erlang#string">string()</seetype>) -&gt; <seetype marker="#i">i()</seetype></head></clause>
  </contract>
  <anno>Name</anno>
  <anno>ProgramObj</anno>
</spec>
<spec>
  <name>getUniformSubroutineuiv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getUniformSubroutineuiv(Shadertype :: <seetype marker="#enum">enum()</seetype>, Location :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>}</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Shadertype</anno>
</spec>
<spec>
  <name>getUniformdv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getUniformdv(Program :: <seetype marker="#i">i()</seetype>, Location :: <seetype marker="#i">i()</seetype>) -&gt; <seetype marker="#matrix">matrix()</seetype></head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
</spec>
<spec>
  <name>getUniformfv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getUniformfv(Program :: <seetype marker="#i">i()</seetype>, Location :: <seetype marker="#i">i()</seetype>) -&gt; <seetype marker="#matrix">matrix()</seetype></head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
</spec>
<spec>
  <name>getUniformfvARB</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getUniformfvARB(ProgramObj :: <seetype marker="#i">i()</seetype>, Location :: <seetype marker="#i">i()</seetype>) -&gt; <seetype marker="#matrix">matrix()</seetype></head></clause>
  </contract>
  <anno>Location</anno>
  <anno>ProgramObj</anno>
</spec>
<spec>
  <name>getUniformi64vARB</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getUniformi64vARB(Program :: <seetype marker="#i">i()</seetype>, Location :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>}</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
</spec>
<spec>
  <name>getUniformiv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getUniformiv(Program :: <seetype marker="#i">i()</seetype>, Location :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>}</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
</spec>
<spec>
  <name>getUniformivARB</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getUniformivARB(ProgramObj :: <seetype marker="#i">i()</seetype>, Location :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>}</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>ProgramObj</anno>
</spec>
<spec>
  <name>getUniformui64vARB</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getUniformui64vARB(Program :: <seetype marker="#i">i()</seetype>, Location :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>}</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
</spec>
<spec>
  <name>getUniformuiv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getUniformuiv(Program :: <seetype marker="#i">i()</seetype>, Location :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#i">i()</seetype>}</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
</spec>
<spec>
  <name>getVertexAttribIiv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getVertexAttribIiv(Index :: <seetype marker="#i">i()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>getVertexAttribIuiv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getVertexAttribIuiv(Index :: <seetype marker="#i">i()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>getVertexAttribLdv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getVertexAttribLdv(Index :: <seetype marker="#i">i()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>getVertexAttribdv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getVertexAttribdv(Index :: <seetype marker="#i">i()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>getVertexAttribfv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getVertexAttribfv(Index :: <seetype marker="#i">i()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>getVertexAttribiv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getVertexAttribiv(Index :: <seetype marker="#i">i()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>get_interface</name>
  <arity>0</arity>
  <contract/>
</spec>
<spec>
  <name>hint</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>hint(Target :: <seetype marker="#enum">enum()</seetype>, Mode :: <seetype marker="#enum">enum()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Mode</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>histogram</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>histogram(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Width :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Internalformat :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Sink :: 0 | 1) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Internalformat</anno>
  <anno>Sink</anno>
  <anno>Target</anno>
  <anno>Width</anno>
</spec>
<spec>
  <name>indexMask</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>indexMask(Mask :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Mask</anno>
</spec>
<spec>
  <name>indexPointer</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>indexPointer(Type :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Stride :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Ptr :: <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Ptr</anno>
  <anno>Stride</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>indexd</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>indexd(C :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>C</anno>
</spec>
<spec>
  <name>indexdv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>indexdv(X1 :: {C :: <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>C</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>indexf</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>indexf(C :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>C</anno>
</spec>
<spec>
  <name>indexfv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>indexfv(X1 :: {C :: <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>C</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>indexi</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>indexi(C :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>C</anno>
</spec>
<spec>
  <name>indexiv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>indexiv(X1 :: {C :: <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>C</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>indexs</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>indexs(C :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>C</anno>
</spec>
<spec>
  <name>indexsv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>indexsv(X1 :: {C :: <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>C</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>indexub</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>indexub(C :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>C</anno>
</spec>
<spec>
  <name>indexubv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>indexubv(X1 :: {C :: <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>C</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>initNames</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>initNames() -&gt; ok</head></clause>
  </contract>
</spec>
<spec>
  <name>interleavedArrays</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>interleavedArrays(Format :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Stride :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Pointer :: <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Format</anno>
  <anno>Pointer</anno>
  <anno>Stride</anno>
</spec>
<spec>
  <name>invalidateBufferData</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>invalidateBufferData(Buffer :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Buffer</anno>
</spec>
<spec>
  <name>invalidateBufferSubData</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>invalidateBufferSubData(Buffer :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Offset :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Length :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Buffer</anno>
  <anno>Length</anno>
  <anno>Offset</anno>
</spec>
<spec>
  <name>invalidateFramebuffer</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>invalidateFramebuffer(Target :: <seetype marker="#enum">enum()</seetype>, Attachments :: [<seetype marker="#enum">enum()</seetype>]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Attachments</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>invalidateSubFramebuffer</name>
  <arity>6</arity>
  <contract>
    <clause>
      <head>invalidateSubFramebuffer(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Attachments :: [<seetype marker="#enum">enum()</seetype>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Y :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Width :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Height :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Attachments</anno>
  <anno>Height</anno>
  <anno>Target</anno>
  <anno>Width</anno>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>invalidateTexImage</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>invalidateTexImage(Texture :: <seetype marker="#i">i()</seetype>, Level :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Level</anno>
  <anno>Texture</anno>
</spec>
<spec>
  <name>invalidateTexSubImage</name>
  <arity>8</arity>
  <contract>
    <clause>
      <head>invalidateTexSubImage(Texture, Level, Xoffset, Yoffset, Zoffset,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Width, Height, Depth) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Texture</typename><string>Texture = Level = Xoffset = Yoffset = Zoffset = Width = Height = Depth = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Level</typename><string></string></subtype>
        <subtype><typename>Xoffset</typename><string></string></subtype>
        <subtype><typename>Yoffset</typename><string></string></subtype>
        <subtype><typename>Zoffset</typename><string></string></subtype>
        <subtype><typename>Width</typename><string></string></subtype>
        <subtype><typename>Height</typename><string></string></subtype>
        <subtype><typename>Depth</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Depth</anno>
  <anno>Height</anno>
  <anno>Level</anno>
  <anno>Texture</anno>
  <anno>Width</anno>
  <anno>Xoffset</anno>
  <anno>Yoffset</anno>
  <anno>Zoffset</anno>
</spec>
<spec>
  <name>isBuffer</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>isBuffer(Buffer :: <seetype marker="#i">i()</seetype>) -&gt; 0 | 1</head></clause>
  </contract>
  <anno>Buffer</anno>
</spec>
<spec>
  <name>isEnabled</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>isEnabled(Cap :: <seetype marker="#enum">enum()</seetype>) -&gt; 0 | 1</head></clause>
  </contract>
  <anno>Cap</anno>
</spec>
<spec>
  <name>isEnabledi</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>isEnabledi(Target :: <seetype marker="#enum">enum()</seetype>, Index :: <seetype marker="#i">i()</seetype>) -&gt; 0 | 1</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>isFramebuffer</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>isFramebuffer(Framebuffer :: <seetype marker="#i">i()</seetype>) -&gt; 0 | 1</head></clause>
  </contract>
  <anno>Framebuffer</anno>
</spec>
<spec>
  <name>isImageHandleResidentARB</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>isImageHandleResidentARB(Handle :: <seetype marker="#i">i()</seetype>) -&gt; 0 | 1</head></clause>
  </contract>
  <anno>Handle</anno>
</spec>
<spec>
  <name>isList</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>isList(List :: <seetype marker="#i">i()</seetype>) -&gt; 0 | 1</head></clause>
  </contract>
  <anno>List</anno>
</spec>
<spec>
  <name>isNamedStringARB</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>isNamedStringARB(Name :: <seetype marker="erlang#string">string()</seetype>) -&gt; 0 | 1</head></clause>
  </contract>
  <anno>Name</anno>
</spec>
<spec>
  <name>isProgram</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>isProgram(Program :: <seetype marker="#i">i()</seetype>) -&gt; 0 | 1</head></clause>
  </contract>
  <anno>Program</anno>
</spec>
<spec>
  <name>isProgramPipeline</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>isProgramPipeline(Pipeline :: <seetype marker="#i">i()</seetype>) -&gt; 0 | 1</head></clause>
  </contract>
  <anno>Pipeline</anno>
</spec>
<spec>
  <name>isQuery</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>isQuery(Id :: <seetype marker="#i">i()</seetype>) -&gt; 0 | 1</head></clause>
  </contract>
  <anno>Id</anno>
</spec>
<spec>
  <name>isRenderbuffer</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>isRenderbuffer(Renderbuffer :: <seetype marker="#i">i()</seetype>) -&gt; 0 | 1</head></clause>
  </contract>
  <anno>Renderbuffer</anno>
</spec>
<spec>
  <name>isSampler</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>isSampler(Sampler :: <seetype marker="#i">i()</seetype>) -&gt; 0 | 1</head></clause>
  </contract>
  <anno>Sampler</anno>
</spec>
<spec>
  <name>isShader</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>isShader(Shader :: <seetype marker="#i">i()</seetype>) -&gt; 0 | 1</head></clause>
  </contract>
  <anno>Shader</anno>
</spec>
<spec>
  <name>isSync</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>isSync(Sync :: <seetype marker="#i">i()</seetype>) -&gt; 0 | 1</head></clause>
  </contract>
  <anno>Sync</anno>
</spec>
<spec>
  <name>isTexture</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>isTexture(Texture :: <seetype marker="#i">i()</seetype>) -&gt; 0 | 1</head></clause>
  </contract>
  <anno>Texture</anno>
</spec>
<spec>
  <name>isTextureHandleResidentARB</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>isTextureHandleResidentARB(Handle :: <seetype marker="#i">i()</seetype>) -&gt; 0 | 1</head></clause>
  </contract>
  <anno>Handle</anno>
</spec>
<spec>
  <name>isTransformFeedback</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>isTransformFeedback(Id :: <seetype marker="#i">i()</seetype>) -&gt; 0 | 1</head></clause>
  </contract>
  <anno>Id</anno>
</spec>
<spec>
  <name>isVertexArray</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>isVertexArray(Array :: <seetype marker="#i">i()</seetype>) -&gt; 0 | 1</head></clause>
  </contract>
  <anno>Array</anno>
</spec>
<spec>
  <name>lightModelf</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>lightModelf(Pname :: <seetype marker="#enum">enum()</seetype>, Param :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Param</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>lightModelfv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>lightModelfv(Pname :: <seetype marker="#enum">enum()</seetype>, Params :: <seetype marker="erlang#tuple">tuple()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Params</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>lightModeli</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>lightModeli(Pname :: <seetype marker="#enum">enum()</seetype>, Param :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Param</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>lightModeliv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>lightModeliv(Pname :: <seetype marker="#enum">enum()</seetype>, Params :: <seetype marker="erlang#tuple">tuple()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Params</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>lightf</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>lightf(Light :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>, Param :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Light</anno>
  <anno>Param</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>lightfv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>lightfv(Light :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>, Params :: <seetype marker="erlang#tuple">tuple()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Light</anno>
  <anno>Params</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>lighti</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>lighti(Light :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>, Param :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Light</anno>
  <anno>Param</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>lightiv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>lightiv(Light :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>, Params :: <seetype marker="erlang#tuple">tuple()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Light</anno>
  <anno>Params</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>lineStipple</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>lineStipple(Factor :: <seetype marker="#i">i()</seetype>, Pattern :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Factor</anno>
  <anno>Pattern</anno>
</spec>
<spec>
  <name>lineWidth</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>lineWidth(Width :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Width</anno>
</spec>
<spec>
  <name>linkProgram</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>linkProgram(Program :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Program</anno>
</spec>
<spec>
  <name>linkProgramARB</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>linkProgramARB(ProgramObj :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>ProgramObj</anno>
</spec>
<spec>
  <name>listBase</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>listBase(Base :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Base</anno>
</spec>
<spec>
  <name>loadIdentity</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>loadIdentity() -&gt; ok</head></clause>
  </contract>
</spec>
<spec>
  <name>loadMatrixd</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>loadMatrixd(M :: <seetype marker="#matrix">matrix()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>M</anno>
</spec>
<spec>
  <name>loadMatrixf</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>loadMatrixf(M :: <seetype marker="#matrix">matrix()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>M</anno>
</spec>
<spec>
  <name>loadName</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>loadName(Name :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Name</anno>
</spec>
<spec>
  <name>loadTransposeMatrixd</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>loadTransposeMatrixd(M :: <seetype marker="#matrix">matrix()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>M</anno>
</spec>
<spec>
  <name>loadTransposeMatrixdARB</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>loadTransposeMatrixdARB(M :: <seetype marker="#matrix">matrix()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>M</anno>
</spec>
<spec>
  <name>loadTransposeMatrixf</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>loadTransposeMatrixf(M :: <seetype marker="#matrix">matrix()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>M</anno>
</spec>
<spec>
  <name>loadTransposeMatrixfARB</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>loadTransposeMatrixfARB(M :: <seetype marker="#matrix">matrix()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>M</anno>
</spec>
<spec>
  <name>logicOp</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>logicOp(Opcode :: <seetype marker="#enum">enum()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Opcode</anno>
</spec>
<spec>
  <name>lookup_func</name>
  <arity>0</arity>
  <contract/>
</spec>
<spec>
  <name>makeImageHandleNonResidentARB</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>makeImageHandleNonResidentARB(Handle :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Handle</anno>
</spec>
<spec>
  <name>makeImageHandleResidentARB</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>makeImageHandleResidentARB(Handle :: <seetype marker="#i">i()</seetype>, Access :: <seetype marker="#enum">enum()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Access</anno>
  <anno>Handle</anno>
</spec>
<spec>
  <name>makeTextureHandleNonResidentARB</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>makeTextureHandleNonResidentARB(Handle :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Handle</anno>
</spec>
<spec>
  <name>makeTextureHandleResidentARB</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>makeTextureHandleResidentARB(Handle :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Handle</anno>
</spec>
<spec>
  <name>map1d</name>
  <arity>6</arity>
  <contract>
    <clause>
      <head>map1d(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>U1 :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>U2 :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Stride :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Order :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Points :: <seetype marker="erlang#binary">binary()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Order</anno>
  <anno>Points</anno>
  <anno>Stride</anno>
  <anno>Target</anno>
  <anno>U1</anno>
  <anno>U2</anno>
</spec>
<spec>
  <name>map1f</name>
  <arity>6</arity>
  <contract>
    <clause>
      <head>map1f(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>U1 :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>U2 :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Stride :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Order :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Points :: <seetype marker="erlang#binary">binary()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Order</anno>
  <anno>Points</anno>
  <anno>Stride</anno>
  <anno>Target</anno>
  <anno>U1</anno>
  <anno>U2</anno>
</spec>
<spec>
  <name>map2d</name>
  <arity>10</arity>
  <contract>
    <clause>
      <head>map2d(Target, U1, U2, Ustride, Uorder, V1, V2, Vstride, Vorder,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Points) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Target</typename><string>Target = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>U1</typename><string>U1 = U2 = <seetype marker="#f">f()</seetype></string></subtype>
        <subtype><typename>U2</typename><string/></subtype>
        <subtype><typename>Ustride</typename><string>Ustride = Uorder = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Uorder</typename><string/></subtype>
        <subtype><typename>V1</typename><string>V1 = V2 = <seetype marker="#f">f()</seetype></string></subtype>
        <subtype><typename>V2</typename><string/></subtype>
        <subtype><typename>Vstride</typename><string>Vstride = Vorder = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Vorder</typename><string/></subtype>
        <subtype><typename>Points</typename><string>Points = <seetype marker="erlang#binary">binary()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Points</anno>
  <anno>Target</anno>
  <anno>U1</anno>
  <anno>U2</anno>
  <anno>Uorder</anno>
  <anno>Ustride</anno>
  <anno>V1</anno>
  <anno>V2</anno>
  <anno>Vorder</anno>
  <anno>Vstride</anno>
</spec>
<spec>
  <name>map2f</name>
  <arity>10</arity>
  <contract>
    <clause>
      <head>map2f(Target, U1, U2, Ustride, Uorder, V1, V2, Vstride, Vorder,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Points) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Target</typename><string>Target = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>U1</typename><string>U1 = U2 = <seetype marker="#f">f()</seetype></string></subtype>
        <subtype><typename>U2</typename><string/></subtype>
        <subtype><typename>Ustride</typename><string>Ustride = Uorder = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Uorder</typename><string/></subtype>
        <subtype><typename>V1</typename><string>V1 = V2 = <seetype marker="#f">f()</seetype></string></subtype>
        <subtype><typename>V2</typename><string/></subtype>
        <subtype><typename>Vstride</typename><string>Vstride = Vorder = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Vorder</typename><string/></subtype>
        <subtype><typename>Points</typename><string>Points = <seetype marker="erlang#binary">binary()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Points</anno>
  <anno>Target</anno>
  <anno>U1</anno>
  <anno>U2</anno>
  <anno>Uorder</anno>
  <anno>Ustride</anno>
  <anno>V1</anno>
  <anno>V2</anno>
  <anno>Vorder</anno>
  <anno>Vstride</anno>
</spec>
<spec>
  <name>mapGrid1d</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>mapGrid1d(Un :: <seetype marker="#i">i()</seetype>, U1 :: <seetype marker="#f">f()</seetype>, U2 :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>U1</anno>
  <anno>U2</anno>
  <anno>Un</anno>
</spec>
<spec>
  <name>mapGrid1f</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>mapGrid1f(Un :: <seetype marker="#i">i()</seetype>, U1 :: <seetype marker="#f">f()</seetype>, U2 :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>U1</anno>
  <anno>U2</anno>
  <anno>Un</anno>
</spec>
<spec>
  <name>mapGrid2d</name>
  <arity>6</arity>
  <contract>
    <clause>
      <head>mapGrid2d(Un :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>U1 :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>U2 :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Vn :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V1 :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V2 :: <seetype marker="#f">f()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>U1</anno>
  <anno>U2</anno>
  <anno>Un</anno>
  <anno>V1</anno>
  <anno>V2</anno>
  <anno>Vn</anno>
</spec>
<spec>
  <name>mapGrid2f</name>
  <arity>6</arity>
  <contract>
    <clause>
      <head>mapGrid2f(Un :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>U1 :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>U2 :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Vn :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V1 :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V2 :: <seetype marker="#f">f()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>U1</anno>
  <anno>U2</anno>
  <anno>Un</anno>
  <anno>V1</anno>
  <anno>V2</anno>
  <anno>Vn</anno>
</spec>
<spec>
  <name>materialf</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>materialf(Face :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>, Param :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Face</anno>
  <anno>Param</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>materialfv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>materialfv(Face :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>, Params :: <seetype marker="erlang#tuple">tuple()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Face</anno>
  <anno>Params</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>materiali</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>materiali(Face :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>, Param :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Face</anno>
  <anno>Param</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>materialiv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>materialiv(Face :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>, Params :: <seetype marker="erlang#tuple">tuple()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Face</anno>
  <anno>Params</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>matrixIndexubvARB</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>matrixIndexubvARB(Indices :: [<seetype marker="#i">i()</seetype>]) -&gt; ok</head></clause>
  </contract>
  <anno>Indices</anno>
</spec>
<spec>
  <name>matrixIndexuivARB</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>matrixIndexuivARB(Indices :: [<seetype marker="#i">i()</seetype>]) -&gt; ok</head></clause>
  </contract>
  <anno>Indices</anno>
</spec>
<spec>
  <name>matrixIndexusvARB</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>matrixIndexusvARB(Indices :: [<seetype marker="#i">i()</seetype>]) -&gt; ok</head></clause>
  </contract>
  <anno>Indices</anno>
</spec>
<spec>
  <name>matrixMode</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>matrixMode(Mode :: <seetype marker="#enum">enum()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Mode</anno>
</spec>
<spec>
  <name>maxShaderCompilerThreadsARB</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>maxShaderCompilerThreadsARB(Count :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Count</anno>
</spec>
<spec>
  <name>maxShaderCompilerThreadsKHR</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>maxShaderCompilerThreadsKHR(Count :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Count</anno>
</spec>
<spec>
  <name>memoryBarrier</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>memoryBarrier(Barriers :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Barriers</anno>
</spec>
<spec>
  <name>memoryBarrierByRegion</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>memoryBarrierByRegion(Barriers :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Barriers</anno>
</spec>
<spec>
  <name>minSampleShading</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>minSampleShading(Value :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Value</anno>
</spec>
<spec>
  <name>minmax</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>minmax(Target :: <seetype marker="#enum">enum()</seetype>, Internalformat :: <seetype marker="#enum">enum()</seetype>, Sink :: 0 | 1) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Internalformat</anno>
  <anno>Sink</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>multMatrixd</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>multMatrixd(M :: <seetype marker="#matrix">matrix()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>M</anno>
</spec>
<spec>
  <name>multMatrixf</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>multMatrixf(M :: <seetype marker="#matrix">matrix()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>M</anno>
</spec>
<spec>
  <name>multTransposeMatrixd</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>multTransposeMatrixd(M :: <seetype marker="#matrix">matrix()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>M</anno>
</spec>
<spec>
  <name>multTransposeMatrixdARB</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>multTransposeMatrixdARB(M :: <seetype marker="#matrix">matrix()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>M</anno>
</spec>
<spec>
  <name>multTransposeMatrixf</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>multTransposeMatrixf(M :: <seetype marker="#matrix">matrix()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>M</anno>
</spec>
<spec>
  <name>multTransposeMatrixfARB</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>multTransposeMatrixfARB(M :: <seetype marker="#matrix">matrix()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>M</anno>
</spec>
<spec>
  <name>multiDrawArrays</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>multiDrawArrays(Mode :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>First :: [<seetype marker="erlang#integer">integer()</seetype>] | <seetype marker="#mem">mem()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Count :: [<seetype marker="erlang#integer">integer()</seetype>] | <seetype marker="#mem">mem()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Count</anno>
  <anno>First</anno>
  <anno>Mode</anno>
</spec>
<spec>
  <name>multiDrawArraysIndirect</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>multiDrawArraysIndirect(Mode :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Indirect :: <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Drawcount :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Stride :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Drawcount</anno>
  <anno>Indirect</anno>
  <anno>Mode</anno>
  <anno>Stride</anno>
</spec>
<spec>
  <name>multiDrawArraysIndirectCount</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>multiDrawArraysIndirectCount(Mode, Indirect, Drawcount,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Maxdrawcount, Stride) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Mode</typename><string>Mode = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Indirect</typename><string>Indirect = <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype></string></subtype>
        <subtype><typename>Drawcount</typename><string>Drawcount = Maxdrawcount = Stride = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Maxdrawcount</typename><string></string></subtype>
        <subtype><typename>Stride</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Drawcount</anno>
  <anno>Indirect</anno>
  <anno>Maxdrawcount</anno>
  <anno>Mode</anno>
  <anno>Stride</anno>
</spec>
<spec>
  <name>multiTexCoord1d</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>multiTexCoord1d(Target :: <seetype marker="#enum">enum()</seetype>, S :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>S</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>multiTexCoord1dv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>multiTexCoord1dv(Target :: <seetype marker="#enum">enum()</seetype>, X2 :: {S :: <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>S</anno>
  <anno>Target</anno>
  <anno>X2</anno>
</spec>
<spec>
  <name>multiTexCoord1f</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>multiTexCoord1f(Target :: <seetype marker="#enum">enum()</seetype>, S :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>S</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>multiTexCoord1fv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>multiTexCoord1fv(Target :: <seetype marker="#enum">enum()</seetype>, X2 :: {S :: <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>S</anno>
  <anno>Target</anno>
  <anno>X2</anno>
</spec>
<spec>
  <name>multiTexCoord1i</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>multiTexCoord1i(Target :: <seetype marker="#enum">enum()</seetype>, S :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>S</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>multiTexCoord1iv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>multiTexCoord1iv(Target :: <seetype marker="#enum">enum()</seetype>, X2 :: {S :: <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>S</anno>
  <anno>Target</anno>
  <anno>X2</anno>
</spec>
<spec>
  <name>multiTexCoord1s</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>multiTexCoord1s(Target :: <seetype marker="#enum">enum()</seetype>, S :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>S</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>multiTexCoord1sv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>multiTexCoord1sv(Target :: <seetype marker="#enum">enum()</seetype>, X2 :: {S :: <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>S</anno>
  <anno>Target</anno>
  <anno>X2</anno>
</spec>
<spec>
  <name>multiTexCoord2d</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>multiTexCoord2d(Target :: <seetype marker="#enum">enum()</seetype>, S :: <seetype marker="#f">f()</seetype>, T :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>S</anno>
  <anno>T</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>multiTexCoord2dv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>multiTexCoord2dv(Target :: <seetype marker="#enum">enum()</seetype>, X2 :: {S :: <seetype marker="#f">f()</seetype>, T :: <seetype marker="#f">f()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>S</anno>
  <anno>T</anno>
  <anno>Target</anno>
  <anno>X2</anno>
</spec>
<spec>
  <name>multiTexCoord2f</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>multiTexCoord2f(Target :: <seetype marker="#enum">enum()</seetype>, S :: <seetype marker="#f">f()</seetype>, T :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>S</anno>
  <anno>T</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>multiTexCoord2fv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>multiTexCoord2fv(Target :: <seetype marker="#enum">enum()</seetype>, X2 :: {S :: <seetype marker="#f">f()</seetype>, T :: <seetype marker="#f">f()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>S</anno>
  <anno>T</anno>
  <anno>Target</anno>
  <anno>X2</anno>
</spec>
<spec>
  <name>multiTexCoord2i</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>multiTexCoord2i(Target :: <seetype marker="#enum">enum()</seetype>, S :: <seetype marker="#i">i()</seetype>, T :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>S</anno>
  <anno>T</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>multiTexCoord2iv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>multiTexCoord2iv(Target :: <seetype marker="#enum">enum()</seetype>, X2 :: {S :: <seetype marker="#i">i()</seetype>, T :: <seetype marker="#i">i()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>S</anno>
  <anno>T</anno>
  <anno>Target</anno>
  <anno>X2</anno>
</spec>
<spec>
  <name>multiTexCoord2s</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>multiTexCoord2s(Target :: <seetype marker="#enum">enum()</seetype>, S :: <seetype marker="#i">i()</seetype>, T :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>S</anno>
  <anno>T</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>multiTexCoord2sv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>multiTexCoord2sv(Target :: <seetype marker="#enum">enum()</seetype>, X2 :: {S :: <seetype marker="#i">i()</seetype>, T :: <seetype marker="#i">i()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>S</anno>
  <anno>T</anno>
  <anno>Target</anno>
  <anno>X2</anno>
</spec>
<spec>
  <name>multiTexCoord3d</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>multiTexCoord3d(Target :: <seetype marker="#enum">enum()</seetype>, S :: <seetype marker="#f">f()</seetype>, T :: <seetype marker="#f">f()</seetype>, R :: <seetype marker="#f">f()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>R</anno>
  <anno>S</anno>
  <anno>T</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>multiTexCoord3dv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>multiTexCoord3dv(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X2 :: {S :: <seetype marker="#f">f()</seetype>, T :: <seetype marker="#f">f()</seetype>, R :: <seetype marker="#f">f()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>R</anno>
  <anno>S</anno>
  <anno>T</anno>
  <anno>Target</anno>
  <anno>X2</anno>
</spec>
<spec>
  <name>multiTexCoord3f</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>multiTexCoord3f(Target :: <seetype marker="#enum">enum()</seetype>, S :: <seetype marker="#f">f()</seetype>, T :: <seetype marker="#f">f()</seetype>, R :: <seetype marker="#f">f()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>R</anno>
  <anno>S</anno>
  <anno>T</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>multiTexCoord3fv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>multiTexCoord3fv(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X2 :: {S :: <seetype marker="#f">f()</seetype>, T :: <seetype marker="#f">f()</seetype>, R :: <seetype marker="#f">f()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>R</anno>
  <anno>S</anno>
  <anno>T</anno>
  <anno>Target</anno>
  <anno>X2</anno>
</spec>
<spec>
  <name>multiTexCoord3i</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>multiTexCoord3i(Target :: <seetype marker="#enum">enum()</seetype>, S :: <seetype marker="#i">i()</seetype>, T :: <seetype marker="#i">i()</seetype>, R :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>R</anno>
  <anno>S</anno>
  <anno>T</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>multiTexCoord3iv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>multiTexCoord3iv(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X2 :: {S :: <seetype marker="#i">i()</seetype>, T :: <seetype marker="#i">i()</seetype>, R :: <seetype marker="#i">i()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>R</anno>
  <anno>S</anno>
  <anno>T</anno>
  <anno>Target</anno>
  <anno>X2</anno>
</spec>
<spec>
  <name>multiTexCoord3s</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>multiTexCoord3s(Target :: <seetype marker="#enum">enum()</seetype>, S :: <seetype marker="#i">i()</seetype>, T :: <seetype marker="#i">i()</seetype>, R :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>R</anno>
  <anno>S</anno>
  <anno>T</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>multiTexCoord3sv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>multiTexCoord3sv(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X2 :: {S :: <seetype marker="#i">i()</seetype>, T :: <seetype marker="#i">i()</seetype>, R :: <seetype marker="#i">i()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>R</anno>
  <anno>S</anno>
  <anno>T</anno>
  <anno>Target</anno>
  <anno>X2</anno>
</spec>
<spec>
  <name>multiTexCoord4d</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>multiTexCoord4d(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>S :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>T :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>R :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Q :: <seetype marker="#f">f()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Q</anno>
  <anno>R</anno>
  <anno>S</anno>
  <anno>T</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>multiTexCoord4dv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>multiTexCoord4dv(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X2 :: {S :: <seetype marker="#f">f()</seetype>, T :: <seetype marker="#f">f()</seetype>, R :: <seetype marker="#f">f()</seetype>, Q :: <seetype marker="#f">f()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Q</anno>
  <anno>R</anno>
  <anno>S</anno>
  <anno>T</anno>
  <anno>Target</anno>
  <anno>X2</anno>
</spec>
<spec>
  <name>multiTexCoord4f</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>multiTexCoord4f(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>S :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>T :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>R :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Q :: <seetype marker="#f">f()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Q</anno>
  <anno>R</anno>
  <anno>S</anno>
  <anno>T</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>multiTexCoord4fv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>multiTexCoord4fv(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X2 :: {S :: <seetype marker="#f">f()</seetype>, T :: <seetype marker="#f">f()</seetype>, R :: <seetype marker="#f">f()</seetype>, Q :: <seetype marker="#f">f()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Q</anno>
  <anno>R</anno>
  <anno>S</anno>
  <anno>T</anno>
  <anno>Target</anno>
  <anno>X2</anno>
</spec>
<spec>
  <name>multiTexCoord4i</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>multiTexCoord4i(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>S :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>T :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>R :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Q :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Q</anno>
  <anno>R</anno>
  <anno>S</anno>
  <anno>T</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>multiTexCoord4iv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>multiTexCoord4iv(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X2 :: {S :: <seetype marker="#i">i()</seetype>, T :: <seetype marker="#i">i()</seetype>, R :: <seetype marker="#i">i()</seetype>, Q :: <seetype marker="#i">i()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Q</anno>
  <anno>R</anno>
  <anno>S</anno>
  <anno>T</anno>
  <anno>Target</anno>
  <anno>X2</anno>
</spec>
<spec>
  <name>multiTexCoord4s</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>multiTexCoord4s(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>S :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>T :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>R :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Q :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Q</anno>
  <anno>R</anno>
  <anno>S</anno>
  <anno>T</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>multiTexCoord4sv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>multiTexCoord4sv(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X2 :: {S :: <seetype marker="#i">i()</seetype>, T :: <seetype marker="#i">i()</seetype>, R :: <seetype marker="#i">i()</seetype>, Q :: <seetype marker="#i">i()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Q</anno>
  <anno>R</anno>
  <anno>S</anno>
  <anno>T</anno>
  <anno>Target</anno>
  <anno>X2</anno>
</spec>
<spec>
  <name>newList</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>newList(List :: <seetype marker="#i">i()</seetype>, Mode :: <seetype marker="#enum">enum()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>List</anno>
  <anno>Mode</anno>
</spec>
<spec>
  <name>normal3b</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>normal3b(Nx :: <seetype marker="#i">i()</seetype>, Ny :: <seetype marker="#i">i()</seetype>, Nz :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Nx</anno>
  <anno>Ny</anno>
  <anno>Nz</anno>
</spec>
<spec>
  <name>normal3bv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>normal3bv(X1 :: {Nx :: <seetype marker="#i">i()</seetype>, Ny :: <seetype marker="#i">i()</seetype>, Nz :: <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Nx</anno>
  <anno>Ny</anno>
  <anno>Nz</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>normal3d</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>normal3d(Nx :: <seetype marker="#f">f()</seetype>, Ny :: <seetype marker="#f">f()</seetype>, Nz :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Nx</anno>
  <anno>Ny</anno>
  <anno>Nz</anno>
</spec>
<spec>
  <name>normal3dv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>normal3dv(X1 :: {Nx :: <seetype marker="#f">f()</seetype>, Ny :: <seetype marker="#f">f()</seetype>, Nz :: <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Nx</anno>
  <anno>Ny</anno>
  <anno>Nz</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>normal3f</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>normal3f(Nx :: <seetype marker="#f">f()</seetype>, Ny :: <seetype marker="#f">f()</seetype>, Nz :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Nx</anno>
  <anno>Ny</anno>
  <anno>Nz</anno>
</spec>
<spec>
  <name>normal3fv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>normal3fv(X1 :: {Nx :: <seetype marker="#f">f()</seetype>, Ny :: <seetype marker="#f">f()</seetype>, Nz :: <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Nx</anno>
  <anno>Ny</anno>
  <anno>Nz</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>normal3i</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>normal3i(Nx :: <seetype marker="#i">i()</seetype>, Ny :: <seetype marker="#i">i()</seetype>, Nz :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Nx</anno>
  <anno>Ny</anno>
  <anno>Nz</anno>
</spec>
<spec>
  <name>normal3iv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>normal3iv(X1 :: {Nx :: <seetype marker="#i">i()</seetype>, Ny :: <seetype marker="#i">i()</seetype>, Nz :: <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Nx</anno>
  <anno>Ny</anno>
  <anno>Nz</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>normal3s</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>normal3s(Nx :: <seetype marker="#i">i()</seetype>, Ny :: <seetype marker="#i">i()</seetype>, Nz :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Nx</anno>
  <anno>Ny</anno>
  <anno>Nz</anno>
</spec>
<spec>
  <name>normal3sv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>normal3sv(X1 :: {Nx :: <seetype marker="#i">i()</seetype>, Ny :: <seetype marker="#i">i()</seetype>, Nz :: <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Nx</anno>
  <anno>Ny</anno>
  <anno>Nz</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>normalPointer</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>normalPointer(Type :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Stride :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Ptr :: <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Ptr</anno>
  <anno>Stride</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>objectPtrLabel</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>objectPtrLabel(Ptr :: <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Length :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Label :: <seetype marker="erlang#string">string()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Label</anno>
  <anno>Length</anno>
  <anno>Ptr</anno>
</spec>
<spec>
  <name>ortho</name>
  <arity>6</arity>
  <contract>
    <clause>
      <head>ortho(Left :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Right :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Bottom :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Top :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Near_val :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Far_val :: <seetype marker="#f">f()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Bottom</anno>
  <anno>Far_val</anno>
  <anno>Left</anno>
  <anno>Near_val</anno>
  <anno>Right</anno>
  <anno>Top</anno>
</spec>
<spec>
  <name>passThrough</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>passThrough(Token :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Token</anno>
</spec>
<spec>
  <name>patchParameterfv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>patchParameterfv(Pname :: <seetype marker="#enum">enum()</seetype>, Values :: [<seetype marker="#f">f()</seetype>]) -&gt; ok</head></clause>
  </contract>
  <anno>Pname</anno>
  <anno>Values</anno>
</spec>
<spec>
  <name>patchParameteri</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>patchParameteri(Pname :: <seetype marker="#enum">enum()</seetype>, Value :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Pname</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>pauseTransformFeedback</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>pauseTransformFeedback() -&gt; ok</head></clause>
  </contract>
</spec>
<spec>
  <name>pixelMapfv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>pixelMapfv(Map :: <seetype marker="#enum">enum()</seetype>, Mapsize :: <seetype marker="#i">i()</seetype>, Values :: <seetype marker="erlang#binary">binary()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Map</anno>
  <anno>Mapsize</anno>
  <anno>Values</anno>
</spec>
<spec>
  <name>pixelMapuiv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>pixelMapuiv(Map :: <seetype marker="#enum">enum()</seetype>, Mapsize :: <seetype marker="#i">i()</seetype>, Values :: <seetype marker="erlang#binary">binary()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Map</anno>
  <anno>Mapsize</anno>
  <anno>Values</anno>
</spec>
<spec>
  <name>pixelMapusv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>pixelMapusv(Map :: <seetype marker="#enum">enum()</seetype>, Mapsize :: <seetype marker="#i">i()</seetype>, Values :: <seetype marker="erlang#binary">binary()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Map</anno>
  <anno>Mapsize</anno>
  <anno>Values</anno>
</spec>
<spec>
  <name>pixelStoref</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>pixelStoref(Pname :: <seetype marker="#enum">enum()</seetype>, Param :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Param</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>pixelStorei</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>pixelStorei(Pname :: <seetype marker="#enum">enum()</seetype>, Param :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Param</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>pixelTransferf</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>pixelTransferf(Pname :: <seetype marker="#enum">enum()</seetype>, Param :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Param</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>pixelTransferi</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>pixelTransferi(Pname :: <seetype marker="#enum">enum()</seetype>, Param :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Param</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>pixelZoom</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>pixelZoom(Xfactor :: <seetype marker="#f">f()</seetype>, Yfactor :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Xfactor</anno>
  <anno>Yfactor</anno>
</spec>
<spec>
  <name>pointParameterf</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>pointParameterf(Pname :: <seetype marker="#enum">enum()</seetype>, Param :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Param</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>pointParameterfv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>pointParameterfv(Pname :: <seetype marker="#enum">enum()</seetype>, Params :: <seetype marker="erlang#tuple">tuple()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Params</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>pointParameteri</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>pointParameteri(Pname :: <seetype marker="#enum">enum()</seetype>, Param :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Param</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>pointParameteriv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>pointParameteriv(Pname :: <seetype marker="#enum">enum()</seetype>, Params :: <seetype marker="erlang#tuple">tuple()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Params</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>pointSize</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>pointSize(Size :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Size</anno>
</spec>
<spec>
  <name>polygonMode</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>polygonMode(Face :: <seetype marker="#enum">enum()</seetype>, Mode :: <seetype marker="#enum">enum()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Face</anno>
  <anno>Mode</anno>
</spec>
<spec>
  <name>polygonOffset</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>polygonOffset(Factor :: <seetype marker="#f">f()</seetype>, Units :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Factor</anno>
  <anno>Units</anno>
</spec>
<spec>
  <name>polygonOffsetClamp</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>polygonOffsetClamp(Factor :: <seetype marker="#f">f()</seetype>, Units :: <seetype marker="#f">f()</seetype>, Clamp :: <seetype marker="#f">f()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Clamp</anno>
  <anno>Factor</anno>
  <anno>Units</anno>
</spec>
<spec>
  <name>polygonStipple</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>polygonStipple(Mask :: <seetype marker="erlang#binary">binary()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Mask</anno>
</spec>
<spec>
  <name>popAttrib</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>popAttrib() -&gt; ok</head></clause>
  </contract>
</spec>
<spec>
  <name>popClientAttrib</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>popClientAttrib() -&gt; ok</head></clause>
  </contract>
</spec>
<spec>
  <name>popDebugGroup</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>popDebugGroup() -&gt; ok</head></clause>
  </contract>
</spec>
<spec>
  <name>popMatrix</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>popMatrix() -&gt; ok</head></clause>
  </contract>
</spec>
<spec>
  <name>popName</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>popName() -&gt; ok</head></clause>
  </contract>
</spec>
<spec>
  <name>primitiveBoundingBoxARB</name>
  <arity>8</arity>
  <contract>
    <clause>
      <head>primitiveBoundingBoxARB(MinX, MinY, MinZ, MinW, MaxX, MaxY, MaxZ,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>MaxW) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>MinX</typename><string>MinX = MinY = MinZ = MinW = MaxX = MaxY = MaxZ = MaxW = <seetype marker="#f">f()</seetype></string></subtype>
        <subtype><typename>MinY</typename><string></string></subtype>
        <subtype><typename>MinZ</typename><string></string></subtype>
        <subtype><typename>MinW</typename><string></string></subtype>
        <subtype><typename>MaxX</typename><string></string></subtype>
        <subtype><typename>MaxY</typename><string></string></subtype>
        <subtype><typename>MaxZ</typename><string></string></subtype>
        <subtype><typename>MaxW</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>MaxW</anno>
  <anno>MaxX</anno>
  <anno>MaxY</anno>
  <anno>MaxZ</anno>
  <anno>MinW</anno>
  <anno>MinX</anno>
  <anno>MinY</anno>
  <anno>MinZ</anno>
</spec>
<spec>
  <name>primitiveRestartIndex</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>primitiveRestartIndex(Index :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
</spec>
<spec>
  <name>prioritizeTextures</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>prioritizeTextures(Textures :: [<seetype marker="#i">i()</seetype>], Priorities :: [<seetype marker="#clamp">clamp()</seetype>]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Priorities</anno>
  <anno>Textures</anno>
</spec>
<spec>
  <name>programBinary</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>programBinary(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>BinaryFormat :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Binary :: <seetype marker="erlang#binary">binary()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Binary</anno>
  <anno>BinaryFormat</anno>
  <anno>Program</anno>
</spec>
<spec>
  <name>programEnvParameter4dARB</name>
  <arity>6</arity>
  <contract>
    <clause>
      <head>programEnvParameter4dARB(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Index :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Y :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Z :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>W :: <seetype marker="#f">f()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>Target</anno>
  <anno>W</anno>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>programEnvParameter4dvARB</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>programEnvParameter4dvARB(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Index :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Params :: {<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>Params</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>programEnvParameter4fARB</name>
  <arity>6</arity>
  <contract>
    <clause>
      <head>programEnvParameter4fARB(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Index :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Y :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Z :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>W :: <seetype marker="#f">f()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>Target</anno>
  <anno>W</anno>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>programEnvParameter4fvARB</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>programEnvParameter4fvARB(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Index :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Params :: {<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>Params</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>programLocalParameter4dARB</name>
  <arity>6</arity>
  <contract>
    <clause>
      <head>programLocalParameter4dARB(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Index :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Y :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Z :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>W :: <seetype marker="#f">f()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>Target</anno>
  <anno>W</anno>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>programLocalParameter4dvARB</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>programLocalParameter4dvARB(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Index :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Params :: {<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>Params</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>programLocalParameter4fARB</name>
  <arity>6</arity>
  <contract>
    <clause>
      <head>programLocalParameter4fARB(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Index :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Y :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Z :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>W :: <seetype marker="#f">f()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>Target</anno>
  <anno>W</anno>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>programLocalParameter4fvARB</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>programLocalParameter4fvARB(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Index :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Params :: {<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>Params</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>programParameteri</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>programParameteri(Program :: <seetype marker="#i">i()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>, Value :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Pname</anno>
  <anno>Program</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>programStringARB</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>programStringARB(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Format :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>String :: <seetype marker="erlang#string">string()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Format</anno>
  <anno>String</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>programUniform1d</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>programUniform1d(Program :: <seetype marker="#i">i()</seetype>, Location :: <seetype marker="#i">i()</seetype>, V0 :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>V0</anno>
</spec>
<spec>
  <name>programUniform1dv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>programUniform1dv(Program :: <seetype marker="#i">i()</seetype>, Location :: <seetype marker="#i">i()</seetype>, Value :: [<seetype marker="#f">f()</seetype>]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>programUniform1f</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>programUniform1f(Program :: <seetype marker="#i">i()</seetype>, Location :: <seetype marker="#i">i()</seetype>, V0 :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>V0</anno>
</spec>
<spec>
  <name>programUniform1fv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>programUniform1fv(Program :: <seetype marker="#i">i()</seetype>, Location :: <seetype marker="#i">i()</seetype>, Value :: [<seetype marker="#f">f()</seetype>]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>programUniform1i</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>programUniform1i(Program :: <seetype marker="#i">i()</seetype>, Location :: <seetype marker="#i">i()</seetype>, V0 :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>V0</anno>
</spec>
<spec>
  <name>programUniform1i64ARB</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>programUniform1i64ARB(Program :: <seetype marker="#i">i()</seetype>, Location :: <seetype marker="#i">i()</seetype>, X :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>X</anno>
</spec>
<spec>
  <name>programUniform1i64vARB</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>programUniform1i64vARB(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value :: [<seetype marker="#i">i()</seetype>]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>programUniform1iv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>programUniform1iv(Program :: <seetype marker="#i">i()</seetype>, Location :: <seetype marker="#i">i()</seetype>, Value :: [<seetype marker="#i">i()</seetype>]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>programUniform1ui</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>programUniform1ui(Program :: <seetype marker="#i">i()</seetype>, Location :: <seetype marker="#i">i()</seetype>, V0 :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>V0</anno>
</spec>
<spec>
  <name>programUniform1ui64ARB</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>programUniform1ui64ARB(Program :: <seetype marker="#i">i()</seetype>, Location :: <seetype marker="#i">i()</seetype>, X :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>X</anno>
</spec>
<spec>
  <name>programUniform1ui64vARB</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>programUniform1ui64vARB(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value :: [<seetype marker="#i">i()</seetype>]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>programUniform1uiv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>programUniform1uiv(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value :: [<seetype marker="#i">i()</seetype>]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>programUniform2d</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>programUniform2d(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V0 :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V1 :: <seetype marker="#f">f()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>V0</anno>
  <anno>V1</anno>
</spec>
<spec>
  <name>programUniform2dv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>programUniform2dv(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value :: [{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>programUniform2f</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>programUniform2f(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V0 :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V1 :: <seetype marker="#f">f()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>V0</anno>
  <anno>V1</anno>
</spec>
<spec>
  <name>programUniform2fv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>programUniform2fv(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value :: [{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>programUniform2i</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>programUniform2i(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V0 :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V1 :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>V0</anno>
  <anno>V1</anno>
</spec>
<spec>
  <name>programUniform2i64ARB</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>programUniform2i64ARB(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Y :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>programUniform2i64vARB</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>programUniform2i64vARB(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value :: [{<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>programUniform2iv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>programUniform2iv(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value :: [{<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>programUniform2ui</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>programUniform2ui(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V0 :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V1 :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>V0</anno>
  <anno>V1</anno>
</spec>
<spec>
  <name>programUniform2ui64ARB</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>programUniform2ui64ARB(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Y :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>programUniform2ui64vARB</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>programUniform2ui64vARB(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value :: [{<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>programUniform2uiv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>programUniform2uiv(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value :: [{<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>programUniform3d</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>programUniform3d(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V0 :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V1 :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V2 :: <seetype marker="#f">f()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>V0</anno>
  <anno>V1</anno>
  <anno>V2</anno>
</spec>
<spec>
  <name>programUniform3dv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>programUniform3dv(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value :: [{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>programUniform3f</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>programUniform3f(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V0 :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V1 :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V2 :: <seetype marker="#f">f()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>V0</anno>
  <anno>V1</anno>
  <anno>V2</anno>
</spec>
<spec>
  <name>programUniform3fv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>programUniform3fv(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value :: [{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>programUniform3i</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>programUniform3i(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V0 :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V1 :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V2 :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>V0</anno>
  <anno>V1</anno>
  <anno>V2</anno>
</spec>
<spec>
  <name>programUniform3i64ARB</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>programUniform3i64ARB(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Y :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Z :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>programUniform3i64vARB</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>programUniform3i64vARB(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value :: [{<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>programUniform3iv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>programUniform3iv(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value :: [{<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>programUniform3ui</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>programUniform3ui(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V0 :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V1 :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V2 :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>V0</anno>
  <anno>V1</anno>
  <anno>V2</anno>
</spec>
<spec>
  <name>programUniform3ui64ARB</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>programUniform3ui64ARB(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Y :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Z :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>programUniform3ui64vARB</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>programUniform3ui64vARB(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value :: [{<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>programUniform3uiv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>programUniform3uiv(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value :: [{<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>programUniform4d</name>
  <arity>6</arity>
  <contract>
    <clause>
      <head>programUniform4d(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V0 :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V1 :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V2 :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V3 :: <seetype marker="#f">f()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>V0</anno>
  <anno>V1</anno>
  <anno>V2</anno>
  <anno>V3</anno>
</spec>
<spec>
  <name>programUniform4dv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>programUniform4dv(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value :: [{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>programUniform4f</name>
  <arity>6</arity>
  <contract>
    <clause>
      <head>programUniform4f(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V0 :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V1 :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V2 :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V3 :: <seetype marker="#f">f()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>V0</anno>
  <anno>V1</anno>
  <anno>V2</anno>
  <anno>V3</anno>
</spec>
<spec>
  <name>programUniform4fv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>programUniform4fv(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value :: [{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>programUniform4i</name>
  <arity>6</arity>
  <contract>
    <clause>
      <head>programUniform4i(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V0 :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V1 :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V2 :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V3 :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>V0</anno>
  <anno>V1</anno>
  <anno>V2</anno>
  <anno>V3</anno>
</spec>
<spec>
  <name>programUniform4i64ARB</name>
  <arity>6</arity>
  <contract>
    <clause>
      <head>programUniform4i64ARB(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Y :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Z :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>W :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>W</anno>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>programUniform4i64vARB</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>programUniform4i64vARB(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value :: [{<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>programUniform4iv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>programUniform4iv(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value :: [{<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>programUniform4ui</name>
  <arity>6</arity>
  <contract>
    <clause>
      <head>programUniform4ui(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V0 :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V1 :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V2 :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V3 :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>V0</anno>
  <anno>V1</anno>
  <anno>V2</anno>
  <anno>V3</anno>
</spec>
<spec>
  <name>programUniform4ui64ARB</name>
  <arity>6</arity>
  <contract>
    <clause>
      <head>programUniform4ui64ARB(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Y :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Z :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>W :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>W</anno>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>programUniform4ui64vARB</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>programUniform4ui64vARB(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value :: [{<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>programUniform4uiv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>programUniform4uiv(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value :: [{<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>programUniformHandleui64ARB</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>programUniformHandleui64ARB(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>programUniformMatrix2dv</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>programUniformMatrix2dv(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Transpose :: 0 | 1,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value :: [{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>Transpose</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>programUniformMatrix2fv</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>programUniformMatrix2fv(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Transpose :: 0 | 1,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value :: [{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>Transpose</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>programUniformMatrix2x3dv</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>programUniformMatrix2x3dv(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Transpose :: 0 | 1,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value ::<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>[{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>Transpose</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>programUniformMatrix2x3fv</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>programUniformMatrix2x3fv(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Transpose :: 0 | 1,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value ::<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>[{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>Transpose</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>programUniformMatrix2x4dv</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>programUniformMatrix2x4dv(Program, Location, Transpose, Value) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Program</typename><string>Program = Location = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Location</typename><string/></subtype>
        <subtype><typename>Transpose</typename><string>Transpose = 0 | 1</string></subtype>
        <subtype><typename>Value</typename><string>Value = [{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}]</string></subtype>
      </guard></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>Transpose</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>programUniformMatrix2x4fv</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>programUniformMatrix2x4fv(Program, Location, Transpose, Value) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Program</typename><string>Program = Location = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Location</typename><string/></subtype>
        <subtype><typename>Transpose</typename><string>Transpose = 0 | 1</string></subtype>
        <subtype><typename>Value</typename><string>Value = [{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}]</string></subtype>
      </guard></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>Transpose</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>programUniformMatrix3dv</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>programUniformMatrix3dv(Program, Location, Transpose, Value) -&gt; ok</head>
      <guard>
        <subtype><typename>Program</typename><string>Program = Location = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Location</typename><string/></subtype>
        <subtype><typename>Transpose</typename><string>Transpose = 0 | 1</string></subtype>
        <subtype><typename>Value</typename><string>Value = [{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}]</string></subtype>
      </guard></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>Transpose</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>programUniformMatrix3fv</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>programUniformMatrix3fv(Program, Location, Transpose, Value) -&gt; ok</head>
      <guard>
        <subtype><typename>Program</typename><string>Program = Location = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Location</typename><string/></subtype>
        <subtype><typename>Transpose</typename><string>Transpose = 0 | 1</string></subtype>
        <subtype><typename>Value</typename><string>Value = [{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}]</string></subtype>
      </guard></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>Transpose</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>programUniformMatrix3x2dv</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>programUniformMatrix3x2dv(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Transpose :: 0 | 1,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value ::<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>[{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>Transpose</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>programUniformMatrix3x2fv</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>programUniformMatrix3x2fv(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Transpose :: 0 | 1,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value ::<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>[{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>Transpose</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>programUniformMatrix3x4dv</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>programUniformMatrix3x4dv(Program, Location, Transpose, Value) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Program</typename><string>Program = Location = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Location</typename><string/></subtype>
        <subtype><typename>Transpose</typename><string>Transpose = 0 | 1</string></subtype>
        <subtype><typename>Value</typename><string>Value = <br/><nbsp/><nbsp/><nbsp/><nbsp/>[{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}]</string></subtype>
      </guard></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>Transpose</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>programUniformMatrix3x4fv</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>programUniformMatrix3x4fv(Program, Location, Transpose, Value) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Program</typename><string>Program = Location = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Location</typename><string/></subtype>
        <subtype><typename>Transpose</typename><string>Transpose = 0 | 1</string></subtype>
        <subtype><typename>Value</typename><string>Value = <br/><nbsp/><nbsp/><nbsp/><nbsp/>[{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}]</string></subtype>
      </guard></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>Transpose</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>programUniformMatrix4dv</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>programUniformMatrix4dv(Program, Location, Transpose, Value) -&gt; ok</head>
      <guard>
        <subtype><typename>Program</typename><string>Program = Location = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Location</typename><string/></subtype>
        <subtype><typename>Transpose</typename><string>Transpose = 0 | 1</string></subtype>
        <subtype><typename>Value</typename><string>Value = <br/><nbsp/><nbsp/><nbsp/><nbsp/>[{<seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>}]</string></subtype>
      </guard></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>Transpose</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>programUniformMatrix4fv</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>programUniformMatrix4fv(Program, Location, Transpose, Value) -&gt; ok</head>
      <guard>
        <subtype><typename>Program</typename><string>Program = Location = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Location</typename><string/></subtype>
        <subtype><typename>Transpose</typename><string>Transpose = 0 | 1</string></subtype>
        <subtype><typename>Value</typename><string>Value = <br/><nbsp/><nbsp/><nbsp/><nbsp/>[{<seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>}]</string></subtype>
      </guard></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>Transpose</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>programUniformMatrix4x2dv</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>programUniformMatrix4x2dv(Program, Location, Transpose, Value) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Program</typename><string>Program = Location = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Location</typename><string/></subtype>
        <subtype><typename>Transpose</typename><string>Transpose = 0 | 1</string></subtype>
        <subtype><typename>Value</typename><string>Value = [{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}]</string></subtype>
      </guard></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>Transpose</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>programUniformMatrix4x2fv</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>programUniformMatrix4x2fv(Program, Location, Transpose, Value) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Program</typename><string>Program = Location = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Location</typename><string/></subtype>
        <subtype><typename>Transpose</typename><string>Transpose = 0 | 1</string></subtype>
        <subtype><typename>Value</typename><string>Value = [{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}]</string></subtype>
      </guard></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>Transpose</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>programUniformMatrix4x3dv</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>programUniformMatrix4x3dv(Program, Location, Transpose, Value) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Program</typename><string>Program = Location = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Location</typename><string/></subtype>
        <subtype><typename>Transpose</typename><string>Transpose = 0 | 1</string></subtype>
        <subtype><typename>Value</typename><string>Value = <br/><nbsp/><nbsp/><nbsp/><nbsp/>[{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}]</string></subtype>
      </guard></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>Transpose</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>programUniformMatrix4x3fv</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>programUniformMatrix4x3fv(Program, Location, Transpose, Value) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Program</typename><string>Program = Location = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Location</typename><string/></subtype>
        <subtype><typename>Transpose</typename><string>Transpose = 0 | 1</string></subtype>
        <subtype><typename>Value</typename><string>Value = <br/><nbsp/><nbsp/><nbsp/><nbsp/>[{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}]</string></subtype>
      </guard></clause>
  </contract>
  <anno>Location</anno>
  <anno>Program</anno>
  <anno>Transpose</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>provokingVertex</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>provokingVertex(Mode :: <seetype marker="#enum">enum()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Mode</anno>
</spec>
<spec>
  <name>pushAttrib</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>pushAttrib(Mask :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Mask</anno>
</spec>
<spec>
  <name>pushClientAttrib</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>pushClientAttrib(Mask :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Mask</anno>
</spec>
<spec>
  <name>pushDebugGroup</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>pushDebugGroup(Source :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Id :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Length :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Message :: <seetype marker="erlang#string">string()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Id</anno>
  <anno>Length</anno>
  <anno>Message</anno>
  <anno>Source</anno>
</spec>
<spec>
  <name>pushMatrix</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>pushMatrix() -&gt; ok</head></clause>
  </contract>
</spec>
<spec>
  <name>pushName</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>pushName(Name :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Name</anno>
</spec>
<spec>
  <name>queryCounter</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>queryCounter(Id :: <seetype marker="#i">i()</seetype>, Target :: <seetype marker="#enum">enum()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Id</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>rasterPos2d</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>rasterPos2d(X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>rasterPos2dv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>rasterPos2dv(X1 :: {X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>X1</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>rasterPos2f</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>rasterPos2f(X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>rasterPos2fv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>rasterPos2fv(X1 :: {X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>X1</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>rasterPos2i</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>rasterPos2i(X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>rasterPos2iv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>rasterPos2iv(X1 :: {X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>X1</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>rasterPos2s</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>rasterPos2s(X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>rasterPos2sv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>rasterPos2sv(X1 :: {X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>X1</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>rasterPos3d</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>rasterPos3d(X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>, Z :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>rasterPos3dv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>rasterPos3dv(X1 :: {X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>, Z :: <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>X1</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>rasterPos3f</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>rasterPos3f(X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>, Z :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>rasterPos3fv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>rasterPos3fv(X1 :: {X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>, Z :: <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>X1</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>rasterPos3i</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>rasterPos3i(X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>, Z :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>rasterPos3iv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>rasterPos3iv(X1 :: {X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>, Z :: <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>X1</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>rasterPos3s</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>rasterPos3s(X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>, Z :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>rasterPos3sv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>rasterPos3sv(X1 :: {X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>, Z :: <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>X1</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>rasterPos4d</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>rasterPos4d(X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>, Z :: <seetype marker="#f">f()</seetype>, W :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>W</anno>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>rasterPos4dv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>rasterPos4dv(X1 :: {X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>, Z :: <seetype marker="#f">f()</seetype>, W :: <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>W</anno>
  <anno>X</anno>
  <anno>X1</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>rasterPos4f</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>rasterPos4f(X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>, Z :: <seetype marker="#f">f()</seetype>, W :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>W</anno>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>rasterPos4fv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>rasterPos4fv(X1 :: {X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>, Z :: <seetype marker="#f">f()</seetype>, W :: <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>W</anno>
  <anno>X</anno>
  <anno>X1</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>rasterPos4i</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>rasterPos4i(X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>, Z :: <seetype marker="#i">i()</seetype>, W :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>W</anno>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>rasterPos4iv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>rasterPos4iv(X1 :: {X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>, Z :: <seetype marker="#i">i()</seetype>, W :: <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>W</anno>
  <anno>X</anno>
  <anno>X1</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>rasterPos4s</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>rasterPos4s(X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>, Z :: <seetype marker="#i">i()</seetype>, W :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>W</anno>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>rasterPos4sv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>rasterPos4sv(X1 :: {X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>, Z :: <seetype marker="#i">i()</seetype>, W :: <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>W</anno>
  <anno>X</anno>
  <anno>X1</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>readBuffer</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>readBuffer(Mode :: <seetype marker="#enum">enum()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Mode</anno>
</spec>
<spec>
  <name>readPixels</name>
  <arity>7</arity>
  <contract>
    <clause>
      <head>readPixels(X, Y, Width, Height, Format, Type, Pixels) -&gt; ok</head>
      <guard>
        <subtype><typename>X</typename><string>X = Y = Width = Height = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Y</typename><string/></subtype>
        <subtype><typename>Width</typename><string/></subtype>
        <subtype><typename>Height</typename><string/></subtype>
        <subtype><typename>Format</typename><string>Format = Type = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Type</typename><string/></subtype>
        <subtype><typename>Pixels</typename><string>Pixels = <seetype marker="#mem">mem()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Format</anno>
  <anno>Height</anno>
  <anno>Pixels</anno>
  <anno>Type</anno>
  <anno>Width</anno>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>rec</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>rectd</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>rectd(X1 :: <seetype marker="#f">f()</seetype>, Y1 :: <seetype marker="#f">f()</seetype>, X2 :: <seetype marker="#f">f()</seetype>, Y2 :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>X1</anno>
  <anno>X2</anno>
  <anno>Y1</anno>
  <anno>Y2</anno>
</spec>
<spec>
  <name>rectdv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>rectdv(V1 :: {<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}, V2 :: {<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>V1</anno>
  <anno>V2</anno>
</spec>
<spec>
  <name>rectf</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>rectf(X1 :: <seetype marker="#f">f()</seetype>, Y1 :: <seetype marker="#f">f()</seetype>, X2 :: <seetype marker="#f">f()</seetype>, Y2 :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>X1</anno>
  <anno>X2</anno>
  <anno>Y1</anno>
  <anno>Y2</anno>
</spec>
<spec>
  <name>rectfv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>rectfv(V1 :: {<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}, V2 :: {<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>V1</anno>
  <anno>V2</anno>
</spec>
<spec>
  <name>recti</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>recti(X1 :: <seetype marker="#i">i()</seetype>, Y1 :: <seetype marker="#i">i()</seetype>, X2 :: <seetype marker="#i">i()</seetype>, Y2 :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>X1</anno>
  <anno>X2</anno>
  <anno>Y1</anno>
  <anno>Y2</anno>
</spec>
<spec>
  <name>rectiv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>rectiv(V1 :: {<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}, V2 :: {<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>V1</anno>
  <anno>V2</anno>
</spec>
<spec>
  <name>rects</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>rects(X1 :: <seetype marker="#i">i()</seetype>, Y1 :: <seetype marker="#i">i()</seetype>, X2 :: <seetype marker="#i">i()</seetype>, Y2 :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>X1</anno>
  <anno>X2</anno>
  <anno>Y1</anno>
  <anno>Y2</anno>
</spec>
<spec>
  <name>rectsv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>rectsv(V1 :: {<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}, V2 :: {<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>V1</anno>
  <anno>V2</anno>
</spec>
<spec>
  <name>releaseShaderCompiler</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>releaseShaderCompiler() -&gt; ok</head></clause>
  </contract>
</spec>
<spec>
  <name>renderMode</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>renderMode(Mode :: <seetype marker="#enum">enum()</seetype>) -&gt; <seetype marker="#i">i()</seetype></head></clause>
  </contract>
  <anno>Mode</anno>
</spec>
<spec>
  <name>renderbufferStorage</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>renderbufferStorage(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Internalformat :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Width :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Height :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Height</anno>
  <anno>Internalformat</anno>
  <anno>Target</anno>
  <anno>Width</anno>
</spec>
<spec>
  <name>renderbufferStorageMultisample</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>renderbufferStorageMultisample(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Samples :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Internalformat :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Width :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Height :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Height</anno>
  <anno>Internalformat</anno>
  <anno>Samples</anno>
  <anno>Target</anno>
  <anno>Width</anno>
</spec>
<spec>
  <name>resetHistogram</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>resetHistogram(Target :: <seetype marker="#enum">enum()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Target</anno>
</spec>
<spec>
  <name>resetMinmax</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>resetMinmax(Target :: <seetype marker="#enum">enum()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Target</anno>
</spec>
<spec>
  <name>resumeTransformFeedback</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>resumeTransformFeedback() -&gt; ok</head></clause>
  </contract>
</spec>
<spec>
  <name>rotated</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>rotated(Angle :: <seetype marker="#f">f()</seetype>, X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>, Z :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Angle</anno>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>rotatef</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>rotatef(Angle :: <seetype marker="#f">f()</seetype>, X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>, Z :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Angle</anno>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>sampleCoverage</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>sampleCoverage(Value :: <seetype marker="#clamp">clamp()</seetype>, Invert :: 0 | 1) -&gt; ok</head></clause>
  </contract>
  <anno>Invert</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>sampleCoverageARB</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>sampleCoverageARB(Value :: <seetype marker="#f">f()</seetype>, Invert :: 0 | 1) -&gt; ok</head></clause>
  </contract>
  <anno>Invert</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>sampleMaski</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>sampleMaski(MaskNumber :: <seetype marker="#i">i()</seetype>, Mask :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Mask</anno>
  <anno>MaskNumber</anno>
</spec>
<spec>
  <name>samplerParameterIiv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>samplerParameterIiv(Sampler :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Pname :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Param :: [<seetype marker="#i">i()</seetype>]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Param</anno>
  <anno>Pname</anno>
  <anno>Sampler</anno>
</spec>
<spec>
  <name>samplerParameterIuiv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>samplerParameterIuiv(Sampler :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Pname :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Param :: [<seetype marker="#i">i()</seetype>]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Param</anno>
  <anno>Pname</anno>
  <anno>Sampler</anno>
</spec>
<spec>
  <name>samplerParameterf</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>samplerParameterf(Sampler :: <seetype marker="#i">i()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>, Param :: <seetype marker="#f">f()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Param</anno>
  <anno>Pname</anno>
  <anno>Sampler</anno>
</spec>
<spec>
  <name>samplerParameterfv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>samplerParameterfv(Sampler :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Pname :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Param :: [<seetype marker="#f">f()</seetype>]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Param</anno>
  <anno>Pname</anno>
  <anno>Sampler</anno>
</spec>
<spec>
  <name>samplerParameteri</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>samplerParameteri(Sampler :: <seetype marker="#i">i()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>, Param :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Param</anno>
  <anno>Pname</anno>
  <anno>Sampler</anno>
</spec>
<spec>
  <name>samplerParameteriv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>samplerParameteriv(Sampler :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Pname :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Param :: [<seetype marker="#i">i()</seetype>]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Param</anno>
  <anno>Pname</anno>
  <anno>Sampler</anno>
</spec>
<spec>
  <name>scaled</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>scaled(X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>, Z :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>scalef</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>scalef(X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>, Z :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>scissor</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>scissor(X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>, Width :: <seetype marker="#i">i()</seetype>, Height :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Height</anno>
  <anno>Width</anno>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>scissorArrayv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>scissorArrayv(First :: <seetype marker="#i">i()</seetype>, V :: [{<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}]) -&gt; ok</head></clause>
  </contract>
  <anno>First</anno>
  <anno>V</anno>
</spec>
<spec>
  <name>scissorIndexed</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>scissorIndexed(Index :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Left :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Bottom :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Width :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Height :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Bottom</anno>
  <anno>Height</anno>
  <anno>Index</anno>
  <anno>Left</anno>
  <anno>Width</anno>
</spec>
<spec>
  <name>scissorIndexedv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>scissorIndexedv(Index :: <seetype marker="#i">i()</seetype>, V :: {<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>V</anno>
</spec>
<spec>
  <name>secondaryColor3b</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>secondaryColor3b(Red :: <seetype marker="#i">i()</seetype>, Green :: <seetype marker="#i">i()</seetype>, Blue :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
</spec>
<spec>
  <name>secondaryColor3bv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>secondaryColor3bv(X1 :: {Red :: <seetype marker="#i">i()</seetype>, Green :: <seetype marker="#i">i()</seetype>, Blue :: <seetype marker="#i">i()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>secondaryColor3d</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>secondaryColor3d(Red :: <seetype marker="#f">f()</seetype>, Green :: <seetype marker="#f">f()</seetype>, Blue :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
</spec>
<spec>
  <name>secondaryColor3dv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>secondaryColor3dv(X1 :: {Red :: <seetype marker="#f">f()</seetype>, Green :: <seetype marker="#f">f()</seetype>, Blue :: <seetype marker="#f">f()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>secondaryColor3f</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>secondaryColor3f(Red :: <seetype marker="#f">f()</seetype>, Green :: <seetype marker="#f">f()</seetype>, Blue :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
</spec>
<spec>
  <name>secondaryColor3fv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>secondaryColor3fv(X1 :: {Red :: <seetype marker="#f">f()</seetype>, Green :: <seetype marker="#f">f()</seetype>, Blue :: <seetype marker="#f">f()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>secondaryColor3i</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>secondaryColor3i(Red :: <seetype marker="#i">i()</seetype>, Green :: <seetype marker="#i">i()</seetype>, Blue :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
</spec>
<spec>
  <name>secondaryColor3iv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>secondaryColor3iv(X1 :: {Red :: <seetype marker="#i">i()</seetype>, Green :: <seetype marker="#i">i()</seetype>, Blue :: <seetype marker="#i">i()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>secondaryColor3s</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>secondaryColor3s(Red :: <seetype marker="#i">i()</seetype>, Green :: <seetype marker="#i">i()</seetype>, Blue :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
</spec>
<spec>
  <name>secondaryColor3sv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>secondaryColor3sv(X1 :: {Red :: <seetype marker="#i">i()</seetype>, Green :: <seetype marker="#i">i()</seetype>, Blue :: <seetype marker="#i">i()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>secondaryColor3ub</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>secondaryColor3ub(Red :: <seetype marker="#i">i()</seetype>, Green :: <seetype marker="#i">i()</seetype>, Blue :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
</spec>
<spec>
  <name>secondaryColor3ubv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>secondaryColor3ubv(X1 :: {Red :: <seetype marker="#i">i()</seetype>, Green :: <seetype marker="#i">i()</seetype>, Blue :: <seetype marker="#i">i()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>secondaryColor3ui</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>secondaryColor3ui(Red :: <seetype marker="#i">i()</seetype>, Green :: <seetype marker="#i">i()</seetype>, Blue :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
</spec>
<spec>
  <name>secondaryColor3uiv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>secondaryColor3uiv(X1 :: {Red :: <seetype marker="#i">i()</seetype>, Green :: <seetype marker="#i">i()</seetype>, Blue :: <seetype marker="#i">i()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>secondaryColor3us</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>secondaryColor3us(Red :: <seetype marker="#i">i()</seetype>, Green :: <seetype marker="#i">i()</seetype>, Blue :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
</spec>
<spec>
  <name>secondaryColor3usv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>secondaryColor3usv(X1 :: {Red :: <seetype marker="#i">i()</seetype>, Green :: <seetype marker="#i">i()</seetype>, Blue :: <seetype marker="#i">i()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>secondaryColorPointer</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>secondaryColorPointer(Size :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Type :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Stride :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Pointer :: <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Pointer</anno>
  <anno>Size</anno>
  <anno>Stride</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>selectBuffer</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>selectBuffer(Size :: <seetype marker="#i">i()</seetype>, Buffer :: <seetype marker="#mem">mem()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Buffer</anno>
  <anno>Size</anno>
</spec>
<spec>
  <name>separableFilter2D</name>
  <arity>8</arity>
  <contract>
    <clause>
      <head>separableFilter2D(Target, Internalformat, Width, Height, Format,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Type, Row, Column) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Target</typename><string>Target = Internalformat = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Internalformat</typename><string/></subtype>
        <subtype><typename>Width</typename><string>Width = Height = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Height</typename><string/></subtype>
        <subtype><typename>Format</typename><string>Format = Type = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Type</typename><string/></subtype>
        <subtype><typename>Row</typename><string>Row = Column = <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype></string></subtype>
        <subtype><typename>Column</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Column</anno>
  <anno>Format</anno>
  <anno>Height</anno>
  <anno>Internalformat</anno>
  <anno>Row</anno>
  <anno>Target</anno>
  <anno>Type</anno>
  <anno>Width</anno>
</spec>
<spec>
  <name>shadeModel</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>shadeModel(Mode :: <seetype marker="#enum">enum()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Mode</anno>
</spec>
<spec>
  <name>shaderBinary</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>shaderBinary(Shaders :: [<seetype marker="#i">i()</seetype>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Binaryformat :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Binary :: <seetype marker="erlang#binary">binary()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Binary</anno>
  <anno>Binaryformat</anno>
  <anno>Shaders</anno>
</spec>
<spec>
  <name>shaderSource</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>shaderSource(Shader :: <seetype marker="#i">i()</seetype>, String :: [<seetype marker="unicode#chardata">unicode:chardata()</seetype>]) -&gt; ok</head></clause>
  </contract>
  <anno>Shader</anno>
  <anno>String</anno>
</spec>
<spec>
  <name>shaderSourceARB</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>shaderSourceARB(ShaderObj :: <seetype marker="#i">i()</seetype>, String :: [<seetype marker="unicode#chardata">unicode:chardata()</seetype>]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>ShaderObj</anno>
  <anno>String</anno>
</spec>
<spec>
  <name>shaderStorageBlockBinding</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>shaderStorageBlockBinding(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>StorageBlockIndex :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>StorageBlockBinding :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Program</anno>
  <anno>StorageBlockBinding</anno>
  <anno>StorageBlockIndex</anno>
</spec>
<spec>
  <name>stencilFunc</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>stencilFunc(Func :: <seetype marker="#enum">enum()</seetype>, Ref :: <seetype marker="#i">i()</seetype>, Mask :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Func</anno>
  <anno>Mask</anno>
  <anno>Ref</anno>
</spec>
<spec>
  <name>stencilFuncSeparate</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>stencilFuncSeparate(Face :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Func :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Ref :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Mask :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Face</anno>
  <anno>Func</anno>
  <anno>Mask</anno>
  <anno>Ref</anno>
</spec>
<spec>
  <name>stencilMask</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>stencilMask(Mask :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Mask</anno>
</spec>
<spec>
  <name>stencilMaskSeparate</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>stencilMaskSeparate(Face :: <seetype marker="#enum">enum()</seetype>, Mask :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Face</anno>
  <anno>Mask</anno>
</spec>
<spec>
  <name>stencilOp</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>stencilOp(Fail :: <seetype marker="#enum">enum()</seetype>, Zfail :: <seetype marker="#enum">enum()</seetype>, Zpass :: <seetype marker="#enum">enum()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Fail</anno>
  <anno>Zfail</anno>
  <anno>Zpass</anno>
</spec>
<spec>
  <name>stencilOpSeparate</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>stencilOpSeparate(Face :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Sfail :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Dpfail :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Dppass :: <seetype marker="#enum">enum()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Dpfail</anno>
  <anno>Dppass</anno>
  <anno>Face</anno>
  <anno>Sfail</anno>
</spec>
<spec>
  <name>texBuffer</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>texBuffer(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Internalformat :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Buffer :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Buffer</anno>
  <anno>Internalformat</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>texBufferRange</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>texBufferRange(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Internalformat :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Buffer :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Offset :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Size :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Buffer</anno>
  <anno>Internalformat</anno>
  <anno>Offset</anno>
  <anno>Size</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>texCoord1d</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>texCoord1d(S :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>S</anno>
</spec>
<spec>
  <name>texCoord1dv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>texCoord1dv(X1 :: {S :: <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>S</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>texCoord1f</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>texCoord1f(S :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>S</anno>
</spec>
<spec>
  <name>texCoord1fv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>texCoord1fv(X1 :: {S :: <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>S</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>texCoord1i</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>texCoord1i(S :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>S</anno>
</spec>
<spec>
  <name>texCoord1iv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>texCoord1iv(X1 :: {S :: <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>S</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>texCoord1s</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>texCoord1s(S :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>S</anno>
</spec>
<spec>
  <name>texCoord1sv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>texCoord1sv(X1 :: {S :: <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>S</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>texCoord2d</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>texCoord2d(S :: <seetype marker="#f">f()</seetype>, T :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>S</anno>
  <anno>T</anno>
</spec>
<spec>
  <name>texCoord2dv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>texCoord2dv(X1 :: {S :: <seetype marker="#f">f()</seetype>, T :: <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>S</anno>
  <anno>T</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>texCoord2f</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>texCoord2f(S :: <seetype marker="#f">f()</seetype>, T :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>S</anno>
  <anno>T</anno>
</spec>
<spec>
  <name>texCoord2fv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>texCoord2fv(X1 :: {S :: <seetype marker="#f">f()</seetype>, T :: <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>S</anno>
  <anno>T</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>texCoord2i</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>texCoord2i(S :: <seetype marker="#i">i()</seetype>, T :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>S</anno>
  <anno>T</anno>
</spec>
<spec>
  <name>texCoord2iv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>texCoord2iv(X1 :: {S :: <seetype marker="#i">i()</seetype>, T :: <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>S</anno>
  <anno>T</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>texCoord2s</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>texCoord2s(S :: <seetype marker="#i">i()</seetype>, T :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>S</anno>
  <anno>T</anno>
</spec>
<spec>
  <name>texCoord2sv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>texCoord2sv(X1 :: {S :: <seetype marker="#i">i()</seetype>, T :: <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>S</anno>
  <anno>T</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>texCoord3d</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>texCoord3d(S :: <seetype marker="#f">f()</seetype>, T :: <seetype marker="#f">f()</seetype>, R :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>R</anno>
  <anno>S</anno>
  <anno>T</anno>
</spec>
<spec>
  <name>texCoord3dv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>texCoord3dv(X1 :: {S :: <seetype marker="#f">f()</seetype>, T :: <seetype marker="#f">f()</seetype>, R :: <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>R</anno>
  <anno>S</anno>
  <anno>T</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>texCoord3f</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>texCoord3f(S :: <seetype marker="#f">f()</seetype>, T :: <seetype marker="#f">f()</seetype>, R :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>R</anno>
  <anno>S</anno>
  <anno>T</anno>
</spec>
<spec>
  <name>texCoord3fv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>texCoord3fv(X1 :: {S :: <seetype marker="#f">f()</seetype>, T :: <seetype marker="#f">f()</seetype>, R :: <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>R</anno>
  <anno>S</anno>
  <anno>T</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>texCoord3i</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>texCoord3i(S :: <seetype marker="#i">i()</seetype>, T :: <seetype marker="#i">i()</seetype>, R :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>R</anno>
  <anno>S</anno>
  <anno>T</anno>
</spec>
<spec>
  <name>texCoord3iv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>texCoord3iv(X1 :: {S :: <seetype marker="#i">i()</seetype>, T :: <seetype marker="#i">i()</seetype>, R :: <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>R</anno>
  <anno>S</anno>
  <anno>T</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>texCoord3s</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>texCoord3s(S :: <seetype marker="#i">i()</seetype>, T :: <seetype marker="#i">i()</seetype>, R :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>R</anno>
  <anno>S</anno>
  <anno>T</anno>
</spec>
<spec>
  <name>texCoord3sv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>texCoord3sv(X1 :: {S :: <seetype marker="#i">i()</seetype>, T :: <seetype marker="#i">i()</seetype>, R :: <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>R</anno>
  <anno>S</anno>
  <anno>T</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>texCoord4d</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>texCoord4d(S :: <seetype marker="#f">f()</seetype>, T :: <seetype marker="#f">f()</seetype>, R :: <seetype marker="#f">f()</seetype>, Q :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Q</anno>
  <anno>R</anno>
  <anno>S</anno>
  <anno>T</anno>
</spec>
<spec>
  <name>texCoord4dv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>texCoord4dv(X1 :: {S :: <seetype marker="#f">f()</seetype>, T :: <seetype marker="#f">f()</seetype>, R :: <seetype marker="#f">f()</seetype>, Q :: <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Q</anno>
  <anno>R</anno>
  <anno>S</anno>
  <anno>T</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>texCoord4f</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>texCoord4f(S :: <seetype marker="#f">f()</seetype>, T :: <seetype marker="#f">f()</seetype>, R :: <seetype marker="#f">f()</seetype>, Q :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Q</anno>
  <anno>R</anno>
  <anno>S</anno>
  <anno>T</anno>
</spec>
<spec>
  <name>texCoord4fv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>texCoord4fv(X1 :: {S :: <seetype marker="#f">f()</seetype>, T :: <seetype marker="#f">f()</seetype>, R :: <seetype marker="#f">f()</seetype>, Q :: <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Q</anno>
  <anno>R</anno>
  <anno>S</anno>
  <anno>T</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>texCoord4i</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>texCoord4i(S :: <seetype marker="#i">i()</seetype>, T :: <seetype marker="#i">i()</seetype>, R :: <seetype marker="#i">i()</seetype>, Q :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Q</anno>
  <anno>R</anno>
  <anno>S</anno>
  <anno>T</anno>
</spec>
<spec>
  <name>texCoord4iv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>texCoord4iv(X1 :: {S :: <seetype marker="#i">i()</seetype>, T :: <seetype marker="#i">i()</seetype>, R :: <seetype marker="#i">i()</seetype>, Q :: <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Q</anno>
  <anno>R</anno>
  <anno>S</anno>
  <anno>T</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>texCoord4s</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>texCoord4s(S :: <seetype marker="#i">i()</seetype>, T :: <seetype marker="#i">i()</seetype>, R :: <seetype marker="#i">i()</seetype>, Q :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Q</anno>
  <anno>R</anno>
  <anno>S</anno>
  <anno>T</anno>
</spec>
<spec>
  <name>texCoord4sv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>texCoord4sv(X1 :: {S :: <seetype marker="#i">i()</seetype>, T :: <seetype marker="#i">i()</seetype>, R :: <seetype marker="#i">i()</seetype>, Q :: <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Q</anno>
  <anno>R</anno>
  <anno>S</anno>
  <anno>T</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>texCoordPointer</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>texCoordPointer(Size :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Type :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Stride :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Ptr :: <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Ptr</anno>
  <anno>Size</anno>
  <anno>Stride</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>texEnvf</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>texEnvf(Target :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>, Param :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Param</anno>
  <anno>Pname</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>texEnvfv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>texEnvfv(Target :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>, Params :: <seetype marker="erlang#tuple">tuple()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Params</anno>
  <anno>Pname</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>texEnvi</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>texEnvi(Target :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>, Param :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Param</anno>
  <anno>Pname</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>texEnviv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>texEnviv(Target :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>, Params :: <seetype marker="erlang#tuple">tuple()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Params</anno>
  <anno>Pname</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>texGend</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>texGend(Coord :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>, Param :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Coord</anno>
  <anno>Param</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>texGendv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>texGendv(Coord :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>, Params :: <seetype marker="erlang#tuple">tuple()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Coord</anno>
  <anno>Params</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>texGenf</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>texGenf(Coord :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>, Param :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Coord</anno>
  <anno>Param</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>texGenfv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>texGenfv(Coord :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>, Params :: <seetype marker="erlang#tuple">tuple()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Coord</anno>
  <anno>Params</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>texGeni</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>texGeni(Coord :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>, Param :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Coord</anno>
  <anno>Param</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>texGeniv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>texGeniv(Coord :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>, Params :: <seetype marker="erlang#tuple">tuple()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Coord</anno>
  <anno>Params</anno>
  <anno>Pname</anno>
</spec>
<spec>
  <name>texImage1D</name>
  <arity>8</arity>
  <contract>
    <clause>
      <head>texImage1D(Target, Level, InternalFormat, Width, Border, Format,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Type, Pixels) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Target</typename><string>Target = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Level</typename><string>Level = InternalFormat = Width = Border = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>InternalFormat</typename><string/></subtype>
        <subtype><typename>Width</typename><string/></subtype>
        <subtype><typename>Border</typename><string/></subtype>
        <subtype><typename>Format</typename><string>Format = Type = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Type</typename><string/></subtype>
        <subtype><typename>Pixels</typename><string>Pixels = <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Border</anno>
  <anno>Format</anno>
  <anno>InternalFormat</anno>
  <anno>Level</anno>
  <anno>Pixels</anno>
  <anno>Target</anno>
  <anno>Type</anno>
  <anno>Width</anno>
</spec>
<spec>
  <name>texImage2D</name>
  <arity>9</arity>
  <contract>
    <clause>
      <head>texImage2D(Target, Level, InternalFormat, Width, Height, Border,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Format, Type, Pixels) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Target</typename><string>Target = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Level</typename><string>Level = InternalFormat = Width = Height = Border = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>InternalFormat</typename><string/></subtype>
        <subtype><typename>Width</typename><string/></subtype>
        <subtype><typename>Height</typename><string/></subtype>
        <subtype><typename>Border</typename><string/></subtype>
        <subtype><typename>Format</typename><string>Format = Type = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Type</typename><string/></subtype>
        <subtype><typename>Pixels</typename><string>Pixels = <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Border</anno>
  <anno>Format</anno>
  <anno>Height</anno>
  <anno>InternalFormat</anno>
  <anno>Level</anno>
  <anno>Pixels</anno>
  <anno>Target</anno>
  <anno>Type</anno>
  <anno>Width</anno>
</spec>
<spec>
  <name>texImage2DMultisample</name>
  <arity>6</arity>
  <contract>
    <clause>
      <head>texImage2DMultisample(Target, Samples, Internalformat, Width,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Height, Fixedsamplelocations) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Target</typename><string>Target = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Samples</typename><string>Samples = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Internalformat</typename><string>Internalformat = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Width</typename><string>Width = Height = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Height</typename><string/></subtype>
        <subtype><typename>Fixedsamplelocations</typename><string>Fixedsamplelocations = 0 | 1</string></subtype>
      </guard></clause>
  </contract>
  <anno>Fixedsamplelocations</anno>
  <anno>Height</anno>
  <anno>Internalformat</anno>
  <anno>Samples</anno>
  <anno>Target</anno>
  <anno>Width</anno>
</spec>
<spec>
  <name>texImage3D</name>
  <arity>10</arity>
  <contract>
    <clause>
      <head>texImage3D(Target, Level, InternalFormat, Width, Height, Depth,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Border, Format, Type, Pixels) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Target</typename><string>Target = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Level</typename><string>Level = InternalFormat = Width = Height = Depth = Border = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>InternalFormat</typename><string/></subtype>
        <subtype><typename>Width</typename><string/></subtype>
        <subtype><typename>Height</typename><string/></subtype>
        <subtype><typename>Depth</typename><string/></subtype>
        <subtype><typename>Border</typename><string/></subtype>
        <subtype><typename>Format</typename><string>Format = Type = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Type</typename><string/></subtype>
        <subtype><typename>Pixels</typename><string>Pixels = <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Border</anno>
  <anno>Depth</anno>
  <anno>Format</anno>
  <anno>Height</anno>
  <anno>InternalFormat</anno>
  <anno>Level</anno>
  <anno>Pixels</anno>
  <anno>Target</anno>
  <anno>Type</anno>
  <anno>Width</anno>
</spec>
<spec>
  <name>texImage3DMultisample</name>
  <arity>7</arity>
  <contract>
    <clause>
      <head>texImage3DMultisample(Target, Samples, Internalformat, Width,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Height, Depth, Fixedsamplelocations) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Target</typename><string>Target = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Samples</typename><string>Samples = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Internalformat</typename><string>Internalformat = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Width</typename><string>Width = Height = Depth = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Height</typename><string/></subtype>
        <subtype><typename>Depth</typename><string/></subtype>
        <subtype><typename>Fixedsamplelocations</typename><string>Fixedsamplelocations = 0 | 1</string></subtype>
      </guard></clause>
  </contract>
  <anno>Depth</anno>
  <anno>Fixedsamplelocations</anno>
  <anno>Height</anno>
  <anno>Internalformat</anno>
  <anno>Samples</anno>
  <anno>Target</anno>
  <anno>Width</anno>
</spec>
<spec>
  <name>texPageCommitmentARB</name>
  <arity>9</arity>
  <contract>
    <clause>
      <head>texPageCommitmentARB(Target, Level, Xoffset, Yoffset, Zoffset,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Width, Height, Depth, Commit) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Target</typename><string>Target = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Level</typename><string>Level = Xoffset = Yoffset = Zoffset = Width = Height = Depth = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Xoffset</typename><string/></subtype>
        <subtype><typename>Yoffset</typename><string/></subtype>
        <subtype><typename>Zoffset</typename><string/></subtype>
        <subtype><typename>Width</typename><string/></subtype>
        <subtype><typename>Height</typename><string/></subtype>
        <subtype><typename>Depth</typename><string/></subtype>
        <subtype><typename>Commit</typename><string>Commit = 0 | 1</string></subtype>
      </guard></clause>
  </contract>
  <anno>Commit</anno>
  <anno>Depth</anno>
  <anno>Height</anno>
  <anno>Level</anno>
  <anno>Target</anno>
  <anno>Width</anno>
  <anno>Xoffset</anno>
  <anno>Yoffset</anno>
  <anno>Zoffset</anno>
</spec>
<spec>
  <name>texParameterIiv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>texParameterIiv(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Pname :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Params :: <seetype marker="erlang#tuple">tuple()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Params</anno>
  <anno>Pname</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>texParameterIuiv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>texParameterIuiv(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Pname :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Params :: <seetype marker="erlang#tuple">tuple()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Params</anno>
  <anno>Pname</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>texParameterf</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>texParameterf(Target :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>, Param :: <seetype marker="#f">f()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Param</anno>
  <anno>Pname</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>texParameterfv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>texParameterfv(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Pname :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Params :: <seetype marker="erlang#tuple">tuple()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Params</anno>
  <anno>Pname</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>texParameteri</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>texParameteri(Target :: <seetype marker="#enum">enum()</seetype>, Pname :: <seetype marker="#enum">enum()</seetype>, Param :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Param</anno>
  <anno>Pname</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>texParameteriv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>texParameteriv(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Pname :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Params :: <seetype marker="erlang#tuple">tuple()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Params</anno>
  <anno>Pname</anno>
  <anno>Target</anno>
</spec>
<spec>
  <name>texStorage1D</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>texStorage1D(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Levels :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Internalformat :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Width :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Internalformat</anno>
  <anno>Levels</anno>
  <anno>Target</anno>
  <anno>Width</anno>
</spec>
<spec>
  <name>texStorage2D</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>texStorage2D(Target :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Levels :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Internalformat :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Width :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Height :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Height</anno>
  <anno>Internalformat</anno>
  <anno>Levels</anno>
  <anno>Target</anno>
  <anno>Width</anno>
</spec>
<spec>
  <name>texStorage2DMultisample</name>
  <arity>6</arity>
  <contract>
    <clause>
      <head>texStorage2DMultisample(Target, Samples, Internalformat, Width,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Height, Fixedsamplelocations) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Target</typename><string>Target = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Samples</typename><string>Samples = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Internalformat</typename><string>Internalformat = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Width</typename><string>Width = Height = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Height</typename><string/></subtype>
        <subtype><typename>Fixedsamplelocations</typename><string>Fixedsamplelocations = 0 | 1</string></subtype>
      </guard></clause>
  </contract>
  <anno>Fixedsamplelocations</anno>
  <anno>Height</anno>
  <anno>Internalformat</anno>
  <anno>Samples</anno>
  <anno>Target</anno>
  <anno>Width</anno>
</spec>
<spec>
  <name>texStorage3D</name>
  <arity>6</arity>
  <contract>
    <clause>
      <head>texStorage3D(Target, Levels, Internalformat, Width, Height, Depth) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Target</typename><string>Target = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Levels</typename><string>Levels = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Internalformat</typename><string>Internalformat = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Width</typename><string>Width = Height = Depth = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Height</typename><string></string></subtype>
        <subtype><typename>Depth</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Depth</anno>
  <anno>Height</anno>
  <anno>Internalformat</anno>
  <anno>Levels</anno>
  <anno>Target</anno>
  <anno>Width</anno>
</spec>
<spec>
  <name>texStorage3DMultisample</name>
  <arity>7</arity>
  <contract>
    <clause>
      <head>texStorage3DMultisample(Target, Samples, Internalformat, Width,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Height, Depth, Fixedsamplelocations) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Target</typename><string>Target = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Samples</typename><string>Samples = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Internalformat</typename><string>Internalformat = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Width</typename><string>Width = Height = Depth = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Height</typename><string/></subtype>
        <subtype><typename>Depth</typename><string/></subtype>
        <subtype><typename>Fixedsamplelocations</typename><string>Fixedsamplelocations = 0 | 1</string></subtype>
      </guard></clause>
  </contract>
  <anno>Depth</anno>
  <anno>Fixedsamplelocations</anno>
  <anno>Height</anno>
  <anno>Internalformat</anno>
  <anno>Samples</anno>
  <anno>Target</anno>
  <anno>Width</anno>
</spec>
<spec>
  <name>texSubImage1D</name>
  <arity>7</arity>
  <contract>
    <clause>
      <head>texSubImage1D(Target, Level, Xoffset, Width, Format, Type, Pixels) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Target</typename><string>Target = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Level</typename><string>Level = Xoffset = Width = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Xoffset</typename><string/></subtype>
        <subtype><typename>Width</typename><string/></subtype>
        <subtype><typename>Format</typename><string>Format = Type = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Type</typename><string/></subtype>
        <subtype><typename>Pixels</typename><string>Pixels = <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Format</anno>
  <anno>Level</anno>
  <anno>Pixels</anno>
  <anno>Target</anno>
  <anno>Type</anno>
  <anno>Width</anno>
  <anno>Xoffset</anno>
</spec>
<spec>
  <name>texSubImage2D</name>
  <arity>9</arity>
  <contract>
    <clause>
      <head>texSubImage2D(Target, Level, Xoffset, Yoffset, Width, Height,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Format, Type, Pixels) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Target</typename><string>Target = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Level</typename><string>Level = Xoffset = Yoffset = Width = Height = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Xoffset</typename><string/></subtype>
        <subtype><typename>Yoffset</typename><string/></subtype>
        <subtype><typename>Width</typename><string/></subtype>
        <subtype><typename>Height</typename><string/></subtype>
        <subtype><typename>Format</typename><string>Format = Type = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Type</typename><string/></subtype>
        <subtype><typename>Pixels</typename><string>Pixels = <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Format</anno>
  <anno>Height</anno>
  <anno>Level</anno>
  <anno>Pixels</anno>
  <anno>Target</anno>
  <anno>Type</anno>
  <anno>Width</anno>
  <anno>Xoffset</anno>
  <anno>Yoffset</anno>
</spec>
<spec>
  <name>texSubImage3D</name>
  <arity>11</arity>
  <contract>
    <clause>
      <head>texSubImage3D(Target, Level, Xoffset, Yoffset, Zoffset, Width,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Height, Depth, Format, Type, Pixels) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Target</typename><string>Target = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Level</typename><string>Level = Xoffset = Yoffset = Zoffset = Width = Height = Depth = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Xoffset</typename><string/></subtype>
        <subtype><typename>Yoffset</typename><string/></subtype>
        <subtype><typename>Zoffset</typename><string/></subtype>
        <subtype><typename>Width</typename><string/></subtype>
        <subtype><typename>Height</typename><string/></subtype>
        <subtype><typename>Depth</typename><string/></subtype>
        <subtype><typename>Format</typename><string>Format = Type = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Type</typename><string/></subtype>
        <subtype><typename>Pixels</typename><string>Pixels = <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Depth</anno>
  <anno>Format</anno>
  <anno>Height</anno>
  <anno>Level</anno>
  <anno>Pixels</anno>
  <anno>Target</anno>
  <anno>Type</anno>
  <anno>Width</anno>
  <anno>Xoffset</anno>
  <anno>Yoffset</anno>
  <anno>Zoffset</anno>
</spec>
<spec>
  <name>textureBarrier</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>textureBarrier() -&gt; ok</head></clause>
  </contract>
</spec>
<spec>
  <name>textureBuffer</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>textureBuffer(Texture :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Internalformat :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Buffer :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Buffer</anno>
  <anno>Internalformat</anno>
  <anno>Texture</anno>
</spec>
<spec>
  <name>textureBufferRange</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>textureBufferRange(Texture :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Internalformat :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Buffer :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Offset :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Size :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Buffer</anno>
  <anno>Internalformat</anno>
  <anno>Offset</anno>
  <anno>Size</anno>
  <anno>Texture</anno>
</spec>
<spec>
  <name>textureView</name>
  <arity>8</arity>
  <contract>
    <clause>
      <head>textureView(Texture, Target, Origtexture, Internalformat,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Minlevel, Numlevels, Minlayer, Numlayers) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Texture</typename><string>Texture = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Target</typename><string>Target = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Origtexture</typename><string>Origtexture = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Internalformat</typename><string>Internalformat = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Minlevel</typename><string>Minlevel = Numlevels = Minlayer = Numlayers = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Numlevels</typename><string></string></subtype>
        <subtype><typename>Minlayer</typename><string></string></subtype>
        <subtype><typename>Numlayers</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Internalformat</anno>
  <anno>Minlayer</anno>
  <anno>Minlevel</anno>
  <anno>Numlayers</anno>
  <anno>Numlevels</anno>
  <anno>Origtexture</anno>
  <anno>Target</anno>
  <anno>Texture</anno>
</spec>
<spec>
  <name>transformFeedbackBufferBase</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>transformFeedbackBufferBase(Xfb :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Index :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Buffer :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Buffer</anno>
  <anno>Index</anno>
  <anno>Xfb</anno>
</spec>
<spec>
  <name>transformFeedbackBufferRange</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>transformFeedbackBufferRange(Xfb :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Index :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Buffer :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Offset :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Size :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Buffer</anno>
  <anno>Index</anno>
  <anno>Offset</anno>
  <anno>Size</anno>
  <anno>Xfb</anno>
</spec>
<spec>
  <name>transformFeedbackVaryings</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>transformFeedbackVaryings(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Varyings :: [<seetype marker="unicode#chardata">unicode:chardata()</seetype>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>BufferMode :: <seetype marker="#enum">enum()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>BufferMode</anno>
  <anno>Program</anno>
  <anno>Varyings</anno>
</spec>
<spec>
  <name>translated</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>translated(X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>, Z :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>translatef</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>translatef(X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>, Z :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>uniform1d</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>uniform1d(Location :: <seetype marker="#i">i()</seetype>, X :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>X</anno>
</spec>
<spec>
  <name>uniform1dv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>uniform1dv(Location :: <seetype marker="#i">i()</seetype>, Value :: [<seetype marker="#f">f()</seetype>]) -&gt; ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>uniform1f</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>uniform1f(Location :: <seetype marker="#i">i()</seetype>, V0 :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>V0</anno>
</spec>
<spec>
  <name>uniform1fv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>uniform1fv(Location :: <seetype marker="#i">i()</seetype>, Value :: [<seetype marker="#f">f()</seetype>]) -&gt; ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>uniform1i</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>uniform1i(Location :: <seetype marker="#i">i()</seetype>, V0 :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>V0</anno>
</spec>
<spec>
  <name>uniform1i64ARB</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>uniform1i64ARB(Location :: <seetype marker="#i">i()</seetype>, X :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>X</anno>
</spec>
<spec>
  <name>uniform1i64vARB</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>uniform1i64vARB(Location :: <seetype marker="#i">i()</seetype>, Value :: [<seetype marker="#i">i()</seetype>]) -&gt; ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>uniform1iv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>uniform1iv(Location :: <seetype marker="#i">i()</seetype>, Value :: [<seetype marker="#i">i()</seetype>]) -&gt; ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>uniform1ui</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>uniform1ui(Location :: <seetype marker="#i">i()</seetype>, V0 :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>V0</anno>
</spec>
<spec>
  <name>uniform1ui64ARB</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>uniform1ui64ARB(Location :: <seetype marker="#i">i()</seetype>, X :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>X</anno>
</spec>
<spec>
  <name>uniform1ui64vARB</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>uniform1ui64vARB(Location :: <seetype marker="#i">i()</seetype>, Value :: [<seetype marker="#i">i()</seetype>]) -&gt; ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>uniform1uiv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>uniform1uiv(Location :: <seetype marker="#i">i()</seetype>, Value :: [<seetype marker="#i">i()</seetype>]) -&gt; ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>uniform2d</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>uniform2d(Location :: <seetype marker="#i">i()</seetype>, X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>uniform2dv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>uniform2dv(Location :: <seetype marker="#i">i()</seetype>, Value :: [{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}]) -&gt; ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>uniform2f</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>uniform2f(Location :: <seetype marker="#i">i()</seetype>, V0 :: <seetype marker="#f">f()</seetype>, V1 :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>V0</anno>
  <anno>V1</anno>
</spec>
<spec>
  <name>uniform2fv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>uniform2fv(Location :: <seetype marker="#i">i()</seetype>, Value :: [{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}]) -&gt; ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>uniform2i</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>uniform2i(Location :: <seetype marker="#i">i()</seetype>, V0 :: <seetype marker="#i">i()</seetype>, V1 :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>V0</anno>
  <anno>V1</anno>
</spec>
<spec>
  <name>uniform2i64ARB</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>uniform2i64ARB(Location :: <seetype marker="#i">i()</seetype>, X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>uniform2i64vARB</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>uniform2i64vARB(Location :: <seetype marker="#i">i()</seetype>, Value :: [{<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}]) -&gt; ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>uniform2iv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>uniform2iv(Location :: <seetype marker="#i">i()</seetype>, Value :: [{<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}]) -&gt; ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>uniform2ui</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>uniform2ui(Location :: <seetype marker="#i">i()</seetype>, V0 :: <seetype marker="#i">i()</seetype>, V1 :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>V0</anno>
  <anno>V1</anno>
</spec>
<spec>
  <name>uniform2ui64ARB</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>uniform2ui64ARB(Location :: <seetype marker="#i">i()</seetype>, X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>uniform2ui64vARB</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>uniform2ui64vARB(Location :: <seetype marker="#i">i()</seetype>, Value :: [{<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}]) -&gt; ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>uniform2uiv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>uniform2uiv(Location :: <seetype marker="#i">i()</seetype>, Value :: [{<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}]) -&gt; ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>uniform3d</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>uniform3d(Location :: <seetype marker="#i">i()</seetype>, X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>, Z :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>uniform3dv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>uniform3dv(Location :: <seetype marker="#i">i()</seetype>, Value :: [{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}]) -&gt; ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>uniform3f</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>uniform3f(Location :: <seetype marker="#i">i()</seetype>, V0 :: <seetype marker="#f">f()</seetype>, V1 :: <seetype marker="#f">f()</seetype>, V2 :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>V0</anno>
  <anno>V1</anno>
  <anno>V2</anno>
</spec>
<spec>
  <name>uniform3fv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>uniform3fv(Location :: <seetype marker="#i">i()</seetype>, Value :: [{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}]) -&gt; ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>uniform3i</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>uniform3i(Location :: <seetype marker="#i">i()</seetype>, V0 :: <seetype marker="#i">i()</seetype>, V1 :: <seetype marker="#i">i()</seetype>, V2 :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>V0</anno>
  <anno>V1</anno>
  <anno>V2</anno>
</spec>
<spec>
  <name>uniform3i64ARB</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>uniform3i64ARB(Location :: <seetype marker="#i">i()</seetype>, X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>, Z :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>uniform3i64vARB</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>uniform3i64vARB(Location :: <seetype marker="#i">i()</seetype>, Value :: [{<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}]) -&gt; ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>uniform3iv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>uniform3iv(Location :: <seetype marker="#i">i()</seetype>, Value :: [{<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}]) -&gt; ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>uniform3ui</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>uniform3ui(Location :: <seetype marker="#i">i()</seetype>, V0 :: <seetype marker="#i">i()</seetype>, V1 :: <seetype marker="#i">i()</seetype>, V2 :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>V0</anno>
  <anno>V1</anno>
  <anno>V2</anno>
</spec>
<spec>
  <name>uniform3ui64ARB</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>uniform3ui64ARB(Location :: <seetype marker="#i">i()</seetype>, X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>, Z :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>uniform3ui64vARB</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>uniform3ui64vARB(Location :: <seetype marker="#i">i()</seetype>, Value :: [{<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>uniform3uiv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>uniform3uiv(Location :: <seetype marker="#i">i()</seetype>, Value :: [{<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}]) -&gt; ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>uniform4d</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>uniform4d(Location :: <seetype marker="#i">i()</seetype>, X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>, Z :: <seetype marker="#f">f()</seetype>, W :: <seetype marker="#f">f()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>W</anno>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>uniform4dv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>uniform4dv(Location :: <seetype marker="#i">i()</seetype>, Value :: [{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}]) -&gt; ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>uniform4f</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>uniform4f(Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V0 :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V1 :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V2 :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V3 :: <seetype marker="#f">f()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>V0</anno>
  <anno>V1</anno>
  <anno>V2</anno>
  <anno>V3</anno>
</spec>
<spec>
  <name>uniform4fv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>uniform4fv(Location :: <seetype marker="#i">i()</seetype>, Value :: [{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}]) -&gt; ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>uniform4i</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>uniform4i(Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V0 :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V1 :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V2 :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V3 :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>V0</anno>
  <anno>V1</anno>
  <anno>V2</anno>
  <anno>V3</anno>
</spec>
<spec>
  <name>uniform4i64ARB</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>uniform4i64ARB(Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Y :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Z :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>W :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>W</anno>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>uniform4i64vARB</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>uniform4i64vARB(Location :: <seetype marker="#i">i()</seetype>, Value :: [{<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>uniform4iv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>uniform4iv(Location :: <seetype marker="#i">i()</seetype>, Value :: [{<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}]) -&gt; ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>uniform4ui</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>uniform4ui(Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V0 :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V1 :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V2 :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>V3 :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>V0</anno>
  <anno>V1</anno>
  <anno>V2</anno>
  <anno>V3</anno>
</spec>
<spec>
  <name>uniform4ui64ARB</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>uniform4ui64ARB(Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Y :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Z :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>W :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>W</anno>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>uniform4ui64vARB</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>uniform4ui64vARB(Location :: <seetype marker="#i">i()</seetype>, Value :: [{<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>uniform4uiv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>uniform4uiv(Location :: <seetype marker="#i">i()</seetype>, Value :: [{<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>uniformBlockBinding</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>uniformBlockBinding(Program :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>UniformBlockIndex :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>UniformBlockBinding :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Program</anno>
  <anno>UniformBlockBinding</anno>
  <anno>UniformBlockIndex</anno>
</spec>
<spec>
  <name>uniformHandleui64ARB</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>uniformHandleui64ARB(Location :: <seetype marker="#i">i()</seetype>, Value :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>uniformMatrix2dv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>uniformMatrix2dv(Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Transpose :: 0 | 1,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value :: [{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Transpose</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>uniformMatrix2fv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>uniformMatrix2fv(Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Transpose :: 0 | 1,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value :: [{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Transpose</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>uniformMatrix2x3dv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>uniformMatrix2x3dv(Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Transpose :: 0 | 1,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value :: [{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Transpose</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>uniformMatrix2x3fv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>uniformMatrix2x3fv(Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Transpose :: 0 | 1,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value :: [{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Transpose</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>uniformMatrix2x4dv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>uniformMatrix2x4dv(Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Transpose :: 0 | 1,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value ::<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>[{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Transpose</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>uniformMatrix2x4fv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>uniformMatrix2x4fv(Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Transpose :: 0 | 1,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value ::<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>[{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Transpose</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>uniformMatrix3dv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>uniformMatrix3dv(Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Transpose :: 0 | 1,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value ::<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>[{<seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>}]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Transpose</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>uniformMatrix3fv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>uniformMatrix3fv(Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Transpose :: 0 | 1,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value ::<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>[{<seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>}]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Transpose</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>uniformMatrix3x2dv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>uniformMatrix3x2dv(Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Transpose :: 0 | 1,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value :: [{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Transpose</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>uniformMatrix3x2fv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>uniformMatrix3x2fv(Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Transpose :: 0 | 1,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value :: [{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Transpose</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>uniformMatrix3x4dv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>uniformMatrix3x4dv(Location, Transpose, Value) -&gt; ok</head>
      <guard>
        <subtype><typename>Location</typename><string>Location = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Transpose</typename><string>Transpose = 0 | 1</string></subtype>
        <subtype><typename>Value</typename><string>Value = <br/><nbsp/><nbsp/><nbsp/><nbsp/>[{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}]</string></subtype>
      </guard></clause>
  </contract>
  <anno>Location</anno>
  <anno>Transpose</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>uniformMatrix3x4fv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>uniformMatrix3x4fv(Location, Transpose, Value) -&gt; ok</head>
      <guard>
        <subtype><typename>Location</typename><string>Location = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Transpose</typename><string>Transpose = 0 | 1</string></subtype>
        <subtype><typename>Value</typename><string>Value = <br/><nbsp/><nbsp/><nbsp/><nbsp/>[{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}]</string></subtype>
      </guard></clause>
  </contract>
  <anno>Location</anno>
  <anno>Transpose</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>uniformMatrix4dv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>uniformMatrix4dv(Location, Transpose, Value) -&gt; ok</head>
      <guard>
        <subtype><typename>Location</typename><string>Location = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Transpose</typename><string>Transpose = 0 | 1</string></subtype>
        <subtype><typename>Value</typename><string>Value = <br/><nbsp/><nbsp/><nbsp/><nbsp/>[{<seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>}]</string></subtype>
      </guard></clause>
  </contract>
  <anno>Location</anno>
  <anno>Transpose</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>uniformMatrix4fv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>uniformMatrix4fv(Location, Transpose, Value) -&gt; ok</head>
      <guard>
        <subtype><typename>Location</typename><string>Location = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Transpose</typename><string>Transpose = 0 | 1</string></subtype>
        <subtype><typename>Value</typename><string>Value = <br/><nbsp/><nbsp/><nbsp/><nbsp/>[{<seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="#f">f()</seetype>}]</string></subtype>
      </guard></clause>
  </contract>
  <anno>Location</anno>
  <anno>Transpose</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>uniformMatrix4x2dv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>uniformMatrix4x2dv(Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Transpose :: 0 | 1,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value ::<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>[{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Transpose</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>uniformMatrix4x2fv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>uniformMatrix4x2fv(Location :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Transpose :: 0 | 1,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value ::<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>[{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Location</anno>
  <anno>Transpose</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>uniformMatrix4x3dv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>uniformMatrix4x3dv(Location, Transpose, Value) -&gt; ok</head>
      <guard>
        <subtype><typename>Location</typename><string>Location = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Transpose</typename><string>Transpose = 0 | 1</string></subtype>
        <subtype><typename>Value</typename><string>Value = <br/><nbsp/><nbsp/><nbsp/><nbsp/>[{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}]</string></subtype>
      </guard></clause>
  </contract>
  <anno>Location</anno>
  <anno>Transpose</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>uniformMatrix4x3fv</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>uniformMatrix4x3fv(Location, Transpose, Value) -&gt; ok</head>
      <guard>
        <subtype><typename>Location</typename><string>Location = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Transpose</typename><string>Transpose = 0 | 1</string></subtype>
        <subtype><typename>Value</typename><string>Value = <br/><nbsp/><nbsp/><nbsp/><nbsp/>[{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}]</string></subtype>
      </guard></clause>
  </contract>
  <anno>Location</anno>
  <anno>Transpose</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>uniformSubroutinesuiv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>uniformSubroutinesuiv(Shadertype :: <seetype marker="#enum">enum()</seetype>, Indices :: [<seetype marker="#i">i()</seetype>]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Indices</anno>
  <anno>Shadertype</anno>
</spec>
<spec>
  <name>useProgram</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>useProgram(Program :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Program</anno>
</spec>
<spec>
  <name>useProgramObjectARB</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>useProgramObjectARB(ProgramObj :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>ProgramObj</anno>
</spec>
<spec>
  <name>useProgramStages</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>useProgramStages(Pipeline :: <seetype marker="#i">i()</seetype>, Stages :: <seetype marker="#i">i()</seetype>, Program :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Pipeline</anno>
  <anno>Program</anno>
  <anno>Stages</anno>
</spec>
<spec>
  <name>validateProgram</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>validateProgram(Program :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Program</anno>
</spec>
<spec>
  <name>validateProgramARB</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>validateProgramARB(ProgramObj :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>ProgramObj</anno>
</spec>
<spec>
  <name>validateProgramPipeline</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>validateProgramPipeline(Pipeline :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Pipeline</anno>
</spec>
<spec>
  <name>vertex2d</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertex2d(X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>vertex2dv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>vertex2dv(X1 :: {X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>X1</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>vertex2f</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertex2f(X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>vertex2fv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>vertex2fv(X1 :: {X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>X1</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>vertex2i</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertex2i(X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>vertex2iv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>vertex2iv(X1 :: {X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>X1</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>vertex2s</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertex2s(X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>vertex2sv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>vertex2sv(X1 :: {X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>X1</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>vertex3d</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>vertex3d(X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>, Z :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>vertex3dv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>vertex3dv(X1 :: {X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>, Z :: <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>X1</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>vertex3f</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>vertex3f(X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>, Z :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>vertex3fv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>vertex3fv(X1 :: {X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>, Z :: <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>X1</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>vertex3i</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>vertex3i(X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>, Z :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>vertex3iv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>vertex3iv(X1 :: {X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>, Z :: <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>X1</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>vertex3s</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>vertex3s(X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>, Z :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>vertex3sv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>vertex3sv(X1 :: {X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>, Z :: <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>X1</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>vertex4d</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>vertex4d(X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>, Z :: <seetype marker="#f">f()</seetype>, W :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>W</anno>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>vertex4dv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>vertex4dv(X1 :: {X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>, Z :: <seetype marker="#f">f()</seetype>, W :: <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>W</anno>
  <anno>X</anno>
  <anno>X1</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>vertex4f</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>vertex4f(X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>, Z :: <seetype marker="#f">f()</seetype>, W :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>W</anno>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>vertex4fv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>vertex4fv(X1 :: {X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>, Z :: <seetype marker="#f">f()</seetype>, W :: <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>W</anno>
  <anno>X</anno>
  <anno>X1</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>vertex4i</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>vertex4i(X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>, Z :: <seetype marker="#i">i()</seetype>, W :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>W</anno>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>vertex4iv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>vertex4iv(X1 :: {X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>, Z :: <seetype marker="#i">i()</seetype>, W :: <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>W</anno>
  <anno>X</anno>
  <anno>X1</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>vertex4s</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>vertex4s(X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>, Z :: <seetype marker="#i">i()</seetype>, W :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>W</anno>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>vertex4sv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>vertex4sv(X1 :: {X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>, Z :: <seetype marker="#i">i()</seetype>, W :: <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>W</anno>
  <anno>X</anno>
  <anno>X1</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>vertexArrayAttribBinding</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>vertexArrayAttribBinding(Vaobj :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Attribindex :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Bindingindex :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Attribindex</anno>
  <anno>Bindingindex</anno>
  <anno>Vaobj</anno>
</spec>
<spec>
  <name>vertexArrayAttribFormat</name>
  <arity>6</arity>
  <contract>
    <clause>
      <head>vertexArrayAttribFormat(Vaobj, Attribindex, Size, Type,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Normalized, Relativeoffset) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Vaobj</typename><string>Vaobj = Attribindex = Size = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Attribindex</typename><string/></subtype>
        <subtype><typename>Size</typename><string/></subtype>
        <subtype><typename>Type</typename><string>Type = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Normalized</typename><string>Normalized = 0 | 1</string></subtype>
        <subtype><typename>Relativeoffset</typename><string>Relativeoffset = <seetype marker="#i">i()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Attribindex</anno>
  <anno>Normalized</anno>
  <anno>Relativeoffset</anno>
  <anno>Size</anno>
  <anno>Type</anno>
  <anno>Vaobj</anno>
</spec>
<spec>
  <name>vertexArrayAttribIFormat</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>vertexArrayAttribIFormat(Vaobj :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Attribindex :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Size :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Type :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Relativeoffset :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Attribindex</anno>
  <anno>Relativeoffset</anno>
  <anno>Size</anno>
  <anno>Type</anno>
  <anno>Vaobj</anno>
</spec>
<spec>
  <name>vertexArrayAttribLFormat</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>vertexArrayAttribLFormat(Vaobj :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Attribindex :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Size :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Type :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Relativeoffset :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Attribindex</anno>
  <anno>Relativeoffset</anno>
  <anno>Size</anno>
  <anno>Type</anno>
  <anno>Vaobj</anno>
</spec>
<spec>
  <name>vertexArrayBindingDivisor</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>vertexArrayBindingDivisor(Vaobj :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Bindingindex :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Divisor :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Bindingindex</anno>
  <anno>Divisor</anno>
  <anno>Vaobj</anno>
</spec>
<spec>
  <name>vertexArrayElementBuffer</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexArrayElementBuffer(Vaobj :: <seetype marker="#i">i()</seetype>, Buffer :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Buffer</anno>
  <anno>Vaobj</anno>
</spec>
<spec>
  <name>vertexArrayVertexBuffer</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>vertexArrayVertexBuffer(Vaobj :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Bindingindex :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Buffer :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Offset :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Stride :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Bindingindex</anno>
  <anno>Buffer</anno>
  <anno>Offset</anno>
  <anno>Stride</anno>
  <anno>Vaobj</anno>
</spec>
<spec>
  <name>vertexArrayVertexBuffers</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>vertexArrayVertexBuffers(Vaobj :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>First :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Buffers :: [<seetype marker="#i">i()</seetype>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Offsets :: [<seetype marker="#i">i()</seetype>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Strides :: [<seetype marker="#i">i()</seetype>]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Buffers</anno>
  <anno>First</anno>
  <anno>Offsets</anno>
  <anno>Strides</anno>
  <anno>Vaobj</anno>
</spec>
<spec>
  <name>vertexAttrib1d</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttrib1d(Index :: <seetype marker="#i">i()</seetype>, X :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>X</anno>
</spec>
<spec>
  <name>vertexAttrib1dv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttrib1dv(Index :: <seetype marker="#i">i()</seetype>, X2 :: {X :: <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>X</anno>
  <anno>X2</anno>
</spec>
<spec>
  <name>vertexAttrib1f</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttrib1f(Index :: <seetype marker="#i">i()</seetype>, X :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>X</anno>
</spec>
<spec>
  <name>vertexAttrib1fv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttrib1fv(Index :: <seetype marker="#i">i()</seetype>, X2 :: {X :: <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>X</anno>
  <anno>X2</anno>
</spec>
<spec>
  <name>vertexAttrib1s</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttrib1s(Index :: <seetype marker="#i">i()</seetype>, X :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>X</anno>
</spec>
<spec>
  <name>vertexAttrib1sv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttrib1sv(Index :: <seetype marker="#i">i()</seetype>, X2 :: {X :: <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>X</anno>
  <anno>X2</anno>
</spec>
<spec>
  <name>vertexAttrib2d</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>vertexAttrib2d(Index :: <seetype marker="#i">i()</seetype>, X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>vertexAttrib2dv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttrib2dv(Index :: <seetype marker="#i">i()</seetype>, X2 :: {X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>X</anno>
  <anno>X2</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>vertexAttrib2f</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>vertexAttrib2f(Index :: <seetype marker="#i">i()</seetype>, X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>vertexAttrib2fv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttrib2fv(Index :: <seetype marker="#i">i()</seetype>, X2 :: {X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>X</anno>
  <anno>X2</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>vertexAttrib2s</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>vertexAttrib2s(Index :: <seetype marker="#i">i()</seetype>, X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>vertexAttrib2sv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttrib2sv(Index :: <seetype marker="#i">i()</seetype>, X2 :: {X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>X</anno>
  <anno>X2</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>vertexAttrib3d</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>vertexAttrib3d(Index :: <seetype marker="#i">i()</seetype>, X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>, Z :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>vertexAttrib3dv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttrib3dv(Index :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X2 :: {X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>, Z :: <seetype marker="#f">f()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>X</anno>
  <anno>X2</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>vertexAttrib3f</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>vertexAttrib3f(Index :: <seetype marker="#i">i()</seetype>, X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>, Z :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>vertexAttrib3fv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttrib3fv(Index :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X2 :: {X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>, Z :: <seetype marker="#f">f()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>X</anno>
  <anno>X2</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>vertexAttrib3s</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>vertexAttrib3s(Index :: <seetype marker="#i">i()</seetype>, X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>, Z :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>vertexAttrib3sv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttrib3sv(Index :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X2 :: {X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>, Z :: <seetype marker="#i">i()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>X</anno>
  <anno>X2</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>vertexAttrib4Nbv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttrib4Nbv(Index :: <seetype marker="#i">i()</seetype>, V :: {<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>V</anno>
</spec>
<spec>
  <name>vertexAttrib4Niv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttrib4Niv(Index :: <seetype marker="#i">i()</seetype>, V :: {<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>V</anno>
</spec>
<spec>
  <name>vertexAttrib4Nsv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttrib4Nsv(Index :: <seetype marker="#i">i()</seetype>, V :: {<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>V</anno>
</spec>
<spec>
  <name>vertexAttrib4Nub</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>vertexAttrib4Nub(Index :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Y :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Z :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>W :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>W</anno>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>vertexAttrib4Nubv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttrib4Nubv(Index :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X2 :: {X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>, Z :: <seetype marker="#i">i()</seetype>, W :: <seetype marker="#i">i()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>W</anno>
  <anno>X</anno>
  <anno>X2</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>vertexAttrib4Nuiv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttrib4Nuiv(Index :: <seetype marker="#i">i()</seetype>, V :: {<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>V</anno>
</spec>
<spec>
  <name>vertexAttrib4Nusv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttrib4Nusv(Index :: <seetype marker="#i">i()</seetype>, V :: {<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>V</anno>
</spec>
<spec>
  <name>vertexAttrib4bv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttrib4bv(Index :: <seetype marker="#i">i()</seetype>, V :: {<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>V</anno>
</spec>
<spec>
  <name>vertexAttrib4d</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>vertexAttrib4d(Index :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Y :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Z :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>W :: <seetype marker="#f">f()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>W</anno>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>vertexAttrib4dv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttrib4dv(Index :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X2 :: {X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>, Z :: <seetype marker="#f">f()</seetype>, W :: <seetype marker="#f">f()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>W</anno>
  <anno>X</anno>
  <anno>X2</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>vertexAttrib4f</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>vertexAttrib4f(Index :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Y :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Z :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>W :: <seetype marker="#f">f()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>W</anno>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>vertexAttrib4fv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttrib4fv(Index :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X2 :: {X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>, Z :: <seetype marker="#f">f()</seetype>, W :: <seetype marker="#f">f()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>W</anno>
  <anno>X</anno>
  <anno>X2</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>vertexAttrib4iv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttrib4iv(Index :: <seetype marker="#i">i()</seetype>, V :: {<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>V</anno>
</spec>
<spec>
  <name>vertexAttrib4s</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>vertexAttrib4s(Index :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Y :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Z :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>W :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>W</anno>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>vertexAttrib4sv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttrib4sv(Index :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X2 :: {X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>, Z :: <seetype marker="#i">i()</seetype>, W :: <seetype marker="#i">i()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>W</anno>
  <anno>X</anno>
  <anno>X2</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>vertexAttrib4ubv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttrib4ubv(Index :: <seetype marker="#i">i()</seetype>, V :: {<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>V</anno>
</spec>
<spec>
  <name>vertexAttrib4uiv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttrib4uiv(Index :: <seetype marker="#i">i()</seetype>, V :: {<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>V</anno>
</spec>
<spec>
  <name>vertexAttrib4usv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttrib4usv(Index :: <seetype marker="#i">i()</seetype>, V :: {<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>V</anno>
</spec>
<spec>
  <name>vertexAttribBinding</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttribBinding(Attribindex :: <seetype marker="#i">i()</seetype>, Bindingindex :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Attribindex</anno>
  <anno>Bindingindex</anno>
</spec>
<spec>
  <name>vertexAttribDivisor</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttribDivisor(Index :: <seetype marker="#i">i()</seetype>, Divisor :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Divisor</anno>
  <anno>Index</anno>
</spec>
<spec>
  <name>vertexAttribFormat</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>vertexAttribFormat(Attribindex :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Size :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Type :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Normalized :: 0 | 1,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Relativeoffset :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Attribindex</anno>
  <anno>Normalized</anno>
  <anno>Relativeoffset</anno>
  <anno>Size</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>vertexAttribI1i</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttribI1i(Index :: <seetype marker="#i">i()</seetype>, X :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>X</anno>
</spec>
<spec>
  <name>vertexAttribI1iv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttribI1iv(Index :: <seetype marker="#i">i()</seetype>, X2 :: {X :: <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>X</anno>
  <anno>X2</anno>
</spec>
<spec>
  <name>vertexAttribI1ui</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttribI1ui(Index :: <seetype marker="#i">i()</seetype>, X :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>X</anno>
</spec>
<spec>
  <name>vertexAttribI1uiv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttribI1uiv(Index :: <seetype marker="#i">i()</seetype>, X2 :: {X :: <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>X</anno>
  <anno>X2</anno>
</spec>
<spec>
  <name>vertexAttribI2i</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>vertexAttribI2i(Index :: <seetype marker="#i">i()</seetype>, X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>vertexAttribI2iv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttribI2iv(Index :: <seetype marker="#i">i()</seetype>, X2 :: {X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>X</anno>
  <anno>X2</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>vertexAttribI2ui</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>vertexAttribI2ui(Index :: <seetype marker="#i">i()</seetype>, X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>vertexAttribI2uiv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttribI2uiv(Index :: <seetype marker="#i">i()</seetype>, X2 :: {X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>X</anno>
  <anno>X2</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>vertexAttribI3i</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>vertexAttribI3i(Index :: <seetype marker="#i">i()</seetype>, X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>, Z :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>vertexAttribI3iv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttribI3iv(Index :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X2 :: {X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>, Z :: <seetype marker="#i">i()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>X</anno>
  <anno>X2</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>vertexAttribI3ui</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>vertexAttribI3ui(Index :: <seetype marker="#i">i()</seetype>, X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>, Z :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>vertexAttribI3uiv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttribI3uiv(Index :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X2 :: {X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>, Z :: <seetype marker="#i">i()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>X</anno>
  <anno>X2</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>vertexAttribI4bv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttribI4bv(Index :: <seetype marker="#i">i()</seetype>, V :: {<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>V</anno>
</spec>
<spec>
  <name>vertexAttribI4i</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>vertexAttribI4i(Index :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Y :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Z :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>W :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>W</anno>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>vertexAttribI4iv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttribI4iv(Index :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X2 :: {X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>, Z :: <seetype marker="#i">i()</seetype>, W :: <seetype marker="#i">i()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>W</anno>
  <anno>X</anno>
  <anno>X2</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>vertexAttribI4sv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttribI4sv(Index :: <seetype marker="#i">i()</seetype>, V :: {<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>V</anno>
</spec>
<spec>
  <name>vertexAttribI4ubv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttribI4ubv(Index :: <seetype marker="#i">i()</seetype>, V :: {<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>V</anno>
</spec>
<spec>
  <name>vertexAttribI4ui</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>vertexAttribI4ui(Index :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Y :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Z :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>W :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>W</anno>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>vertexAttribI4uiv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttribI4uiv(Index :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X2 :: {X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>, Z :: <seetype marker="#i">i()</seetype>, W :: <seetype marker="#i">i()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>W</anno>
  <anno>X</anno>
  <anno>X2</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>vertexAttribI4usv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttribI4usv(Index :: <seetype marker="#i">i()</seetype>, V :: {<seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>, <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>V</anno>
</spec>
<spec>
  <name>vertexAttribIFormat</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>vertexAttribIFormat(Attribindex :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Size :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Type :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Relativeoffset :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Attribindex</anno>
  <anno>Relativeoffset</anno>
  <anno>Size</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>vertexAttribIPointer</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>vertexAttribIPointer(Index :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Size :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Type :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Stride :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Pointer :: <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>Pointer</anno>
  <anno>Size</anno>
  <anno>Stride</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>vertexAttribL1d</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttribL1d(Index :: <seetype marker="#i">i()</seetype>, X :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>X</anno>
</spec>
<spec>
  <name>vertexAttribL1dv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttribL1dv(Index :: <seetype marker="#i">i()</seetype>, X2 :: {X :: <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>X</anno>
  <anno>X2</anno>
</spec>
<spec>
  <name>vertexAttribL2d</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>vertexAttribL2d(Index :: <seetype marker="#i">i()</seetype>, X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>vertexAttribL2dv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttribL2dv(Index :: <seetype marker="#i">i()</seetype>, X2 :: {X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>X</anno>
  <anno>X2</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>vertexAttribL3d</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>vertexAttribL3d(Index :: <seetype marker="#i">i()</seetype>, X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>, Z :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>vertexAttribL3dv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttribL3dv(Index :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X2 :: {X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>, Z :: <seetype marker="#f">f()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>X</anno>
  <anno>X2</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>vertexAttribL4d</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>vertexAttribL4d(Index :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Y :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Z :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>W :: <seetype marker="#f">f()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>W</anno>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>vertexAttribL4dv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexAttribL4dv(Index :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X2 :: {X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>, Z :: <seetype marker="#f">f()</seetype>, W :: <seetype marker="#f">f()</seetype>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>W</anno>
  <anno>X</anno>
  <anno>X2</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>vertexAttribLFormat</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>vertexAttribLFormat(Attribindex :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Size :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Type :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Relativeoffset :: <seetype marker="#i">i()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Attribindex</anno>
  <anno>Relativeoffset</anno>
  <anno>Size</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>vertexAttribLPointer</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>vertexAttribLPointer(Index :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Size :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Type :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Stride :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Pointer :: <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>Pointer</anno>
  <anno>Size</anno>
  <anno>Stride</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>vertexAttribPointer</name>
  <arity>6</arity>
  <contract>
    <clause>
      <head>vertexAttribPointer(Index, Size, Type, Normalized, Stride,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Pointer) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>Index</typename><string>Index = Size = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Size</typename><string/></subtype>
        <subtype><typename>Type</typename><string>Type = <seetype marker="#enum">enum()</seetype></string></subtype>
        <subtype><typename>Normalized</typename><string>Normalized = 0 | 1</string></subtype>
        <subtype><typename>Stride</typename><string>Stride = <seetype marker="#i">i()</seetype></string></subtype>
        <subtype><typename>Pointer</typename><string>Pointer = <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Index</anno>
  <anno>Normalized</anno>
  <anno>Pointer</anno>
  <anno>Size</anno>
  <anno>Stride</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>vertexBindingDivisor</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>vertexBindingDivisor(Bindingindex :: <seetype marker="#i">i()</seetype>, Divisor :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Bindingindex</anno>
  <anno>Divisor</anno>
</spec>
<spec>
  <name>vertexBlendARB</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>vertexBlendARB(Count :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Count</anno>
</spec>
<spec>
  <name>vertexPointer</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>vertexPointer(Size :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Type :: <seetype marker="#enum">enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Stride :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Ptr :: <seetype marker="#offset">offset()</seetype> | <seetype marker="#mem">mem()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Ptr</anno>
  <anno>Size</anno>
  <anno>Stride</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>viewport</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>viewport(X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>, Width :: <seetype marker="#i">i()</seetype>, Height :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Height</anno>
  <anno>Width</anno>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>viewportArrayv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>viewportArrayv(First :: <seetype marker="#i">i()</seetype>, V :: [{<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}]) -&gt; ok</head></clause>
  </contract>
  <anno>First</anno>
  <anno>V</anno>
</spec>
<spec>
  <name>viewportIndexedf</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>viewportIndexedf(Index :: <seetype marker="#i">i()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Y :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>W :: <seetype marker="#f">f()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>H :: <seetype marker="#f">f()</seetype>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>H</anno>
  <anno>Index</anno>
  <anno>W</anno>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>viewportIndexedfv</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>viewportIndexedfv(Index :: <seetype marker="#i">i()</seetype>, V :: {<seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>, <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>Index</anno>
  <anno>V</anno>
</spec>
<spec>
  <name>waitSync</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>waitSync(Sync :: <seetype marker="#i">i()</seetype>, Flags :: <seetype marker="#i">i()</seetype>, Timeout :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>Flags</anno>
  <anno>Sync</anno>
  <anno>Timeout</anno>
</spec>
<spec>
  <name>weightbvARB</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>weightbvARB(Weights :: [<seetype marker="#i">i()</seetype>]) -&gt; ok</head></clause>
  </contract>
  <anno>Weights</anno>
</spec>
<spec>
  <name>weightdvARB</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>weightdvARB(Weights :: [<seetype marker="#f">f()</seetype>]) -&gt; ok</head></clause>
  </contract>
  <anno>Weights</anno>
</spec>
<spec>
  <name>weightfvARB</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>weightfvARB(Weights :: [<seetype marker="#f">f()</seetype>]) -&gt; ok</head></clause>
  </contract>
  <anno>Weights</anno>
</spec>
<spec>
  <name>weightivARB</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>weightivARB(Weights :: [<seetype marker="#i">i()</seetype>]) -&gt; ok</head></clause>
  </contract>
  <anno>Weights</anno>
</spec>
<spec>
  <name>weightsvARB</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>weightsvARB(Weights :: [<seetype marker="#i">i()</seetype>]) -&gt; ok</head></clause>
  </contract>
  <anno>Weights</anno>
</spec>
<spec>
  <name>weightubvARB</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>weightubvARB(Weights :: [<seetype marker="#i">i()</seetype>]) -&gt; ok</head></clause>
  </contract>
  <anno>Weights</anno>
</spec>
<spec>
  <name>weightuivARB</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>weightuivARB(Weights :: [<seetype marker="#i">i()</seetype>]) -&gt; ok</head></clause>
  </contract>
  <anno>Weights</anno>
</spec>
<spec>
  <name>weightusvARB</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>weightusvARB(Weights :: [<seetype marker="#i">i()</seetype>]) -&gt; ok</head></clause>
  </contract>
  <anno>Weights</anno>
</spec>
<spec>
  <name>windowPos2d</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>windowPos2d(X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>windowPos2dv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>windowPos2dv(X1 :: {X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>X1</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>windowPos2f</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>windowPos2f(X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>windowPos2fv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>windowPos2fv(X1 :: {X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>X1</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>windowPos2i</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>windowPos2i(X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>windowPos2iv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>windowPos2iv(X1 :: {X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>X1</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>windowPos2s</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>windowPos2s(X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>windowPos2sv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>windowPos2sv(X1 :: {X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>X1</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>windowPos3d</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>windowPos3d(X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>, Z :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>windowPos3dv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>windowPos3dv(X1 :: {X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>, Z :: <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>X1</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>windowPos3f</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>windowPos3f(X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>, Z :: <seetype marker="#f">f()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>windowPos3fv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>windowPos3fv(X1 :: {X :: <seetype marker="#f">f()</seetype>, Y :: <seetype marker="#f">f()</seetype>, Z :: <seetype marker="#f">f()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>X1</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>windowPos3i</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>windowPos3i(X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>, Z :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>windowPos3iv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>windowPos3iv(X1 :: {X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>, Z :: <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>X1</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>windowPos3s</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>windowPos3s(X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>, Z :: <seetype marker="#i">i()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<spec>
  <name>windowPos3sv</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>windowPos3sv(X1 :: {X :: <seetype marker="#i">i()</seetype>, Y :: <seetype marker="#i">i()</seetype>, Z :: <seetype marker="#i">i()</seetype>}) -&gt; ok</head></clause>
  </contract>
  <anno>X</anno>
  <anno>X1</anno>
  <anno>Y</anno>
  <anno>Z</anno>
</spec>
<timestamp>Generated by EDoc, May 17 2022, 21:44:49.</timestamp>
</module>