<module name="wxStyledTextCtrl">
<type>
  <name>wxStyledTextCtrl</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-wxStyledTextCtrl">wxStyledTextCtrl()</marker> = <seetype marker="wx#wx_object">wx:wx_object()</seetype></typehead></typedecl>
</type>
<spec>
  <name>addText</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>addText(This, Text) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Text</typename><string>Text = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Text</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>addTextRaw</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>addTextRaw(This, Text) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Text</typename><string>Text = <seetype marker="erlang#binary">binary()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Text</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>addTextRaw</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>addTextRaw(This, Text, Options :: [Option]) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Text</typename><string>Text = <seetype marker="erlang#binary">binary()</seetype></string></subtype>
        <subtype><typename>Option</typename><string>Option = {length, <seetype marker="erlang#integer">integer()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>Option</anno>
  <anno>Options</anno>
  <anno>Text</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>allocate</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>allocate(This, Bytes) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Bytes</typename><string>Bytes = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Bytes</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>appendText</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>appendText(This, Text) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Text</typename><string>Text = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Text</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>appendTextRaw</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>appendTextRaw(This, Text) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Text</typename><string>Text = <seetype marker="erlang#binary">binary()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Text</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>appendTextRaw</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>appendTextRaw(This, Text, Options :: [Option]) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Text</typename><string>Text = <seetype marker="erlang#binary">binary()</seetype></string></subtype>
        <subtype><typename>Option</typename><string>Option = {length, <seetype marker="erlang#integer">integer()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>Option</anno>
  <anno>Options</anno>
  <anno>Text</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>autoCompActive</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>autoCompActive(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>autoCompCancel</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>autoCompCancel(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>autoCompComplete</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>autoCompComplete(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>autoCompGetAutoHide</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>autoCompGetAutoHide(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>autoCompGetCancelAtStart</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>autoCompGetCancelAtStart(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>autoCompGetChooseSingle</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>autoCompGetChooseSingle(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>autoCompGetCurrent</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>autoCompGetCurrent(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>autoCompGetDropRestOfWord</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>autoCompGetDropRestOfWord(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>autoCompGetIgnoreCase</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>autoCompGetIgnoreCase(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>autoCompGetMaxHeight</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>autoCompGetMaxHeight(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>autoCompGetMaxWidth</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>autoCompGetMaxWidth(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>autoCompGetSeparator</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>autoCompGetSeparator(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>autoCompGetTypeSeparator</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>autoCompGetTypeSeparator(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>autoCompPosStart</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>autoCompPosStart(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>autoCompSelect</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>autoCompSelect(This, Select) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Select</typename><string>Select = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Select</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>autoCompSetAutoHide</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>autoCompSetAutoHide(This, AutoHide) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>AutoHide</typename><string>AutoHide = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>AutoHide</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>autoCompSetCancelAtStart</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>autoCompSetCancelAtStart(This, Cancel) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Cancel</typename><string>Cancel = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Cancel</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>autoCompSetChooseSingle</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>autoCompSetChooseSingle(This, ChooseSingle) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>ChooseSingle</typename><string>ChooseSingle = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>ChooseSingle</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>autoCompSetDropRestOfWord</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>autoCompSetDropRestOfWord(This, DropRestOfWord) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>DropRestOfWord</typename><string>DropRestOfWord = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>DropRestOfWord</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>autoCompSetFillUps</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>autoCompSetFillUps(This, CharacterSet) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>CharacterSet</typename><string>CharacterSet = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>CharacterSet</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>autoCompSetIgnoreCase</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>autoCompSetIgnoreCase(This, IgnoreCase) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>IgnoreCase</typename><string>IgnoreCase = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>IgnoreCase</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>autoCompSetMaxHeight</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>autoCompSetMaxHeight(This, RowCount) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>RowCount</typename><string>RowCount = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>RowCount</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>autoCompSetMaxWidth</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>autoCompSetMaxWidth(This, CharacterCount) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>CharacterCount</typename><string>CharacterCount = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>CharacterCount</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>autoCompSetSeparator</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>autoCompSetSeparator(This, SeparatorCharacter) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>SeparatorCharacter</typename><string>SeparatorCharacter = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>SeparatorCharacter</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>autoCompSetTypeSeparator</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>autoCompSetTypeSeparator(This, SeparatorCharacter) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>SeparatorCharacter</typename><string>SeparatorCharacter = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>SeparatorCharacter</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>autoCompShow</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>autoCompShow(This, LengthEntered, ItemList) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>LengthEntered</typename><string>LengthEntered = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>ItemList</typename><string>ItemList = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>ItemList</anno>
  <anno>LengthEntered</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>autoCompStops</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>autoCompStops(This, CharacterSet) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>CharacterSet</typename><string>CharacterSet = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>CharacterSet</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>backTab</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>backTab(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>beginUndoAction</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>beginUndoAction(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>braceBadLight</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>braceBadLight(This, Pos) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Pos</typename><string>Pos = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Pos</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>braceHighlight</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>braceHighlight(This, PosA, PosB) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>PosA</typename><string>PosA = PosB = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>PosB</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>PosA</anno>
  <anno>PosB</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>braceMatch</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>braceMatch(This, Pos) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Pos</typename><string>Pos = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Pos</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>cacheBestSize</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>callTipActive</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>callTipActive(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>callTipCancel</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>callTipCancel(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>callTipPosAtStart</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>callTipPosAtStart(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>callTipSetBackground</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>callTipSetBackground(This, Back) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Back</typename><string>Back = <seetype marker="wx#wx_colour">wx:wx_colour()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Back</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>callTipSetForeground</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>callTipSetForeground(This, Fore) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Fore</typename><string>Fore = <seetype marker="wx#wx_colour">wx:wx_colour()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Fore</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>callTipSetForegroundHighlight</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>callTipSetForegroundHighlight(This, Fore) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Fore</typename><string>Fore = <seetype marker="wx#wx_colour">wx:wx_colour()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Fore</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>callTipSetHighlight</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>callTipSetHighlight(This, HighlightStart, HighlightEnd) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>HighlightStart</typename><string>HighlightStart = HighlightEnd = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>HighlightEnd</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>HighlightEnd</anno>
  <anno>HighlightStart</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>callTipShow</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>callTipShow(This, Pos, Definition) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Pos</typename><string>Pos = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Definition</typename><string>Definition = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Definition</anno>
  <anno>Pos</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>callTipUseStyle</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>callTipUseStyle(This, TabSize) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>TabSize</typename><string>TabSize = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>TabSize</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>canPaste</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>canPaste(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>canRedo</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>canRedo(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>canSetTransparent</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>canUndo</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>canUndo(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>cancel</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>cancel(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>captureMouse</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>center</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>center</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>centerOnParent</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>centerOnParent</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>centre</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>centre</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>centreOnParent</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>centreOnParent</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>charLeft</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>charLeft(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>charLeftExtend</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>charLeftExtend(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>charLeftRectExtend</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>charLeftRectExtend(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>charRight</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>charRight(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>charRightExtend</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>charRightExtend(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>charRightRectExtend</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>charRightRectExtend(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>chooseCaretX</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>chooseCaretX(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>clear</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>clear(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>clearAll</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>clearAll(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>clearBackground</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>clearDocumentStyle</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>clearDocumentStyle(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>clearRegisteredImages</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>clearRegisteredImages(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>clientToScreen</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>clientToScreen</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>close</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>close</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>cmdKeyAssign</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>cmdKeyAssign(This, Key, Modifiers, Cmd) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Key</typename><string>Key = Modifiers = Cmd = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Modifiers</typename><string></string></subtype>
        <subtype><typename>Cmd</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Cmd</anno>
  <anno>Key</anno>
  <anno>Modifiers</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>cmdKeyClear</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>cmdKeyClear(This, Key, Modifiers) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Key</typename><string>Key = Modifiers = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Modifiers</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Key</anno>
  <anno>Modifiers</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>cmdKeyClearAll</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>cmdKeyClearAll(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>cmdKeyExecute</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>cmdKeyExecute(This, Cmd) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Cmd</typename><string>Cmd = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Cmd</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>colourise</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>colourise(This, Start, End) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Start</typename><string>Start = End = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>End</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>End</anno>
  <anno>Start</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>connect</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>connect</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>convertDialogToPixels</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>convertEOLs</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>convertEOLs(This, EolMode) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>EolMode</typename><string>EolMode = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>EolMode</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>convertPixelsToDialog</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>copy</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>copy(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>copyRange</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>copyRange(This, Start, End) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Start</typename><string>Start = End = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>End</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>End</anno>
  <anno>Start</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>copyText</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>copyText(This, Length, Text) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Length</typename><string>Length = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Text</typename><string>Text = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Length</anno>
  <anno>Text</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>create</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>create(This, Parent) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Parent</typename><string>Parent = <seetype marker="wxWindow#wxWindow">wxWindow:wxWindow()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Parent</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>create</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>create(This, Parent, Options :: [Option]) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Parent</typename><string>Parent = <seetype marker="wxWindow#wxWindow">wxWindow:wxWindow()</seetype></string></subtype>
        <subtype><typename>Option</typename><string>Option = <br/><nbsp/><nbsp/><nbsp/><nbsp/>{id, <seetype marker="erlang#integer">integer()</seetype>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{pos, {X :: <seetype marker="erlang#integer">integer()</seetype>, Y :: <seetype marker="erlang#integer">integer()</seetype>}} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{size, {W :: <seetype marker="erlang#integer">integer()</seetype>, H :: <seetype marker="erlang#integer">integer()</seetype>}} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{style, <seetype marker="erlang#integer">integer()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>H</anno>
  <anno>Option</anno>
  <anno>Options</anno>
  <anno>Parent</anno>
  <anno>This</anno>
  <anno>W</anno>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>cut</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>cut(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>delLineLeft</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>delLineLeft(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>delLineRight</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>delLineRight(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>delWordLeft</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>delWordLeft(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>delWordRight</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>delWordRight(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>deleteBack</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>deleteBack(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>deleteBackNotLine</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>deleteBackNotLine(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>destroy</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>destroy(This :: <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>destroyChildren</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>disable</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>disconnect</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>disconnect</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>disconnect</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>doDragOver</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>doDragOver(This, X, Y, DefaultRes) -&gt; <seetype marker="wx#wx_enum">wx:wx_enum()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>X</typename><string>X = Y = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Y</typename><string/></subtype>
        <subtype><typename>DefaultRes</typename><string>DefaultRes = <seetype marker="wx#wx_enum">wx:wx_enum()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>DefaultRes</anno>
  <anno>This</anno>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>doDropText</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>doDropText(This, X, Y, Data) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>X</typename><string>X = Y = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Y</typename><string/></subtype>
        <subtype><typename>Data</typename><string>Data = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Data</anno>
  <anno>This</anno>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>docLineFromVisible</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>docLineFromVisible(This, DisplayLine) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>DisplayLine</typename><string>DisplayLine = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>DisplayLine</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>documentEnd</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>documentEnd(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>documentEndExtend</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>documentEndExtend(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>documentStart</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>documentStart(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>documentStartExtend</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>documentStartExtend(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>dragAcceptFiles</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>editToggleOvertype</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>editToggleOvertype(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>emptyUndoBuffer</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>emptyUndoBuffer(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>enable</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>enable</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>endUndoAction</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>endUndoAction(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>ensureCaretVisible</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>ensureCaretVisible(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>ensureVisible</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>ensureVisible(This, Line) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Line</typename><string>Line = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Line</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>ensureVisibleEnforcePolicy</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>ensureVisibleEnforcePolicy(This, Line) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Line</typename><string>Line = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Line</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>findColumn</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>findColumn(This, Line, Column) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Line</typename><string>Line = Column = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Column</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Column</anno>
  <anno>Line</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>findText</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>findText(This, MinPos, MaxPos, Text) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>MinPos</typename><string>MinPos = MaxPos = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>MaxPos</typename><string/></subtype>
        <subtype><typename>Text</typename><string>Text = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>MaxPos</anno>
  <anno>MinPos</anno>
  <anno>Text</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>findText</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>findText(This, MinPos, MaxPos, Text, Options :: [Option]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>MinPos</typename><string>MinPos = MaxPos = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>MaxPos</typename><string/></subtype>
        <subtype><typename>Text</typename><string>Text = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
        <subtype><typename>Option</typename><string>Option = {flags, <seetype marker="erlang#integer">integer()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>MaxPos</anno>
  <anno>MinPos</anno>
  <anno>Option</anno>
  <anno>Options</anno>
  <anno>Text</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>findWindow</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>fit</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>fitInside</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>formFeed</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>formFeed(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>formatRange</name>
  <arity>8</arity>
  <contract>
    <clause>
      <head>formatRange(This, DoDraw, StartPos, EndPos, Draw, Target,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>RenderRect, PageRect) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>DoDraw</typename><string>DoDraw = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
        <subtype><typename>StartPos</typename><string>StartPos = EndPos = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>EndPos</typename><string/></subtype>
        <subtype><typename>Draw</typename><string>Draw = Target = <seetype marker="wxDC#wxDC">wxDC:wxDC()</seetype></string></subtype>
        <subtype><typename>Target</typename><string/></subtype>
        <subtype><typename>RenderRect</typename><string>RenderRect = PageRect = <br/><nbsp/><nbsp/><nbsp/><nbsp/>{X :: <seetype marker="erlang#integer">integer()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Y :: <seetype marker="erlang#integer">integer()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>W :: <seetype marker="erlang#integer">integer()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>H :: <seetype marker="erlang#integer">integer()</seetype>}</string></subtype>
        <subtype><typename>PageRect</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>DoDraw</anno>
  <anno>Draw</anno>
  <anno>EndPos</anno>
  <anno>H</anno>
  <anno>PageRect</anno>
  <anno>RenderRect</anno>
  <anno>StartPos</anno>
  <anno>Target</anno>
  <anno>This</anno>
  <anno>W</anno>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>freeze</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getAcceleratorTable</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getAnchor</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getAnchor(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getBackSpaceUnIndents</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getBackSpaceUnIndents(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getBackgroundColour</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getBackgroundStyle</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getBestSize</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getBufferedDraw</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getBufferedDraw(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getCaret</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getCaretForeground</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getCaretForeground(This) -&gt; <seetype marker="wx#wx_colour4">wx:wx_colour4()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getCaretLineBackAlpha</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getCaretLineBackAlpha(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getCaretLineBackground</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getCaretLineBackground(This) -&gt; <seetype marker="wx#wx_colour4">wx:wx_colour4()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getCaretLineVisible</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getCaretLineVisible(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getCaretPeriod</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getCaretPeriod(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getCaretSticky</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getCaretSticky(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getCaretWidth</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getCaretWidth(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getCharAt</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getCharAt(This, Pos) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Pos</typename><string>Pos = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Pos</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>getCharHeight</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getCharWidth</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getChildren</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getClientSize</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getCodePage</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getCodePage(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getColumn</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getColumn(This, Pos) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Pos</typename><string>Pos = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Pos</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>getContainingSizer</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getContentScaleFactor</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getControlCharSymbol</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getControlCharSymbol(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getCurLine</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getCurLine(This) -&gt; Result</head>
      <guard>
        <subtype><typename>Result</typename><string>Result = {Res :: <seetype marker="unicode#charlist">unicode:charlist()</seetype>, LinePos :: <seetype marker="erlang#integer">integer()</seetype>}</string></subtype>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>LinePos</anno>
  <anno>Res</anno>
  <anno>Result</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>getCurLineRaw</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getCurLineRaw(This) -&gt; Result</head>
      <guard>
        <subtype><typename>Result</typename><string>Result = {Res :: <seetype marker="erlang#binary">binary()</seetype>, LinePos :: <seetype marker="erlang#integer">integer()</seetype>}</string></subtype>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>LinePos</anno>
  <anno>Res</anno>
  <anno>Result</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>getCurrentLine</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getCurrentLine(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getCurrentPos</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getCurrentPos(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getCursor</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getDPI</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getDPIScaleFactor</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getDropTarget</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getEOLMode</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getEOLMode(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getEdgeColour</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getEdgeColour(This) -&gt; <seetype marker="wx#wx_colour4">wx:wx_colour4()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getEdgeColumn</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getEdgeColumn(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getEdgeMode</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getEdgeMode(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getEndAtLastLine</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getEndAtLastLine(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getEndStyled</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getEndStyled(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getExtraStyle</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getFirstVisibleLine</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getFirstVisibleLine(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getFoldExpanded</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getFoldExpanded(This, Line) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Line</typename><string>Line = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Line</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>getFoldLevel</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getFoldLevel(This, Line) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Line</typename><string>Line = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Line</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>getFoldParent</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getFoldParent(This, Line) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Line</typename><string>Line = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Line</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>getFont</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getForegroundColour</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getGrandParent</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getHandle</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getHelpText</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getHighlightGuide</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getHighlightGuide(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getId</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getIndent</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getIndent(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getIndentationGuides</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getIndentationGuides(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getLabel</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getLastChild</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>getLastChild(This, Line, Level) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Line</typename><string>Line = Level = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Level</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Level</anno>
  <anno>Line</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>getLastKeydownProcessed</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getLastKeydownProcessed(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getLayoutCache</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getLayoutCache(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getLength</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getLength(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getLexer</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getLexer(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getLine</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getLine(This, Line) -&gt; <seetype marker="unicode#charlist">unicode:charlist()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Line</typename><string>Line = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Line</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>getLineCount</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getLineCount(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getLineEndPosition</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getLineEndPosition(This, Line) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Line</typename><string>Line = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Line</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>getLineIndentPosition</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getLineIndentPosition(This, Line) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Line</typename><string>Line = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Line</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>getLineIndentation</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getLineIndentation(This, Line) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Line</typename><string>Line = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Line</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>getLineRaw</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getLineRaw(This, Line) -&gt; <seetype marker="erlang#binary">binary()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Line</typename><string>Line = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Line</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>getLineState</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getLineState(This, Line) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Line</typename><string>Line = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Line</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>getLineVisible</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getLineVisible(This, Line) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Line</typename><string>Line = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Line</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>getMarginLeft</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getMarginLeft(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getMarginMask</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getMarginMask(This, Margin) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Margin</typename><string>Margin = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Margin</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>getMarginRight</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getMarginRight(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getMarginSensitive</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getMarginSensitive(This, Margin) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Margin</typename><string>Margin = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Margin</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>getMarginType</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getMarginType(This, Margin) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Margin</typename><string>Margin = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Margin</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>getMarginWidth</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getMarginWidth(This, Margin) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Margin</typename><string>Margin = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Margin</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>getMaxLineState</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getMaxLineState(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getMaxSize</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getMinSize</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getModEventMask</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getModEventMask(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getModify</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getModify(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getMouseDownCaptures</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getMouseDownCaptures(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getMouseDwellTime</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getMouseDwellTime(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getName</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getOvertype</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getOvertype(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getParent</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getPasteConvertEndings</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getPasteConvertEndings(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getPosition</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getPrintColourMode</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getPrintColourMode(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getPrintMagnification</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getPrintMagnification(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getPrintWrapMode</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getPrintWrapMode(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getProperty</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getProperty(This, Key) -&gt; <seetype marker="unicode#charlist">unicode:charlist()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Key</typename><string>Key = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Key</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>getReadOnly</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getReadOnly(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getRect</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getSTCCursor</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getSTCCursor(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getSTCFocus</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getSTCFocus(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getScreenPosition</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getScreenRect</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getScrollPos</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>getScrollRange</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>getScrollThumb</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>getScrollWidth</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getScrollWidth(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getSearchFlags</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getSearchFlags(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getSelAlpha</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getSelAlpha(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getSelectedText</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getSelectedText(This) -&gt; <seetype marker="unicode#charlist">unicode:charlist()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getSelectedTextRaw</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getSelectedTextRaw(This) -&gt; <seetype marker="erlang#binary">binary()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getSelection</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getSelection(This) -&gt; {From :: <seetype marker="erlang#integer">integer()</seetype>, To :: <seetype marker="erlang#integer">integer()</seetype>}</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>From</anno>
  <anno>This</anno>
  <anno>To</anno>
</spec>
<spec>
  <name>getSelectionEnd</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getSelectionEnd(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getSelectionMode</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getSelectionMode(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getSelectionStart</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getSelectionStart(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getSize</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getSizer</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getStatus</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getStatus(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getStyleAt</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getStyleAt(This, Pos) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Pos</typename><string>Pos = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Pos</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>getStyleBits</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getStyleBits(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getStyleBitsNeeded</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getStyleBitsNeeded(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getTabIndents</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getTabIndents(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getTabWidth</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getTabWidth(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getTargetEnd</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getTargetEnd(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getTargetStart</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getTargetStart(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getText</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getText(This) -&gt; <seetype marker="unicode#charlist">unicode:charlist()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getTextExtent</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>getTextExtent</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>getTextLength</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getTextLength(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getTextRange</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>getTextRange(This, StartPos, EndPos) -&gt; <seetype marker="unicode#charlist">unicode:charlist()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>StartPos</typename><string>StartPos = EndPos = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>EndPos</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>EndPos</anno>
  <anno>StartPos</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>getTextRangeRaw</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>getTextRangeRaw(This, StartPos, EndPos) -&gt; <seetype marker="erlang#binary">binary()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>StartPos</typename><string>StartPos = EndPos = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>EndPos</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>EndPos</anno>
  <anno>StartPos</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>getTextRaw</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getTextRaw(This) -&gt; <seetype marker="erlang#binary">binary()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getThemeEnabled</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getToolTip</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getTwoPhaseDraw</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getTwoPhaseDraw(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getUndoCollection</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getUndoCollection(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getUpdateRegion</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getUseAntiAliasing</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getUseAntiAliasing(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getUseHorizontalScrollBar</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getUseHorizontalScrollBar(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getUseTabs</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getUseTabs(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getUseVerticalScrollBar</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getUseVerticalScrollBar(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getViewEOL</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getViewEOL(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getViewWhiteSpace</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getViewWhiteSpace(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getVirtualSize</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getWindowStyleFlag</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getWindowVariant</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getWrapMode</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getWrapMode(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getWrapStartIndent</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getWrapStartIndent(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getWrapVisualFlags</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getWrapVisualFlags(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getWrapVisualFlagsLocation</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getWrapVisualFlagsLocation(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getXOffset</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getXOffset(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getZoom</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getZoom(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>gotoLine</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>gotoLine(This, Line) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Line</typename><string>Line = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Line</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>gotoPos</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>gotoPos(This, Caret) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Caret</typename><string>Caret = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Caret</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>hasCapture</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>hasScrollbar</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>hasTransparentBackground</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>hide</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>hideLines</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>hideLines(This, LineStart, LineEnd) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>LineStart</typename><string>LineStart = LineEnd = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>LineEnd</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>LineEnd</anno>
  <anno>LineStart</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>hideSelection</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>hideSelection(This, Hide) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Hide</typename><string>Hide = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Hide</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>home</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>home(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>homeDisplay</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>homeDisplay(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>homeDisplayExtend</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>homeDisplayExtend(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>homeExtend</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>homeExtend(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>homeRectExtend</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>homeRectExtend(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>homeWrapExtend</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>homeWrapExtend(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>indicatorGetForeground</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>indicatorGetForeground(This, Indicator) -&gt; <seetype marker="wx#wx_colour4">wx:wx_colour4()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Indicator</typename><string>Indicator = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Indicator</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>indicatorGetStyle</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>indicatorGetStyle(This, Indicator) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Indicator</typename><string>Indicator = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Indicator</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>indicatorSetForeground</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>indicatorSetForeground(This, Indicator, Fore) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Indicator</typename><string>Indicator = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Fore</typename><string>Fore = <seetype marker="wx#wx_colour">wx:wx_colour()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Fore</anno>
  <anno>Indicator</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>indicatorSetStyle</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>indicatorSetStyle(This, Indicator, IndicatorStyle) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Indicator</typename><string>Indicator = IndicatorStyle = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>IndicatorStyle</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Indicator</anno>
  <anno>IndicatorStyle</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>inheritAttributes</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>initDialog</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>insertText</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>insertText(This, Pos, Text) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Pos</typename><string>Pos = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Text</typename><string>Text = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Pos</anno>
  <anno>Text</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>insertTextRaw</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>insertTextRaw(This, Pos, Text) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Pos</typename><string>Pos = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Text</typename><string>Text = <seetype marker="erlang#binary">binary()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Pos</anno>
  <anno>Text</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>invalidateBestSize</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>isDoubleBuffered</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>isEnabled</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>isExposed</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>isExposed</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>isExposed</name>
  <arity>5</arity>
  <contract/>
</spec>
<spec>
  <name>isFrozen</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>isRetained</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>isShown</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>isShownOnScreen</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>isTopLevel</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>layout</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>lineCopy</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>lineCopy(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>lineCut</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>lineCut(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>lineDelete</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>lineDelete(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>lineDown</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>lineDown(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>lineDownExtend</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>lineDownExtend(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>lineDownRectExtend</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>lineDownRectExtend(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>lineDuplicate</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>lineDuplicate(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>lineEnd</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>lineEnd(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>lineEndDisplay</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>lineEndDisplay(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>lineEndDisplayExtend</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>lineEndDisplayExtend(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>lineEndExtend</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>lineEndExtend(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>lineEndRectExtend</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>lineEndRectExtend(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>lineEndWrap</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>lineEndWrap(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>lineEndWrapExtend</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>lineEndWrapExtend(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>lineFromPosition</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>lineFromPosition(This, Pos) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Pos</typename><string>Pos = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Pos</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>lineLength</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>lineLength(This, Line) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Line</typename><string>Line = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Line</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>lineScroll</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>lineScroll(This, Columns, Lines) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Columns</typename><string>Columns = Lines = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Lines</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Columns</anno>
  <anno>Lines</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>lineScrollDown</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>lineScrollDown(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>lineScrollUp</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>lineScrollUp(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>lineTranspose</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>lineTranspose(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>lineUp</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>lineUp(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>lineUpExtend</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>lineUpExtend(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>lineUpRectExtend</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>lineUpRectExtend(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>linesJoin</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>linesJoin(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>linesOnScreen</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>linesOnScreen(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>linesSplit</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>linesSplit(This, PixelWidth) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>PixelWidth</typename><string>PixelWidth = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>PixelWidth</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>loadFile</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>loadFile(This, Filename) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Filename</typename><string>Filename = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Filename</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>lower</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>lowerCase</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>lowerCase(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>markerAdd</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>markerAdd(This, Line, MarkerNumber) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Line</typename><string>Line = MarkerNumber = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>MarkerNumber</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Line</anno>
  <anno>MarkerNumber</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>markerAddSet</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>markerAddSet(This, Line, MarkerSet) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Line</typename><string>Line = MarkerSet = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>MarkerSet</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Line</anno>
  <anno>MarkerSet</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>markerDefine</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>markerDefine(This, MarkerNumber, MarkerSymbol) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>MarkerNumber</typename><string>MarkerNumber = MarkerSymbol = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>MarkerSymbol</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>MarkerNumber</anno>
  <anno>MarkerSymbol</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>markerDefine</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>markerDefine(This, MarkerNumber, MarkerSymbol,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Options :: [Option]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>MarkerNumber</typename><string>MarkerNumber = MarkerSymbol = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>MarkerSymbol</typename><string/></subtype>
        <subtype><typename>Option</typename><string>Option = <br/><nbsp/><nbsp/><nbsp/><nbsp/>{foreground, <seetype marker="wx#wx_colour">wx:wx_colour()</seetype>} | {background, <seetype marker="wx#wx_colour">wx:wx_colour()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>MarkerNumber</anno>
  <anno>MarkerSymbol</anno>
  <anno>Option</anno>
  <anno>Options</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>markerDefineBitmap</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>markerDefineBitmap(This, MarkerNumber, Bmp) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>MarkerNumber</typename><string>MarkerNumber = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Bmp</typename><string>Bmp = <seetype marker="wxBitmap#wxBitmap">wxBitmap:wxBitmap()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Bmp</anno>
  <anno>MarkerNumber</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>markerDelete</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>markerDelete(This, Line, MarkerNumber) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Line</typename><string>Line = MarkerNumber = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>MarkerNumber</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Line</anno>
  <anno>MarkerNumber</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>markerDeleteAll</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>markerDeleteAll(This, MarkerNumber) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>MarkerNumber</typename><string>MarkerNumber = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>MarkerNumber</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>markerDeleteHandle</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>markerDeleteHandle(This, MarkerHandle) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>MarkerHandle</typename><string>MarkerHandle = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>MarkerHandle</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>markerGet</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>markerGet(This, Line) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Line</typename><string>Line = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Line</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>markerLineFromHandle</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>markerLineFromHandle(This, MarkerHandle) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>MarkerHandle</typename><string>MarkerHandle = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>MarkerHandle</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>markerNext</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>markerNext(This, LineStart, MarkerMask) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>LineStart</typename><string>LineStart = MarkerMask = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>MarkerMask</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>LineStart</anno>
  <anno>MarkerMask</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>markerPrevious</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>markerPrevious(This, LineStart, MarkerMask) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>LineStart</typename><string>LineStart = MarkerMask = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>MarkerMask</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>LineStart</anno>
  <anno>MarkerMask</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>markerSetAlpha</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>markerSetAlpha(This, MarkerNumber, Alpha) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>MarkerNumber</typename><string>MarkerNumber = Alpha = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Alpha</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Alpha</anno>
  <anno>MarkerNumber</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>markerSetBackground</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>markerSetBackground(This, MarkerNumber, Back) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>MarkerNumber</typename><string>MarkerNumber = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Back</typename><string>Back = <seetype marker="wx#wx_colour">wx:wx_colour()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Back</anno>
  <anno>MarkerNumber</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>markerSetForeground</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>markerSetForeground(This, MarkerNumber, Fore) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>MarkerNumber</typename><string>MarkerNumber = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Fore</typename><string>Fore = <seetype marker="wx#wx_colour">wx:wx_colour()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Fore</anno>
  <anno>MarkerNumber</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>move</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>move</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>move</name>
  <arity>4</arity>
  <contract/>
</spec>
<spec>
  <name>moveAfterInTabOrder</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>moveBeforeInTabOrder</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>moveCaretInsideView</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>moveCaretInsideView(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>navigate</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>navigate</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>new</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>new() -&gt; <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></head></clause>
  </contract>
</spec>
<spec>
  <name>new</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>new(Parent) -&gt; <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></head>
      <guard>
        <subtype><typename>Parent</typename><string>Parent = <seetype marker="wxWindow#wxWindow">wxWindow:wxWindow()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Parent</anno>
</spec>
<spec>
  <name>new</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>new(Parent, Options :: [Option]) -&gt; <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></head>
      <guard>
        <subtype><typename>Parent</typename><string>Parent = <seetype marker="wxWindow#wxWindow">wxWindow:wxWindow()</seetype></string></subtype>
        <subtype><typename>Option</typename><string>Option = <br/><nbsp/><nbsp/><nbsp/><nbsp/>{id, <seetype marker="erlang#integer">integer()</seetype>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{pos, {X :: <seetype marker="erlang#integer">integer()</seetype>, Y :: <seetype marker="erlang#integer">integer()</seetype>}} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{size, {W :: <seetype marker="erlang#integer">integer()</seetype>, H :: <seetype marker="erlang#integer">integer()</seetype>}} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{style, <seetype marker="erlang#integer">integer()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>H</anno>
  <anno>Option</anno>
  <anno>Options</anno>
  <anno>Parent</anno>
  <anno>W</anno>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>newLine</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>newLine(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>pageDown</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>pageDown(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>pageDownExtend</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>pageDownExtend(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>pageDownRectExtend</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>pageDownRectExtend(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>pageUp</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>pageUp(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>pageUpExtend</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>pageUpExtend(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>pageUpRectExtend</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>pageUpRectExtend(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>paraDownExtend</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>paraDownExtend(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>paraUp</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>paraUp(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>paraUpExtend</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>paraUpExtend(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>parent_class</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>paste</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>paste(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>pointFromPosition</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>pointFromPosition(This, Pos) -&gt; {X :: <seetype marker="erlang#integer">integer()</seetype>, Y :: <seetype marker="erlang#integer">integer()</seetype>}</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Pos</typename><string>Pos = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Pos</anno>
  <anno>This</anno>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>popupMenu</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>popupMenu</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>popupMenu</name>
  <arity>4</arity>
  <contract/>
</spec>
<spec>
  <name>positionAfter</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>positionAfter(This, Pos) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Pos</typename><string>Pos = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Pos</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>positionBefore</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>positionBefore(This, Pos) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Pos</typename><string>Pos = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Pos</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>positionFromLine</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>positionFromLine(This, Line) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Line</typename><string>Line = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Line</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>positionFromPoint</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>positionFromPoint(This, Pt) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Pt</typename><string>Pt = {X :: <seetype marker="erlang#integer">integer()</seetype>, Y :: <seetype marker="erlang#integer">integer()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>Pt</anno>
  <anno>This</anno>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>positionFromPointClose</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>positionFromPointClose(This, X, Y) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>X</typename><string>X = Y = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Y</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>raise</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>redo</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>redo(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>refresh</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>refresh</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>refreshRect</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>refreshRect</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>registerImage</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>registerImage(This, Type, Bmp) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Type</typename><string>Type = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Bmp</typename><string>Bmp = <seetype marker="wxBitmap#wxBitmap">wxBitmap:wxBitmap()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Bmp</anno>
  <anno>This</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>releaseMouse</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>removeChild</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>reparent</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>replaceSelection</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>replaceSelection(This, Text) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Text</typename><string>Text = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Text</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>replaceTarget</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>replaceTarget(This, Text) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Text</typename><string>Text = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Text</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>saveFile</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>saveFile(This, Filename) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Filename</typename><string>Filename = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Filename</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>screenToClient</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>screenToClient</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>scrollLines</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>scrollPages</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>scrollToColumn</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>scrollToColumn(This, Column) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Column</typename><string>Column = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Column</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>scrollToLine</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>scrollToLine(This, Line) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Line</typename><string>Line = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Line</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>scrollWindow</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>scrollWindow</name>
  <arity>4</arity>
  <contract/>
</spec>
<spec>
  <name>searchAnchor</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>searchAnchor(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>searchInTarget</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>searchInTarget(This, Text) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Text</typename><string>Text = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Text</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>searchNext</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>searchNext(This, SearchFlags, Text) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>SearchFlags</typename><string>SearchFlags = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Text</typename><string>Text = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>SearchFlags</anno>
  <anno>Text</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>searchPrev</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>searchPrev(This, SearchFlags, Text) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>SearchFlags</typename><string>SearchFlags = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Text</typename><string>Text = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>SearchFlags</anno>
  <anno>Text</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>selectAll</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>selectAll(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>selectionDuplicate</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>selectionDuplicate(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>selectionIsRectangle</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>selectionIsRectangle(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>setAcceleratorTable</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>setAnchor</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setAnchor(This, Anchor) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Anchor</typename><string>Anchor = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Anchor</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setAutoLayout</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>setBackSpaceUnIndents</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setBackSpaceUnIndents(This, BsUnIndents) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>BsUnIndents</typename><string>BsUnIndents = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>BsUnIndents</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setBackgroundColour</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>setBackgroundStyle</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>setBufferedDraw</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setBufferedDraw(This, Buffered) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Buffered</typename><string>Buffered = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Buffered</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setCaret</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>setCaretForeground</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setCaretForeground(This, Fore) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Fore</typename><string>Fore = <seetype marker="wx#wx_colour">wx:wx_colour()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Fore</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setCaretLineBackAlpha</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setCaretLineBackAlpha(This, Alpha) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Alpha</typename><string>Alpha = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Alpha</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setCaretLineBackground</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setCaretLineBackground(This, Back) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Back</typename><string>Back = <seetype marker="wx#wx_colour">wx:wx_colour()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Back</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setCaretLineVisible</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setCaretLineVisible(This, Show) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Show</typename><string>Show = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Show</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setCaretPeriod</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setCaretPeriod(This, PeriodMilliseconds) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>PeriodMilliseconds</typename><string>PeriodMilliseconds = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>PeriodMilliseconds</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setCaretSticky</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setCaretSticky(This, UseCaretStickyBehaviour) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>UseCaretStickyBehaviour</typename><string>UseCaretStickyBehaviour = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
  <anno>UseCaretStickyBehaviour</anno>
</spec>
<spec>
  <name>setCaretWidth</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setCaretWidth(This, PixelWidth) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>PixelWidth</typename><string>PixelWidth = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>PixelWidth</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setCharsDefault</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>setCharsDefault(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>setClientSize</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>setClientSize</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>setCodePage</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setCodePage(This, CodePage) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>CodePage</typename><string>CodePage = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>CodePage</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setContainingSizer</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>setControlCharSymbol</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setControlCharSymbol(This, Symbol) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Symbol</typename><string>Symbol = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Symbol</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setCurrentPos</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setCurrentPos(This, Caret) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Caret</typename><string>Caret = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Caret</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setCursor</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>setDoubleBuffered</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>setDropTarget</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>setEOLMode</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setEOLMode(This, EolMode) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>EolMode</typename><string>EolMode = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>EolMode</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setEdgeColour</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setEdgeColour(This, EdgeColour) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>EdgeColour</typename><string>EdgeColour = <seetype marker="wx#wx_colour">wx:wx_colour()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>EdgeColour</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setEdgeColumn</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setEdgeColumn(This, Column) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Column</typename><string>Column = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Column</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setEdgeMode</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setEdgeMode(This, EdgeMode) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>EdgeMode</typename><string>EdgeMode = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>EdgeMode</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setExtraStyle</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>setFocus</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>setFocusFromKbd</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>setFoldExpanded</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>setFoldExpanded(This, Line, Expanded) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Line</typename><string>Line = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Expanded</typename><string>Expanded = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Expanded</anno>
  <anno>Line</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setFoldFlags</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setFoldFlags(This, Flags) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Flags</typename><string>Flags = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Flags</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setFoldLevel</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>setFoldLevel(This, Line, Level) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Line</typename><string>Line = Level = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Level</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Level</anno>
  <anno>Line</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setFoldMarginColour</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>setFoldMarginColour(This, UseSetting, Back) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>UseSetting</typename><string>UseSetting = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
        <subtype><typename>Back</typename><string>Back = <seetype marker="wx#wx_colour">wx:wx_colour()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Back</anno>
  <anno>This</anno>
  <anno>UseSetting</anno>
</spec>
<spec>
  <name>setFoldMarginHiColour</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>setFoldMarginHiColour(This, UseSetting, Fore) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>UseSetting</typename><string>UseSetting = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
        <subtype><typename>Fore</typename><string>Fore = <seetype marker="wx#wx_colour">wx:wx_colour()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Fore</anno>
  <anno>This</anno>
  <anno>UseSetting</anno>
</spec>
<spec>
  <name>setFont</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>setForegroundColour</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>setHScrollBar</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setHScrollBar(This, Bar) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Bar</typename><string>Bar = <seetype marker="wxScrollBar#wxScrollBar">wxScrollBar:wxScrollBar()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Bar</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setHelpText</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>setHighlightGuide</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setHighlightGuide(This, Column) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Column</typename><string>Column = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Column</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setHotspotActiveBackground</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>setHotspotActiveBackground(This, UseSetting, Back) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>UseSetting</typename><string>UseSetting = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
        <subtype><typename>Back</typename><string>Back = <seetype marker="wx#wx_colour">wx:wx_colour()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Back</anno>
  <anno>This</anno>
  <anno>UseSetting</anno>
</spec>
<spec>
  <name>setHotspotActiveForeground</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>setHotspotActiveForeground(This, UseSetting, Fore) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>UseSetting</typename><string>UseSetting = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
        <subtype><typename>Fore</typename><string>Fore = <seetype marker="wx#wx_colour">wx:wx_colour()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Fore</anno>
  <anno>This</anno>
  <anno>UseSetting</anno>
</spec>
<spec>
  <name>setHotspotActiveUnderline</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setHotspotActiveUnderline(This, Underline) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Underline</typename><string>Underline = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
  <anno>Underline</anno>
</spec>
<spec>
  <name>setHotspotSingleLine</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setHotspotSingleLine(This, SingleLine) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>SingleLine</typename><string>SingleLine = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>SingleLine</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setId</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>setIndent</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setIndent(This, IndentSize) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>IndentSize</typename><string>IndentSize = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>IndentSize</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setIndentationGuides</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setIndentationGuides(This, IndentView) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>IndentView</typename><string>IndentView = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>IndentView</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setKeyWords</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>setKeyWords(This, KeyWordSet, KeyWords) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>KeyWordSet</typename><string>KeyWordSet = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>KeyWords</typename><string>KeyWords = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>KeyWordSet</anno>
  <anno>KeyWords</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setLabel</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>setLastKeydownProcessed</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setLastKeydownProcessed(This, Val) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Val</typename><string>Val = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
  <anno>Val</anno>
</spec>
<spec>
  <name>setLayoutCache</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setLayoutCache(This, CacheMode) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>CacheMode</typename><string>CacheMode = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>CacheMode</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setLexer</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setLexer(This, Lexer) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Lexer</typename><string>Lexer = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Lexer</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setLexerLanguage</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setLexerLanguage(This, Language) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Language</typename><string>Language = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Language</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setLineIndentation</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>setLineIndentation(This, Line, Indentation) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Line</typename><string>Line = Indentation = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Indentation</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Indentation</anno>
  <anno>Line</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setLineState</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>setLineState(This, Line, State) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Line</typename><string>Line = State = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>State</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Line</anno>
  <anno>State</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setMarginLeft</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setMarginLeft(This, PixelWidth) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>PixelWidth</typename><string>PixelWidth = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>PixelWidth</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setMarginMask</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>setMarginMask(This, Margin, Mask) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Margin</typename><string>Margin = Mask = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Mask</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Margin</anno>
  <anno>Mask</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setMarginRight</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setMarginRight(This, PixelWidth) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>PixelWidth</typename><string>PixelWidth = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>PixelWidth</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setMarginSensitive</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>setMarginSensitive(This, Margin, Sensitive) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Margin</typename><string>Margin = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Sensitive</typename><string>Sensitive = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Margin</anno>
  <anno>Sensitive</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setMarginType</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>setMarginType(This, Margin, MarginType) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Margin</typename><string>Margin = MarginType = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>MarginType</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Margin</anno>
  <anno>MarginType</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setMarginWidth</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>setMarginWidth(This, Margin, PixelWidth) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Margin</typename><string>Margin = PixelWidth = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>PixelWidth</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Margin</anno>
  <anno>PixelWidth</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setMargins</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>setMargins(This, Left, Right) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Left</typename><string>Left = Right = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Right</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Left</anno>
  <anno>Right</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setMaxSize</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>setMinSize</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>setModEventMask</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setModEventMask(This, EventMask) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>EventMask</typename><string>EventMask = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>EventMask</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setMouseDownCaptures</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setMouseDownCaptures(This, Captures) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Captures</typename><string>Captures = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Captures</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setMouseDwellTime</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setMouseDwellTime(This, PeriodMilliseconds) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>PeriodMilliseconds</typename><string>PeriodMilliseconds = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>PeriodMilliseconds</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setName</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>setOwnBackgroundColour</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>setOwnFont</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>setOwnForegroundColour</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>setPalette</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>setPasteConvertEndings</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setPasteConvertEndings(This, Convert) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Convert</typename><string>Convert = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Convert</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setPrintColourMode</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setPrintColourMode(This, Mode) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Mode</typename><string>Mode = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Mode</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setPrintMagnification</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setPrintMagnification(This, Magnification) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Magnification</typename><string>Magnification = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Magnification</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setProperty</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>setProperty(This, Key, Value) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Key</typename><string>Key = Value = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
        <subtype><typename>Value</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Key</anno>
  <anno>This</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>setReadOnly</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setReadOnly(This, ReadOnly) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>ReadOnly</typename><string>ReadOnly = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>ReadOnly</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setSTCCursor</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setSTCCursor(This, CursorType) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>CursorType</typename><string>CursorType = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>CursorType</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setSTCFocus</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setSTCFocus(This, Focus) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Focus</typename><string>Focus = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Focus</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setSavePoint</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>setSavePoint(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>setScrollPos</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>setScrollPos</name>
  <arity>4</arity>
  <contract/>
</spec>
<spec>
  <name>setScrollWidth</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setScrollWidth(This, PixelWidth) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>PixelWidth</typename><string>PixelWidth = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>PixelWidth</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setScrollbar</name>
  <arity>5</arity>
  <contract/>
</spec>
<spec>
  <name>setScrollbar</name>
  <arity>6</arity>
  <contract/>
</spec>
<spec>
  <name>setSearchFlags</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setSearchFlags(This, SearchFlags) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>SearchFlags</typename><string>SearchFlags = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>SearchFlags</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setSelAlpha</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setSelAlpha(This, Alpha) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Alpha</typename><string>Alpha = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Alpha</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setSelBackground</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>setSelBackground(This, UseSetting, Back) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>UseSetting</typename><string>UseSetting = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
        <subtype><typename>Back</typename><string>Back = <seetype marker="wx#wx_colour">wx:wx_colour()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Back</anno>
  <anno>This</anno>
  <anno>UseSetting</anno>
</spec>
<spec>
  <name>setSelForeground</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>setSelForeground(This, UseSetting, Fore) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>UseSetting</typename><string>UseSetting = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
        <subtype><typename>Fore</typename><string>Fore = <seetype marker="wx#wx_colour">wx:wx_colour()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Fore</anno>
  <anno>This</anno>
  <anno>UseSetting</anno>
</spec>
<spec>
  <name>setSelection</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>setSelection(This, From, To) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>From</typename><string>From = To = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>To</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>From</anno>
  <anno>This</anno>
  <anno>To</anno>
</spec>
<spec>
  <name>setSelectionEnd</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setSelectionEnd(This, Caret) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Caret</typename><string>Caret = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Caret</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setSelectionMode</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setSelectionMode(This, SelectionMode) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>SelectionMode</typename><string>SelectionMode = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>SelectionMode</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setSelectionStart</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setSelectionStart(This, Anchor) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Anchor</typename><string>Anchor = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Anchor</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setSize</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>setSize</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>setSize</name>
  <arity>5</arity>
  <contract/>
</spec>
<spec>
  <name>setSize</name>
  <arity>6</arity>
  <contract/>
</spec>
<spec>
  <name>setSizeHints</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>setSizeHints</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>setSizeHints</name>
  <arity>4</arity>
  <contract/>
</spec>
<spec>
  <name>setSizer</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>setSizer</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>setSizerAndFit</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>setSizerAndFit</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>setStatus</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setStatus(This, Status) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Status</typename><string>Status = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Status</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setStyleBytes</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setStyleBytes(This, Length) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Length</typename><string>Length = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Length</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setStyling</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>setStyling(This, Length, Style) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Length</typename><string>Length = Style = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Style</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Length</anno>
  <anno>Style</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setTabIndents</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setTabIndents(This, TabIndents) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>TabIndents</typename><string>TabIndents = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>TabIndents</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setTabWidth</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setTabWidth(This, TabWidth) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>TabWidth</typename><string>TabWidth = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>TabWidth</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setTargetEnd</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setTargetEnd(This, End) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>End</typename><string>End = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>End</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setTargetStart</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setTargetStart(This, Start) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Start</typename><string>Start = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Start</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setText</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setText(This, Text) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Text</typename><string>Text = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Text</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setTextRaw</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setTextRaw(This, Text) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Text</typename><string>Text = <seetype marker="erlang#binary">binary()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Text</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setThemeEnabled</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>setToolTip</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>setTransparent</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>setTwoPhaseDraw</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setTwoPhaseDraw(This, TwoPhase) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>TwoPhase</typename><string>TwoPhase = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
  <anno>TwoPhase</anno>
</spec>
<spec>
  <name>setUndoCollection</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setUndoCollection(This, CollectUndo) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>CollectUndo</typename><string>CollectUndo = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>CollectUndo</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setUseHorizontalScrollBar</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setUseHorizontalScrollBar(This, Visible) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Visible</typename><string>Visible = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
  <anno>Visible</anno>
</spec>
<spec>
  <name>setUseTabs</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setUseTabs(This, UseTabs) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>UseTabs</typename><string>UseTabs = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
  <anno>UseTabs</anno>
</spec>
<spec>
  <name>setUseVerticalScrollBar</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setUseVerticalScrollBar(This, Visible) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Visible</typename><string>Visible = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
  <anno>Visible</anno>
</spec>
<spec>
  <name>setVScrollBar</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setVScrollBar(This, Bar) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Bar</typename><string>Bar = <seetype marker="wxScrollBar#wxScrollBar">wxScrollBar:wxScrollBar()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Bar</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setViewEOL</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setViewEOL(This, Visible) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Visible</typename><string>Visible = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
  <anno>Visible</anno>
</spec>
<spec>
  <name>setViewWhiteSpace</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setViewWhiteSpace(This, ViewWS) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>ViewWS</typename><string>ViewWS = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
  <anno>ViewWS</anno>
</spec>
<spec>
  <name>setVirtualSize</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>setVirtualSize</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>setVisiblePolicy</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>setVisiblePolicy(This, VisiblePolicy, VisibleSlop) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>VisiblePolicy</typename><string>VisiblePolicy = VisibleSlop = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>VisibleSlop</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
  <anno>VisiblePolicy</anno>
  <anno>VisibleSlop</anno>
</spec>
<spec>
  <name>setWhitespaceBackground</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>setWhitespaceBackground(This, UseSetting, Back) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>UseSetting</typename><string>UseSetting = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
        <subtype><typename>Back</typename><string>Back = <seetype marker="wx#wx_colour">wx:wx_colour()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Back</anno>
  <anno>This</anno>
  <anno>UseSetting</anno>
</spec>
<spec>
  <name>setWhitespaceChars</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setWhitespaceChars(This, Characters) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Characters</typename><string>Characters = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Characters</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setWhitespaceForeground</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>setWhitespaceForeground(This, UseSetting, Fore) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>UseSetting</typename><string>UseSetting = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
        <subtype><typename>Fore</typename><string>Fore = <seetype marker="wx#wx_colour">wx:wx_colour()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Fore</anno>
  <anno>This</anno>
  <anno>UseSetting</anno>
</spec>
<spec>
  <name>setWindowStyle</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>setWindowStyleFlag</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>setWindowVariant</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>setWordChars</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setWordChars(This, Characters) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Characters</typename><string>Characters = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Characters</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setWrapMode</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setWrapMode(This, WrapMode) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>WrapMode</typename><string>WrapMode = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
  <anno>WrapMode</anno>
</spec>
<spec>
  <name>setWrapStartIndent</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setWrapStartIndent(This, Indent) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Indent</typename><string>Indent = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Indent</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setWrapVisualFlags</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setWrapVisualFlags(This, WrapVisualFlags) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>WrapVisualFlags</typename><string>WrapVisualFlags = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
  <anno>WrapVisualFlags</anno>
</spec>
<spec>
  <name>setWrapVisualFlagsLocation</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setWrapVisualFlagsLocation(This, WrapVisualFlagsLocation) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>WrapVisualFlagsLocation</typename><string>WrapVisualFlagsLocation = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
  <anno>WrapVisualFlagsLocation</anno>
</spec>
<spec>
  <name>setXCaretPolicy</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>setXCaretPolicy(This, CaretPolicy, CaretSlop) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>CaretPolicy</typename><string>CaretPolicy = CaretSlop = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>CaretSlop</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>CaretPolicy</anno>
  <anno>CaretSlop</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setYCaretPolicy</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>setYCaretPolicy(This, CaretPolicy, CaretSlop) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>CaretPolicy</typename><string>CaretPolicy = CaretSlop = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>CaretSlop</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>CaretPolicy</anno>
  <anno>CaretSlop</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setZoom</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setZoom(This, ZoomInPoints) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>ZoomInPoints</typename><string>ZoomInPoints = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
  <anno>ZoomInPoints</anno>
</spec>
<spec>
  <name>shouldInheritColours</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>show</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>show</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>showLines</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>showLines(This, LineStart, LineEnd) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>LineStart</typename><string>LineStart = LineEnd = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>LineEnd</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>LineEnd</anno>
  <anno>LineStart</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>startRecord</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>startRecord(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>startStyling</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>startStyling(This, Start) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Start</typename><string>Start = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Start</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>stopRecord</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>stopRecord(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>stutteredPageDown</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>stutteredPageDown(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>stutteredPageDownExtend</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>stutteredPageDownExtend(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>stutteredPageUp</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>stutteredPageUp(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>stutteredPageUpExtend</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>stutteredPageUpExtend(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>styleClearAll</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>styleClearAll(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>styleResetDefault</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>styleResetDefault(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>styleSetBackground</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>styleSetBackground(This, Style, Back) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Style</typename><string>Style = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Back</typename><string>Back = <seetype marker="wx#wx_colour">wx:wx_colour()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Back</anno>
  <anno>Style</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>styleSetBold</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>styleSetBold(This, Style, Bold) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Style</typename><string>Style = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Bold</typename><string>Bold = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Bold</anno>
  <anno>Style</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>styleSetCase</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>styleSetCase(This, Style, CaseVisible) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Style</typename><string>Style = CaseVisible = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>CaseVisible</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>CaseVisible</anno>
  <anno>Style</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>styleSetCharacterSet</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>styleSetCharacterSet(This, Style, CharacterSet) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Style</typename><string>Style = CharacterSet = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>CharacterSet</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>CharacterSet</anno>
  <anno>Style</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>styleSetEOLFilled</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>styleSetEOLFilled(This, Style, EolFilled) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Style</typename><string>Style = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>EolFilled</typename><string>EolFilled = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>EolFilled</anno>
  <anno>Style</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>styleSetFaceName</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>styleSetFaceName(This, Style, FontName) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Style</typename><string>Style = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>FontName</typename><string>FontName = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>FontName</anno>
  <anno>Style</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>styleSetFont</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>styleSetFont(This, StyleNum, Font) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>StyleNum</typename><string>StyleNum = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Font</typename><string>Font = <seetype marker="wxFont#wxFont">wxFont:wxFont()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Font</anno>
  <anno>StyleNum</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>styleSetFontAttr</name>
  <arity>7</arity>
  <contract>
    <clause>
      <head>styleSetFontAttr(This, StyleNum, Size, FaceName, Bold, Italic,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Underline) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>StyleNum</typename><string>StyleNum = Size = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Size</typename><string/></subtype>
        <subtype><typename>FaceName</typename><string>FaceName = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
        <subtype><typename>Bold</typename><string>Bold = Italic = Underline = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
        <subtype><typename>Italic</typename><string></string></subtype>
        <subtype><typename>Underline</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Bold</anno>
  <anno>FaceName</anno>
  <anno>Italic</anno>
  <anno>Size</anno>
  <anno>StyleNum</anno>
  <anno>This</anno>
  <anno>Underline</anno>
</spec>
<spec>
  <name>styleSetFontAttr</name>
  <arity>8</arity>
  <contract>
    <clause>
      <head>styleSetFontAttr(This, StyleNum, Size, FaceName, Bold, Italic,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Underline,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Options :: [Option]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>StyleNum</typename><string>StyleNum = Size = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Size</typename><string/></subtype>
        <subtype><typename>FaceName</typename><string>FaceName = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
        <subtype><typename>Bold</typename><string>Bold = Italic = Underline = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
        <subtype><typename>Italic</typename><string/></subtype>
        <subtype><typename>Underline</typename><string/></subtype>
        <subtype><typename>Option</typename><string>Option = {encoding, <seetype marker="wx#wx_enum">wx:wx_enum()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>Bold</anno>
  <anno>FaceName</anno>
  <anno>Italic</anno>
  <anno>Option</anno>
  <anno>Options</anno>
  <anno>Size</anno>
  <anno>StyleNum</anno>
  <anno>This</anno>
  <anno>Underline</anno>
</spec>
<spec>
  <name>styleSetFontEncoding</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>styleSetFontEncoding(This, Style, Encoding) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Style</typename><string>Style = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Encoding</typename><string>Encoding = <seetype marker="wx#wx_enum">wx:wx_enum()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Encoding</anno>
  <anno>Style</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>styleSetForeground</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>styleSetForeground(This, Style, Fore) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Style</typename><string>Style = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Fore</typename><string>Fore = <seetype marker="wx#wx_colour">wx:wx_colour()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Fore</anno>
  <anno>Style</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>styleSetHotSpot</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>styleSetHotSpot(This, Style, Hotspot) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Style</typename><string>Style = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Hotspot</typename><string>Hotspot = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Hotspot</anno>
  <anno>Style</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>styleSetItalic</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>styleSetItalic(This, Style, Italic) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Style</typename><string>Style = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Italic</typename><string>Italic = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Italic</anno>
  <anno>Style</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>styleSetSize</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>styleSetSize(This, Style, SizePoints) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Style</typename><string>Style = SizePoints = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>SizePoints</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>SizePoints</anno>
  <anno>Style</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>styleSetSpec</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>styleSetSpec(This, StyleNum, Spec) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>StyleNum</typename><string>StyleNum = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Spec</typename><string>Spec = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Spec</anno>
  <anno>StyleNum</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>styleSetUnderline</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>styleSetUnderline(This, Style, Underline) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Style</typename><string>Style = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Underline</typename><string>Underline = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Style</anno>
  <anno>This</anno>
  <anno>Underline</anno>
</spec>
<spec>
  <name>styleSetVisible</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>styleSetVisible(This, Style, Visible) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Style</typename><string>Style = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Visible</typename><string>Visible = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Style</anno>
  <anno>This</anno>
  <anno>Visible</anno>
</spec>
<spec>
  <name>tab</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>tab(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>targetFromSelection</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>targetFromSelection(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>textHeight</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>textHeight(This, Line) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Line</typename><string>Line = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Line</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>textWidth</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>textWidth(This, Style, Text) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Style</typename><string>Style = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Text</typename><string>Text = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Style</anno>
  <anno>Text</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>thaw</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>toggleCaretSticky</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>toggleCaretSticky(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>toggleFold</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>toggleFold(This, Line) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Line</typename><string>Line = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Line</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>transferDataFromWindow</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>transferDataToWindow</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>undo</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>undo(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>update</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>updateWindowUI</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>updateWindowUI</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>upperCase</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>upperCase(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>usePopUp</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>usePopUp(This, PopUpMode) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>PopUpMode</typename><string>PopUpMode = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>PopUpMode</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>userListShow</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>userListShow(This, ListType, ItemList) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>ListType</typename><string>ListType = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>ItemList</typename><string>ItemList = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>ItemList</anno>
  <anno>ListType</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>vCHome</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>vCHome(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>vCHomeExtend</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>vCHomeExtend(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>vCHomeRectExtend</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>vCHomeRectExtend(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>vCHomeWrap</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>vCHomeWrap(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>vCHomeWrapExtend</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>vCHomeWrapExtend(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>validate</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>visibleFromDocLine</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>visibleFromDocLine(This, DocLine) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>DocLine</typename><string>DocLine = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>DocLine</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>warpPointer</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>wordEndPosition</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>wordEndPosition(This, Pos, OnlyWordCharacters) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Pos</typename><string>Pos = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>OnlyWordCharacters</typename><string>OnlyWordCharacters = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>OnlyWordCharacters</anno>
  <anno>Pos</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>wordLeft</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>wordLeft(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>wordLeftEnd</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>wordLeftEnd(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>wordLeftEndExtend</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>wordLeftEndExtend(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>wordLeftExtend</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>wordLeftExtend(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>wordPartLeft</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>wordPartLeft(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>wordPartLeftExtend</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>wordPartLeftExtend(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>wordPartRight</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>wordPartRight(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>wordPartRightExtend</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>wordPartRightExtend(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>wordRight</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>wordRight(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>wordRightEnd</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>wordRightEnd(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>wordRightEndExtend</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>wordRightEndExtend(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>wordRightExtend</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>wordRightExtend(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>wordStartPosition</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>wordStartPosition(This, Pos, OnlyWordCharacters) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>Pos</typename><string>Pos = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>OnlyWordCharacters</typename><string>OnlyWordCharacters = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>OnlyWordCharacters</anno>
  <anno>Pos</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>wrapCount</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>wrapCount(This, DocLine) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
        <subtype><typename>DocLine</typename><string>DocLine = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>DocLine</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>zoomIn</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>zoomIn(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>zoomOut</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>zoomOut(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxStyledTextCtrl">wxStyledTextCtrl()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<timestamp>Generated by EDoc, May 17 2022, 21:44:46.</timestamp>
</module>