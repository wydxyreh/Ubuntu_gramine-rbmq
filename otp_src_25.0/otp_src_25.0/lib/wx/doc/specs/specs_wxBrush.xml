<module name="wxBrush">
<type>
  <name>wxBrush</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-wxBrush">wxBrush()</marker> = <seetype marker="wx#wx_object">wx:wx_object()</seetype></typehead></typedecl>
</type>
<spec>
  <name>destroy</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>destroy(This :: <seetype marker="#wxBrush">wxBrush()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getColour</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getColour(This) -&gt; <seetype marker="wx#wx_colour4">wx:wx_colour4()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxBrush">wxBrush()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getStipple</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getStipple(This) -&gt; <seetype marker="wxBitmap#wxBitmap">wxBitmap:wxBitmap()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxBrush">wxBrush()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getStyle</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getStyle(This) -&gt; <seetype marker="wx#wx_enum">wx:wx_enum()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxBrush">wxBrush()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>isHatch</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>isHatch(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxBrush">wxBrush()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>isOk</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>isOk(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxBrush">wxBrush()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>new</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>new() -&gt; <seetype marker="#wxBrush">wxBrush()</seetype></head></clause>
  </contract>
</spec>
<spec>
  <name>new</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>new(Colour) -&gt; <seetype marker="#wxBrush">wxBrush()</seetype></head>
      <guard>
        <subtype><typename>Colour</typename><string>Colour = <seetype marker="wx#wx_colour">wx:wx_colour()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Colour</anno>
</spec>
<spec>
  <name>new</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>new(Brush) -&gt; <seetype marker="#wxBrush">wxBrush()</seetype></head>
      <guard>
        <subtype><typename>Brush</typename><string>Brush = <seetype marker="wxBrush#wxBrush">wxBrush:wxBrush()</seetype> | <seetype marker="wxBitmap#wxBitmap">wxBitmap:wxBitmap()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Brush</anno>
</spec>
<spec>
  <name>new</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>new(Colour, Options :: [Option]) -&gt; <seetype marker="#wxBrush">wxBrush()</seetype></head>
      <guard>
        <subtype><typename>Colour</typename><string>Colour = <seetype marker="wx#wx_colour">wx:wx_colour()</seetype></string></subtype>
        <subtype><typename>Option</typename><string>Option = {style, <seetype marker="wx#wx_enum">wx:wx_enum()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>Colour</anno>
  <anno>Option</anno>
  <anno>Options</anno>
</spec>
<spec>
  <name>parent_class</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>setColour</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setColour(This, Colour) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxBrush">wxBrush()</seetype></string></subtype>
        <subtype><typename>Colour</typename><string>Colour = <seetype marker="wx#wx_colour">wx:wx_colour()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Colour</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setColour</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>setColour(This, Red, Green, Blue) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxBrush">wxBrush()</seetype></string></subtype>
        <subtype><typename>Red</typename><string>Red = Green = Blue = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Green</typename><string></string></subtype>
        <subtype><typename>Blue</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setStipple</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setStipple(This, Bitmap) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxBrush">wxBrush()</seetype></string></subtype>
        <subtype><typename>Bitmap</typename><string>Bitmap = <seetype marker="wxBitmap#wxBitmap">wxBitmap:wxBitmap()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Bitmap</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setStyle</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setStyle(This, Style) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxBrush">wxBrush()</seetype></string></subtype>
        <subtype><typename>Style</typename><string>Style = <seetype marker="wx#wx_enum">wx:wx_enum()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Style</anno>
  <anno>This</anno>
</spec>
<timestamp>Generated by EDoc, May 17 2022, 21:44:29.</timestamp>
</module>