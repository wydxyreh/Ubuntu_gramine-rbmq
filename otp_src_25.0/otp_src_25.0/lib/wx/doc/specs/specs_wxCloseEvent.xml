<module name="wxCloseEvent">
<type>
  <name>wxClose</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-wxClose">wxClose()</marker> = #wxClose{type = <seetype marker="wxCloseEvent#wxCloseEventType">wxCloseEvent:wxCloseEventType()</seetype>}</typehead></typedecl>
</type>
<type>
  <name>wxCloseEvent</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-wxCloseEvent">wxCloseEvent()</marker> = <seetype marker="wx#wx_object">wx:wx_object()</seetype></typehead></typedecl>
</type>
<type>
  <name>wxCloseEventType</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-wxCloseEventType">wxCloseEventType()</marker> = <br/><nbsp/><nbsp/><nbsp/><nbsp/>close_window | end_session | query_end_session</typehead></typedecl>
</type>
<spec>
  <name>canVeto</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>canVeto(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxCloseEvent">wxCloseEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getId</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getLoggingOff</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getLoggingOff(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxCloseEvent">wxCloseEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getSkipped</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getTimestamp</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>isCommandEvent</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>parent_class</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>resumePropagation</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>setCanVeto</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setCanVeto(This, CanVeto) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxCloseEvent">wxCloseEvent()</seetype></string></subtype>
        <subtype><typename>CanVeto</typename><string>CanVeto = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>CanVeto</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setLoggingOff</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setLoggingOff(This, LoggingOff) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxCloseEvent">wxCloseEvent()</seetype></string></subtype>
        <subtype><typename>LoggingOff</typename><string>LoggingOff = <seetype marker="erlang#boolean">boolean()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>LoggingOff</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>shouldPropagate</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>skip</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>skip</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>stopPropagation</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>veto</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>veto(This) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxCloseEvent">wxCloseEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>veto</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>veto(This, Options :: [Option]) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxCloseEvent">wxCloseEvent()</seetype></string></subtype>
        <subtype><typename>Option</typename><string>Option = {veto, <seetype marker="erlang#boolean">boolean()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>Option</anno>
  <anno>Options</anno>
  <anno>This</anno>
</spec>
<timestamp>Generated by EDoc, May 17 2022, 21:44:30.</timestamp>
</module>