<module name="wxLocale">
<type>
  <name>wxLocale</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-wxLocale">wxLocale()</marker> = <seetype marker="wx#wx_object">wx:wx_object()</seetype></typehead></typedecl>
</type>
<spec>
  <name>addCatalog</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>addCatalog(This, Domain) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxLocale">wxLocale()</seetype></string></subtype>
        <subtype><typename>Domain</typename><string>Domain = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Domain</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>addCatalog</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>addCatalog(This, Domain, MsgIdLanguage) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxLocale">wxLocale()</seetype></string></subtype>
        <subtype><typename>Domain</typename><string>Domain = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
        <subtype><typename>MsgIdLanguage</typename><string>MsgIdLanguage = <seetype marker="wx#wx_enum">wx:wx_enum()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Domain</anno>
  <anno>MsgIdLanguage</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>addCatalog</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>addCatalog(This, Domain, MsgIdLanguage, MsgIdCharset) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxLocale">wxLocale()</seetype></string></subtype>
        <subtype><typename>Domain</typename><string>Domain = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
        <subtype><typename>MsgIdLanguage</typename><string>MsgIdLanguage = <seetype marker="wx#wx_enum">wx:wx_enum()</seetype></string></subtype>
        <subtype><typename>MsgIdCharset</typename><string>MsgIdCharset = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Domain</anno>
  <anno>MsgIdCharset</anno>
  <anno>MsgIdLanguage</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>addCatalogLookupPathPrefix</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>addCatalogLookupPathPrefix(Prefix) -&gt; ok</head>
      <guard>
        <subtype><typename>Prefix</typename><string>Prefix = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Prefix</anno>
</spec>
<spec>
  <name>destroy</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>destroy(This :: <seetype marker="#wxLocale">wxLocale()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getCanonicalName</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getCanonicalName(This) -&gt; <seetype marker="unicode#charlist">unicode:charlist()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxLocale">wxLocale()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getHeaderValue</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getHeaderValue(This, Header) -&gt; <seetype marker="unicode#charlist">unicode:charlist()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxLocale">wxLocale()</seetype></string></subtype>
        <subtype><typename>Header</typename><string>Header = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Header</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>getHeaderValue</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>getHeaderValue(This, Header, Options :: [Option]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="unicode#charlist">unicode:charlist()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxLocale">wxLocale()</seetype></string></subtype>
        <subtype><typename>Header</typename><string>Header = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
        <subtype><typename>Option</typename><string>Option = {szDomain, <seetype marker="unicode#chardata">unicode:chardata()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>Header</anno>
  <anno>Option</anno>
  <anno>Options</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>getLanguage</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getLanguage(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxLocale">wxLocale()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getLanguageName</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getLanguageName(Lang) -&gt; <seetype marker="unicode#charlist">unicode:charlist()</seetype></head>
      <guard>
        <subtype><typename>Lang</typename><string>Lang = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Lang</anno>
</spec>
<spec>
  <name>getLocale</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getLocale(This) -&gt; <seetype marker="unicode#charlist">unicode:charlist()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxLocale">wxLocale()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getName</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getName(This) -&gt; <seetype marker="unicode#charlist">unicode:charlist()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxLocale">wxLocale()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getString</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getString(This, OrigString) -&gt; <seetype marker="unicode#charlist">unicode:charlist()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxLocale">wxLocale()</seetype></string></subtype>
        <subtype><typename>OrigString</typename><string>OrigString = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>OrigString</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>getString</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>getString(This, OrigString, Options :: [Option]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="unicode#charlist">unicode:charlist()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxLocale">wxLocale()</seetype></string></subtype>
        <subtype><typename>OrigString</typename><string>OrigString = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
        <subtype><typename>Option</typename><string>Option = {szDomain, <seetype marker="unicode#chardata">unicode:chardata()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>Option</anno>
  <anno>Options</anno>
  <anno>OrigString</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>getString</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>getString(This, OrigString, OrigString2, N) -&gt; <seetype marker="unicode#charlist">unicode:charlist()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxLocale">wxLocale()</seetype></string></subtype>
        <subtype><typename>OrigString</typename><string>OrigString = OrigString2 = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
        <subtype><typename>OrigString2</typename><string/></subtype>
        <subtype><typename>N</typename><string>N = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>N</anno>
  <anno>OrigString</anno>
  <anno>OrigString2</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>getString</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>getString(This, OrigString, OrigString2, N, Options :: [Option]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seetype marker="unicode#charlist">unicode:charlist()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxLocale">wxLocale()</seetype></string></subtype>
        <subtype><typename>OrigString</typename><string>OrigString = OrigString2 = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
        <subtype><typename>OrigString2</typename><string/></subtype>
        <subtype><typename>N</typename><string>N = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Option</typename><string>Option = {szDomain, <seetype marker="unicode#chardata">unicode:chardata()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>N</anno>
  <anno>Option</anno>
  <anno>Options</anno>
  <anno>OrigString</anno>
  <anno>OrigString2</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>getSysName</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getSysName(This) -&gt; <seetype marker="unicode#charlist">unicode:charlist()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxLocale">wxLocale()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getSystemEncoding</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>getSystemEncoding() -&gt; <seetype marker="wx#wx_enum">wx:wx_enum()</seetype></head></clause>
  </contract>
</spec>
<spec>
  <name>getSystemEncodingName</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>getSystemEncodingName() -&gt; <seetype marker="unicode#charlist">unicode:charlist()</seetype></head></clause>
  </contract>
</spec>
<spec>
  <name>getSystemLanguage</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>getSystemLanguage() -&gt; <seetype marker="erlang#integer">integer()</seetype></head></clause>
  </contract>
</spec>
<spec>
  <name>init</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>init(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxLocale">wxLocale()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>init</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>init(This, Options :: [Option]) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxLocale">wxLocale()</seetype></string></subtype>
        <subtype><typename>Option</typename><string>Option = {language, <seetype marker="erlang#integer">integer()</seetype>} | {flags, <seetype marker="erlang#integer">integer()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>Option</anno>
  <anno>Options</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>init</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>init(This, Name, Options :: [Option]) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxLocale">wxLocale()</seetype></string></subtype>
        <subtype><typename>Name</typename><string>Name = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
        <subtype><typename>Option</typename><string>Option = <br/><nbsp/><nbsp/><nbsp/><nbsp/>{shortName, <seetype marker="unicode#chardata">unicode:chardata()</seetype>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{locale, <seetype marker="unicode#chardata">unicode:chardata()</seetype>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{bLoadDefault, <seetype marker="erlang#boolean">boolean()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>Name</anno>
  <anno>Option</anno>
  <anno>Options</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>isLoaded</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>isLoaded(This, Domain) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxLocale">wxLocale()</seetype></string></subtype>
        <subtype><typename>Domain</typename><string>Domain = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Domain</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>isOk</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>isOk(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxLocale">wxLocale()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>new</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>new() -&gt; <seetype marker="#wxLocale">wxLocale()</seetype></head></clause>
  </contract>
</spec>
<spec>
  <name>new</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>new(Language) -&gt; <seetype marker="#wxLocale">wxLocale()</seetype></head>
      <guard>
        <subtype><typename>Language</typename><string>Language = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Language</anno>
</spec>
<spec>
  <name>new</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>new(Name) -&gt; <seetype marker="#wxLocale">wxLocale()</seetype></head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Name</anno>
</spec>
<spec>
  <name>new</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>new(Language, Options :: [Option]) -&gt; <seetype marker="#wxLocale">wxLocale()</seetype></head>
      <guard>
        <subtype><typename>Language</typename><string>Language = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Option</typename><string>Option = {flags, <seetype marker="erlang#integer">integer()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>Language</anno>
  <anno>Option</anno>
  <anno>Options</anno>
</spec>
<spec>
  <name>new</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>new(Name, Options :: [Option]) -&gt; <seetype marker="#wxLocale">wxLocale()</seetype></head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seetype marker="unicode#chardata">unicode:chardata()</seetype></string></subtype>
        <subtype><typename>Option</typename><string>Option = <br/><nbsp/><nbsp/><nbsp/><nbsp/>{shortName, <seetype marker="unicode#chardata">unicode:chardata()</seetype>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{locale, <seetype marker="unicode#chardata">unicode:chardata()</seetype>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{bLoadDefault, <seetype marker="erlang#boolean">boolean()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>Name</anno>
  <anno>Option</anno>
  <anno>Options</anno>
</spec>
<spec>
  <name>parent_class</name>
  <arity>1</arity>
  <contract/>
</spec>
<timestamp>Generated by EDoc, May 17 2022, 21:44:38.</timestamp>
</module>