<module name="wxSashEvent">
<type>
  <name>wxSash</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-wxSash">wxSash()</marker> = <br/><nbsp/><nbsp/><nbsp/><nbsp/>#wxSash{type = <seetype marker="wxSashEvent#wxSashEventType">wxSashEvent:wxSashEventType()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>edge = <seetype marker="wx#wx_enum">wx:wx_enum()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>dragRect =<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{X :: <seetype marker="erlang#integer">integer()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Y :: <seetype marker="erlang#integer">integer()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>W :: <seetype marker="erlang#integer">integer()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>H :: <seetype marker="erlang#integer">integer()</seetype>},<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>dragStatus = <seetype marker="wx#wx_enum">wx:wx_enum()</seetype>}</typehead></typedecl>
  <anno>H</anno>
  <anno>W</anno>
  <anno>X</anno>
  <anno>Y</anno>
</type>
<type>
  <name>wxSashEvent</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-wxSashEvent">wxSashEvent()</marker> = <seetype marker="wx#wx_object">wx:wx_object()</seetype></typehead></typedecl>
</type>
<type>
  <name>wxSashEventType</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-wxSashEventType">wxSashEventType()</marker> = sash_dragged</typehead></typedecl>
</type>
<spec>
  <name>getClientData</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getDragRect</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getDragRect(This) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{X :: <seetype marker="erlang#integer">integer()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Y :: <seetype marker="erlang#integer">integer()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>W :: <seetype marker="erlang#integer">integer()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>H :: <seetype marker="erlang#integer">integer()</seetype>}</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxSashEvent">wxSashEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>H</anno>
  <anno>This</anno>
  <anno>W</anno>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>getDragStatus</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getDragStatus(This) -&gt; <seetype marker="wx#wx_enum">wx:wx_enum()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxSashEvent">wxSashEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getEdge</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getEdge(This) -&gt; <seetype marker="wx#wx_enum">wx:wx_enum()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxSashEvent">wxSashEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getExtraLong</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getId</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getInt</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getSelection</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getSkipped</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getString</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getTimestamp</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>isChecked</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>isCommandEvent</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>isSelection</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>parent_class</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>resumePropagation</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>setInt</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>setString</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>shouldPropagate</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>skip</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>skip</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>stopPropagation</name>
  <arity>1</arity>
  <contract/>
</spec>
<timestamp>Generated by EDoc, May 17 2022, 21:44:42.</timestamp>
</module>