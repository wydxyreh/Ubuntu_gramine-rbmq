<module name="wxImageList">
<type>
  <name>wxImageList</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-wxImageList">wxImageList()</marker> = <seetype marker="wx#wx_object">wx:wx_object()</seetype></typehead></typedecl>
</type>
<spec>
  <name>add</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>add(This, Icon) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxImageList">wxImageList()</seetype></string></subtype>
        <subtype><typename>Icon</typename><string>Icon = <seetype marker="wxIcon#wxIcon">wxIcon:wxIcon()</seetype> | <seetype marker="wxBitmap#wxBitmap">wxBitmap:wxBitmap()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Icon</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>add</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>add(This, Bitmap, Mask) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxImageList">wxImageList()</seetype></string></subtype>
        <subtype><typename>Bitmap</typename><string>Bitmap = Mask = <seetype marker="wxBitmap#wxBitmap">wxBitmap:wxBitmap()</seetype></string></subtype>
        <subtype><typename>Mask</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Bitmap</anno>
  <anno>Mask</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>add</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>add(This, Bitmap, MaskColour) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxImageList">wxImageList()</seetype></string></subtype>
        <subtype><typename>Bitmap</typename><string>Bitmap = <seetype marker="wxBitmap#wxBitmap">wxBitmap:wxBitmap()</seetype></string></subtype>
        <subtype><typename>MaskColour</typename><string>MaskColour = <seetype marker="wx#wx_colour">wx:wx_colour()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Bitmap</anno>
  <anno>MaskColour</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>create</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>create(This, Width, Height) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxImageList">wxImageList()</seetype></string></subtype>
        <subtype><typename>Width</typename><string>Width = Height = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Height</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Height</anno>
  <anno>This</anno>
  <anno>Width</anno>
</spec>
<spec>
  <name>create</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>create(This, Width, Height, Options :: [Option]) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxImageList">wxImageList()</seetype></string></subtype>
        <subtype><typename>Width</typename><string>Width = Height = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Height</typename><string/></subtype>
        <subtype><typename>Option</typename><string>Option = {mask, <seetype marker="erlang#boolean">boolean()</seetype>} | {initialCount, <seetype marker="erlang#integer">integer()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>Height</anno>
  <anno>Option</anno>
  <anno>Options</anno>
  <anno>This</anno>
  <anno>Width</anno>
</spec>
<spec>
  <name>destroy</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>destroy(This :: <seetype marker="#wxImageList">wxImageList()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>draw</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>draw(This, Index, Dc, X, Y) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxImageList">wxImageList()</seetype></string></subtype>
        <subtype><typename>Index</typename><string>Index = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Dc</typename><string>Dc = <seetype marker="wxDC#wxDC">wxDC:wxDC()</seetype></string></subtype>
        <subtype><typename>X</typename><string>X = Y = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Y</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Dc</anno>
  <anno>Index</anno>
  <anno>This</anno>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>draw</name>
  <arity>6</arity>
  <contract>
    <clause>
      <head>draw(This, Index, Dc, X, Y, Options :: [Option]) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxImageList">wxImageList()</seetype></string></subtype>
        <subtype><typename>Index</typename><string>Index = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Dc</typename><string>Dc = <seetype marker="wxDC#wxDC">wxDC:wxDC()</seetype></string></subtype>
        <subtype><typename>X</typename><string>X = Y = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Y</typename><string/></subtype>
        <subtype><typename>Option</typename><string>Option = {flags, <seetype marker="erlang#integer">integer()</seetype>} | {solidBackground, <seetype marker="erlang#boolean">boolean()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>Dc</anno>
  <anno>Index</anno>
  <anno>Option</anno>
  <anno>Options</anno>
  <anno>This</anno>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>getBitmap</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getBitmap(This, Index) -&gt; <seetype marker="wxBitmap#wxBitmap">wxBitmap:wxBitmap()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxImageList">wxImageList()</seetype></string></subtype>
        <subtype><typename>Index</typename><string>Index = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Index</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>getIcon</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getIcon(This, Index) -&gt; <seetype marker="wxIcon#wxIcon">wxIcon:wxIcon()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxImageList">wxImageList()</seetype></string></subtype>
        <subtype><typename>Index</typename><string>Index = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Index</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>getImageCount</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getImageCount(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxImageList">wxImageList()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getSize</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getSize(This, Index) -&gt; Result</head>
      <guard>
        <subtype><typename>Result</typename><string>Result = <br/><nbsp/><nbsp/><nbsp/><nbsp/>{Res :: <seetype marker="erlang#boolean">boolean()</seetype>, Width :: <seetype marker="erlang#integer">integer()</seetype>, Height :: <seetype marker="erlang#integer">integer()</seetype>}</string></subtype>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxImageList">wxImageList()</seetype></string></subtype>
        <subtype><typename>Index</typename><string>Index = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Height</anno>
  <anno>Index</anno>
  <anno>Res</anno>
  <anno>Result</anno>
  <anno>This</anno>
  <anno>Width</anno>
</spec>
<spec>
  <name>new</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>new() -&gt; <seetype marker="#wxImageList">wxImageList()</seetype></head></clause>
  </contract>
</spec>
<spec>
  <name>new</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>new(Width, Height) -&gt; <seetype marker="#wxImageList">wxImageList()</seetype></head>
      <guard>
        <subtype><typename>Width</typename><string>Width = Height = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Height</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Height</anno>
  <anno>Width</anno>
</spec>
<spec>
  <name>new</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>new(Width, Height, Options :: [Option]) -&gt; <seetype marker="#wxImageList">wxImageList()</seetype></head>
      <guard>
        <subtype><typename>Width</typename><string>Width = Height = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Height</typename><string/></subtype>
        <subtype><typename>Option</typename><string>Option = {mask, <seetype marker="erlang#boolean">boolean()</seetype>} | {initialCount, <seetype marker="erlang#integer">integer()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>Height</anno>
  <anno>Option</anno>
  <anno>Options</anno>
  <anno>Width</anno>
</spec>
<spec>
  <name>parent_class</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>remove</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>remove(This, Index) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxImageList">wxImageList()</seetype></string></subtype>
        <subtype><typename>Index</typename><string>Index = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Index</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>removeAll</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>removeAll(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxImageList">wxImageList()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>replace</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>replace(This, Index, Icon) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxImageList">wxImageList()</seetype></string></subtype>
        <subtype><typename>Index</typename><string>Index = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Icon</typename><string>Icon = <seetype marker="wxIcon#wxIcon">wxIcon:wxIcon()</seetype> | <seetype marker="wxBitmap#wxBitmap">wxBitmap:wxBitmap()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Icon</anno>
  <anno>Index</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>replace</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>replace(This, Index, Bitmap, Mask) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxImageList">wxImageList()</seetype></string></subtype>
        <subtype><typename>Index</typename><string>Index = <seetype marker="erlang#integer">integer()</seetype></string></subtype>
        <subtype><typename>Bitmap</typename><string>Bitmap = Mask = <seetype marker="wxBitmap#wxBitmap">wxBitmap:wxBitmap()</seetype></string></subtype>
        <subtype><typename>Mask</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Bitmap</anno>
  <anno>Index</anno>
  <anno>Mask</anno>
  <anno>This</anno>
</spec>
<timestamp>Generated by EDoc, May 17 2022, 21:44:37.</timestamp>
</module>