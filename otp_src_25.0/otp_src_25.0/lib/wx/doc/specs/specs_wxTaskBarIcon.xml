<module name="wxTaskBarIcon">
<type>
  <name>wxTaskBarIcon</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-wxTaskBarIcon">wxTaskBarIcon()</marker> = <seetype marker="wx#wx_object">wx:wx_object()</seetype></typehead></typedecl>
</type>
<spec>
  <name>connect</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>connect</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>destroy</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>destroy(This :: <seetype marker="#wxTaskBarIcon">wxTaskBarIcon()</seetype>) -&gt; ok</head></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>disconnect</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>disconnect</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>disconnect</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>new</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>new() -&gt; <seetype marker="#wxTaskBarIcon">wxTaskBarIcon()</seetype></head></clause>
  </contract>
</spec>
<spec>
  <name>new</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>new(Options :: [Option]) -&gt; <seetype marker="#wxTaskBarIcon">wxTaskBarIcon()</seetype></head>
      <guard>
        <subtype><typename>Option</typename><string>Option = <br/><nbsp/><nbsp/><nbsp/><nbsp/>{iconType, <seetype marker="wx#wx_enum">wx:wx_enum()</seetype>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{createPopupMenu, fun(() -&gt; <seetype marker="wxMenu#wxMenu">wxMenu:wxMenu()</seetype>)}</string></subtype>
      </guard></clause>
  </contract>
  <anno>Option</anno>
  <anno>Options</anno>
</spec>
<spec>
  <name>parent_class</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>popupMenu</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>popupMenu(This, Menu) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxTaskBarIcon">wxTaskBarIcon()</seetype></string></subtype>
        <subtype><typename>Menu</typename><string>Menu = <seetype marker="wxMenu#wxMenu">wxMenu:wxMenu()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Menu</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>removeIcon</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>removeIcon(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxTaskBarIcon">wxTaskBarIcon()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>setIcon</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setIcon(This, Icon) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxTaskBarIcon">wxTaskBarIcon()</seetype></string></subtype>
        <subtype><typename>Icon</typename><string>Icon = <seetype marker="wxIcon#wxIcon">wxIcon:wxIcon()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Icon</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>setIcon</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>setIcon(This, Icon, Options :: [Option]) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxTaskBarIcon">wxTaskBarIcon()</seetype></string></subtype>
        <subtype><typename>Icon</typename><string>Icon = <seetype marker="wxIcon#wxIcon">wxIcon:wxIcon()</seetype></string></subtype>
        <subtype><typename>Option</typename><string>Option = {tooltip, <seetype marker="unicode#chardata">unicode:chardata()</seetype>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>Icon</anno>
  <anno>Option</anno>
  <anno>Options</anno>
  <anno>This</anno>
</spec>
<timestamp>Generated by EDoc, May 17 2022, 21:44:45.</timestamp>
</module>