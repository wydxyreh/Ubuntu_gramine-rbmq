<module name="wxKeyEvent">
<type>
  <name>wxKey</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-wxKey">wxKey()</marker> = <br/><nbsp/><nbsp/><nbsp/><nbsp/>#wxKey{type = <seetype marker="wxKeyEvent#wxKeyEventType">wxKeyEvent:wxKeyEventType()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>x = <seetype marker="erlang#integer">integer()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>y = <seetype marker="erlang#integer">integer()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>keyCode = <seetype marker="erlang#integer">integer()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>controlDown = <seetype marker="erlang#boolean">boolean()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>shiftDown = <seetype marker="erlang#boolean">boolean()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>altDown = <seetype marker="erlang#boolean">boolean()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>metaDown = <seetype marker="erlang#boolean">boolean()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>uniChar = <seetype marker="erlang#integer">integer()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>rawCode = <seetype marker="erlang#integer">integer()</seetype>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>rawFlags = <seetype marker="erlang#integer">integer()</seetype>}</typehead></typedecl>
</type>
<type>
  <name>wxKeyEvent</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-wxKeyEvent">wxKeyEvent()</marker> = <seetype marker="wx#wx_object">wx:wx_object()</seetype></typehead></typedecl>
</type>
<type>
  <name>wxKeyEventType</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-wxKeyEventType">wxKeyEventType()</marker> = char | char_hook | key_down | key_up</typehead></typedecl>
</type>
<spec>
  <name>altDown</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>altDown(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxKeyEvent">wxKeyEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>cmdDown</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>cmdDown(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxKeyEvent">wxKeyEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>controlDown</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>controlDown(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxKeyEvent">wxKeyEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getId</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getKeyCode</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getKeyCode(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxKeyEvent">wxKeyEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getModifiers</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getModifiers(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxKeyEvent">wxKeyEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getPosition</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getPosition(This) -&gt; {X :: <seetype marker="erlang#integer">integer()</seetype>, Y :: <seetype marker="erlang#integer">integer()</seetype>}</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxKeyEvent">wxKeyEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>getRawKeyCode</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getRawKeyCode(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxKeyEvent">wxKeyEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getRawKeyFlags</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getRawKeyFlags(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxKeyEvent">wxKeyEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getSkipped</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getTimestamp</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getUnicodeKey</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getUnicodeKey(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxKeyEvent">wxKeyEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getX</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getX(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxKeyEvent">wxKeyEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getY</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getY(This) -&gt; <seetype marker="erlang#integer">integer()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxKeyEvent">wxKeyEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>hasModifiers</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>hasModifiers(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxKeyEvent">wxKeyEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>isCommandEvent</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>metaDown</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>metaDown(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxKeyEvent">wxKeyEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>parent_class</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>resumePropagation</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>shiftDown</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>shiftDown(This) -&gt; <seetype marker="erlang#boolean">boolean()</seetype></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seetype marker="#wxKeyEvent">wxKeyEvent()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>shouldPropagate</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>skip</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>skip</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>stopPropagation</name>
  <arity>1</arity>
  <contract/>
</spec>
<timestamp>Generated by EDoc, May 17 2022, 21:44:37.</timestamp>
</module>