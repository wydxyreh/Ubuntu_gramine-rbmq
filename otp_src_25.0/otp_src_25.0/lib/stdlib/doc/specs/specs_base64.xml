<module name="base64">
<type>
  <name>base64_alphabet</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-base64_alphabet">base64_alphabet()</marker> = 65..90 | 97..122 | 48..57 | 43 | 47 | 61</typehead></typedecl>
</type>
<type>
  <name>base64_binary</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-base64_binary">base64_binary()</marker> = <seetype marker="erlang#binary">binary()</seetype></typehead></typedecl>
</type>
<type>
  <name>base64_string</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-base64_string">base64_string()</marker> = [<seetype marker="#base64_alphabet">base64_alphabet()</seetype>]</typehead></typedecl>
</type>
<type>
  <name>byte_string</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-byte_string">byte_string()</marker> = [<seetype marker="erlang#byte">byte()</seetype>]</typehead></typedecl>
</type>
<spec>
  <name>decode</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>decode(Base64) -&gt; Data</head>
      <guard>
        <subtype><typename>Base64</typename><string>Base64 = <seetype marker="#base64_string">base64_string()</seetype> | <seetype marker="#base64_binary">base64_binary()</seetype></string></subtype>
        <subtype><typename>Data</typename><string>Data = <seetype marker="erlang#binary">binary()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Base64</anno>
  <anno>Data</anno>
</spec>
<spec>
  <name>decode_to_string</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>decode_to_string(Base64) -&gt; DataString</head>
      <guard>
        <subtype><typename>Base64</typename><string>Base64 = <seetype marker="#base64_string">base64_string()</seetype> | <seetype marker="#base64_binary">base64_binary()</seetype></string></subtype>
        <subtype><typename>DataString</typename><string>DataString = <seetype marker="#byte_string">byte_string()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Base64</anno>
  <anno>DataString</anno>
</spec>
<spec>
  <name>encode</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>encode(Data) -&gt; Base64</head>
      <guard>
        <subtype><typename>Data</typename><string>Data = <seetype marker="#byte_string">byte_string()</seetype> | <seetype marker="erlang#binary">binary()</seetype></string></subtype>
        <subtype><typename>Base64</typename><string>Base64 = <seetype marker="#base64_binary">base64_binary()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Base64</anno>
  <anno>Data</anno>
</spec>
<spec>
  <name>encode_to_string</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>encode_to_string(Data) -&gt; Base64String</head>
      <guard>
        <subtype><typename>Data</typename><string>Data = <seetype marker="#byte_string">byte_string()</seetype> | <seetype marker="erlang#binary">binary()</seetype></string></subtype>
        <subtype><typename>Base64String</typename><string>Base64String = <seetype marker="#base64_string">base64_string()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Base64String</anno>
  <anno>Data</anno>
</spec>
<spec>
  <name>mime_decode</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>mime_decode(Base64) -&gt; Data</head>
      <guard>
        <subtype><typename>Base64</typename><string>Base64 = <seetype marker="#base64_string">base64_string()</seetype> | <seetype marker="#base64_binary">base64_binary()</seetype></string></subtype>
        <subtype><typename>Data</typename><string>Data = <seetype marker="erlang#binary">binary()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Base64</anno>
  <anno>Data</anno>
</spec>
<spec>
  <name>mime_decode_to_string</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>mime_decode_to_string(Base64) -&gt; DataString</head>
      <guard>
        <subtype><typename>Base64</typename><string>Base64 = <seetype marker="#base64_string">base64_string()</seetype> | <seetype marker="#base64_binary">base64_binary()</seetype></string></subtype>
        <subtype><typename>DataString</typename><string>DataString = <seetype marker="#byte_string">byte_string()</seetype></string></subtype>
      </guard></clause>
  </contract>
  <anno>Base64</anno>
  <anno>DataString</anno>
</spec>
<timestamp>Generated by EDoc, May 17 2022, 21:43:15.</timestamp>
</module>